{"version":3,"file":"index-8a285cbb.js","sources":["../../node_modules/break_eternity.js/dist/break_eternity.esm.js","../../src/util.ts","../../src/player.ts","../../src/music.ts","../../src/upgrades.ts","../../src/achievements.ts","../../src/features.ts","../../src/main.ts"],"sourcesContent":["function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\n/**\r\n * A LRU cache intended for caching pure functions.\r\n */\nvar LRUCache = /*#__PURE__*/function () {\n  /**\r\n   * @param maxSize The maximum size for this cache. We recommend setting this\r\n   * to be one less than a power of 2, as most hashtables - including V8's\r\n   * Object hashtable (https://crsrc.org/c/v8/src/objects/ordered-hash-table.cc)\r\n   * - uses powers of two for hashtable sizes. It can't exactly be a power of\r\n   * two, as a .set() call could temporarily set the size of the map to be\r\n   * maxSize + 1.\r\n   */\n  function LRUCache(maxSize) {\n    _classCallCheck(this, LRUCache);\n\n    this.map = new Map(); // Invariant: Exactly one of the below is true before and after calling a\n    // LRUCache method:\n    // - first and last are both undefined, and map.size() is 0.\n    // - first and last are the same object, and map.size() is 1.\n    // - first and last are different objects, and map.size() is greater than 1.\n\n    this.first = undefined;\n    this.last = undefined;\n    this.maxSize = maxSize;\n  }\n\n  _createClass(LRUCache, [{\n    key: \"size\",\n    get: function get() {\n      return this.map.size;\n    }\n    /**\r\n     * Gets the specified key from the cache, or undefined if it is not in the\r\n     * cache.\r\n     * @param key The key to get.\r\n     * @returns The cached value, or undefined if key is not in the cache.\r\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      var node = this.map.get(key);\n\n      if (node === undefined) {\n        return undefined;\n      } // It is guaranteed that there is at least one item in the cache.\n      // Therefore, first and last are guaranteed to be a ListNode...\n      // but if there is only one item, they might be the same.\n      // Update the order of the list to make this node the first node in the\n      // list.\n      // This isn't needed if this node is already the first node in the list.\n\n\n      if (node !== this.first) {\n        // As this node is DIFFERENT from the first node, it is guaranteed that\n        // there are at least two items in the cache.\n        // However, this node could possibly be the last item.\n        if (node === this.last) {\n          // This node IS the last node.\n          this.last = node.prev; // From the invariants, there must be at least two items in the cache,\n          // so node - which is the original \"last node\" - must have a defined\n          // previous node. Therefore, this.last - set above - must be defined\n          // here.\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n          this.last.next = undefined;\n        } else {\n          // This node is somewhere in the middle of the list, so there must be at\n          // least THREE items in the list, and this node's prev and next must be\n          // defined here.\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          node.prev.next = node.next; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n          node.next.prev = node.prev;\n        }\n\n        node.next = this.first; // From the invariants, there must be at least two items in the cache, so\n        // this.first must be a valid ListNode.\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n        this.first.prev = node;\n        this.first = node;\n      }\n\n      return node.value;\n    }\n    /**\r\n     * Sets an entry in the cache.\r\n     *\r\n     * @param key The key of the entry.\r\n     * @param value The value of the entry.\r\n     * @throws Error, if the map already contains the key.\r\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      // Ensure that this.maxSize >= 1.\n      if (this.maxSize < 1) {\n        return;\n      }\n\n      if (this.map.has(key)) {\n        throw new Error(\"Cannot update existing keys in the cache\");\n      }\n\n      var node = new ListNode(key, value); // Move node to the front of the list.\n\n      if (this.first === undefined) {\n        // If the first is undefined, the last is undefined too.\n        // Therefore, this cache has no items in it.\n        this.first = node;\n        this.last = node;\n      } else {\n        // This cache has at least one item in it.\n        node.next = this.first;\n        this.first.prev = node;\n        this.first = node;\n      }\n\n      this.map.set(key, node);\n\n      while (this.map.size > this.maxSize) {\n        // We are guaranteed that this.maxSize >= 1,\n        // so this.map.size is guaranteed to be >= 2,\n        // so this.first and this.last must be different valid ListNodes,\n        // and this.last.prev must also be a valid ListNode (possibly this.first).\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        var last = this.last;\n        this.map[\"delete\"](last.key);\n        this.last = last.prev; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n        this.last.next = undefined;\n      }\n    }\n  }]);\n\n  return LRUCache;\n}();\n/**\r\n * A node in a doubly linked list.\r\n */\n\nvar ListNode = /*#__PURE__*/_createClass(function ListNode(key, value) {\n  _classCallCheck(this, ListNode);\n\n  this.next = undefined;\n  this.prev = undefined;\n  this.key = key;\n  this.value = value;\n});\n\nvar MAX_SIGNIFICANT_DIGITS = 17; //Maximum number of digits of precision to assume in Number\n\nvar EXP_LIMIT = 9e15; //If we're ABOVE this value, increase a layer. (9e15 is close to the largest integer that can fit in a Number.)\n\nvar LAYER_DOWN = Math.log10(9e15);\nvar FIRST_NEG_LAYER = 1 / 9e15; //At layer 0, smaller non-zero numbers than this become layer 1 numbers with negative mag. After that the pattern continues as normal.\n\nvar NUMBER_EXP_MAX = 308; //The largest exponent that can appear in a Number, though not all mantissas are valid here.\n\nvar NUMBER_EXP_MIN = -324; //The smallest exponent that can appear in a Number, though not all mantissas are valid here.\n\nvar MAX_ES_IN_A_ROW = 5; //For default toString behaviour, when to swap from eee... to (e^n) syntax.\n\nvar DEFAULT_FROM_STRING_CACHE_SIZE = (1 << 10) - 1; // The default size of the LRU cache used to cache Decimal.fromString.\n\nvar powerOf10 = function () {\n  // We need this lookup table because Math.pow(10, exponent)\n  // when exponent's absolute value is large is slightly inaccurate.\n  // You can fix it with the power of math... or just make a lookup table.\n  // Faster AND simpler\n  var powersOf10 = [];\n\n  for (var i = NUMBER_EXP_MIN + 1; i <= NUMBER_EXP_MAX; i++) {\n    powersOf10.push(Number(\"1e\" + i));\n  }\n\n  var indexOf0InPowersOf10 = 323;\n  return function (power) {\n    return powersOf10[power + indexOf0InPowersOf10];\n  };\n}(); //tetration/slog to real height stuff\n//background info and tables of values for critical functions taken here: https://github.com/Patashu/break_eternity.js/issues/22\n\n\nvar critical_headers = [2, Math.E, 3, 4, 5, 6, 7, 8, 9, 10];\nvar critical_tetr_values = [[// Base 2 (using http://myweb.astate.edu/wpaulsen/tetcalc/tetcalc.html )\n1, 1.0891180521811202527, 1.1789767925673958433, 1.2701455431742086633, 1.3632090180450091941, 1.4587818160364217007, 1.5575237916251418333, 1.6601571006859253673, 1.7674858188369780435, 1.8804192098842727359, 2], [// Base E (using http://myweb.astate.edu/wpaulsen/tetcalc/tetcalc.html )\n1, 1.1121114330934078681, 1.2310389249316089299, 1.3583836963111376089, 1.4960519303993531879, 1.6463542337511945810, 1.8121385357018724464, 1.9969713246183068478, 2.2053895545527544330, 2.4432574483385252544, Math.E //1.0\n], [// Base 3\n1, 1.1187738849693603, 1.2464963939368214, 1.38527004705667, 1.5376664685821402, 1.7068895236551784, 1.897001227148399, 2.1132403089001035, 2.362480153784171, 2.6539010333870774, 3], [// Base 4\n1, 1.1367350847096405, 1.2889510672956703, 1.4606478703324786, 1.6570295196661111, 1.8850062585672889, 2.1539465047453485, 2.476829779693097, 2.872061932789197, 3.3664204535587183, 4], [// Base 5\n1, 1.1494592900767588, 1.319708228183931, 1.5166291280087583, 1.748171114438024, 2.0253263297298045, 2.3636668498288547, 2.7858359149579424, 3.3257226212448145, 4.035730287722532, 5], [// Base 6\n1, 1.159225940787673, 1.343712473580932, 1.5611293155111927, 1.8221199554561318, 2.14183924486326, 2.542468319282638, 3.0574682501653316, 3.7390572020926873, 4.6719550537360774, 6], [// Base 7\n1, 1.1670905356972596, 1.3632807444991446, 1.5979222279405536, 1.8842640123816674, 2.2416069644878687, 2.69893426559423, 3.3012632110403577, 4.121250340630164, 5.281493033448316, 7], [// Base 8\n1, 1.1736630594087796, 1.379783782386201, 1.6292821855668218, 1.9378971836180754, 2.3289975651071977, 2.8384347394720835, 3.5232708454565906, 4.478242031114584, 5.868592169644505, 8], [// Base 9\n1, 1.1793017514670474, 1.394054150657457, 1.65664127441059, 1.985170999970283, 2.4069682290577457, 2.9647310119960752, 3.7278665320924946, 4.814462547283592, 6.436522247411611, 9], [// Base 10 (using http://myweb.astate.edu/wpaulsen/tetcalc/tetcalc.html )\n1, 1.1840100246247336579, 1.4061375836156954169, 1.6802272208863963918, 2.026757028388618927, 2.4770056063449647580, 3.0805252717554819987, 3.9191964192627283911, 5.1351528408331864230, 6.9899611795347148455, 10]];\nvar critical_slog_values = [[// Base 2\n-1, -0.9194161097107025, -0.8335625019330468, -0.7425599821143978, -0.6466611521029437, -0.5462617907227869, -0.4419033816638769, -0.3342645487554494, -0.224140440909962, -0.11241087890006762, 0], [// Base E\n-1, -0.90603157029014, -0.80786507256596, -0.7064666939634, -0.60294836853664, -0.49849837513117, -0.39430303318768, -0.29147201034755, -0.19097820800866, -0.09361896280296, 0 //1.0\n], [// Base 3\n-1, -0.9021579584316141, -0.8005762598234203, -0.6964780623319391, -0.5911906810998454, -0.486050182576545, -0.3823089430815083, -0.28106046722897615, -0.1831906535795894, -0.08935809204418144, 0], [// Base 4\n-1, -0.8917227442365535, -0.781258746326964, -0.6705130326902455, -0.5612813129406509, -0.4551067709033134, -0.35319256652135966, -0.2563741554088552, -0.1651412821106526, -0.0796919581982668, 0], [// Base 5\n-1, -0.8843387974366064, -0.7678744063886243, -0.6529563724510552, -0.5415870994657841, -0.4352842206588936, -0.33504449124791424, -0.24138853420685147, -0.15445285440944467, -0.07409659641336663, 0], [// Base 6\n-1, -0.8786709358426346, -0.7577735191184886, -0.6399546189952064, -0.527284921869926, -0.4211627631006314, -0.3223479611761232, -0.23107655627789858, -0.1472057700818259, -0.07035171210706326, 0], [// Base 7\n-1, -0.8740862815291583, -0.7497032990976209, -0.6297119746181752, -0.5161838335958787, -0.41036238255751956, -0.31277212146489963, -0.2233976621705518, -0.1418697367979619, -0.06762117662323441, 0], [// Base 8\n-1, -0.8702632331800649, -0.7430366914122081, -0.6213373075161548, -0.5072025698095242, -0.40171437727184167, -0.30517930701410456, -0.21736343968190863, -0.137710238299109, -0.06550774483471955, 0], [// Base 9\n-1, -0.8670016295947213, -0.7373984232432306, -0.6143173985094293, -0.49973884395492807, -0.394584953527678, -0.2989649949848695, -0.21245647317021688, -0.13434688362382652, -0.0638072667348083, 0], [// Base 10\n-1, -0.8641642839543857, -0.732534623168535, -0.6083127477059322, -0.4934049257184696, -0.3885773075899922, -0.29376029055315767, -0.2083678561173622, -0.13155653399373268, -0.062401588652553186, 0]];\n\nvar D = function D(value) {\n  return Decimal.fromValue_noAlloc(value);\n};\n\nvar FC = function FC(sign, layer, mag) {\n  return Decimal.fromComponents(sign, layer, mag);\n};\n\nvar FC_NN = function FC_NN(sign, layer, mag) {\n  return Decimal.fromComponents_noNormalize(sign, layer, mag);\n}; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nvar decimalPlaces = function decimalPlaces(value, places) {\n  var len = places + 1;\n  var numDigits = Math.ceil(Math.log10(Math.abs(value)));\n  var rounded = Math.round(value * Math.pow(10, len - numDigits)) * Math.pow(10, numDigits - len);\n  return parseFloat(rounded.toFixed(Math.max(len - numDigits, 0)));\n};\n\nvar f_maglog10 = function f_maglog10(n) {\n  return Math.sign(n) * Math.log10(Math.abs(n));\n}; //from HyperCalc source code\n\n\nvar f_gamma = function f_gamma(n) {\n  if (!isFinite(n)) {\n    return n;\n  }\n\n  if (n < -50) {\n    if (n === Math.trunc(n)) {\n      return Number.NEGATIVE_INFINITY;\n    }\n\n    return 0;\n  }\n\n  var scal1 = 1;\n\n  while (n < 10) {\n    scal1 = scal1 * n;\n    ++n;\n  }\n\n  n -= 1;\n  var l = 0.9189385332046727; //0.5*Math.log(2*Math.PI)\n\n  l = l + (n + 0.5) * Math.log(n);\n  l = l - n;\n  var n2 = n * n;\n  var np = n;\n  l = l + 1 / (12 * np);\n  np = np * n2;\n  l = l + 1 / (360 * np);\n  np = np * n2;\n  l = l + 1 / (1260 * np);\n  np = np * n2;\n  l = l + 1 / (1680 * np);\n  np = np * n2;\n  l = l + 1 / (1188 * np);\n  np = np * n2;\n  l = l + 691 / (360360 * np);\n  np = np * n2;\n  l = l + 7 / (1092 * np);\n  np = np * n2;\n  l = l + 3617 / (122400 * np);\n  return Math.exp(l) / scal1;\n};\n\nvar OMEGA = 0.56714329040978387299997; // W(1, 0)\n//from https://math.stackexchange.com/a/465183\n// The evaluation can become inaccurate very close to the branch point\n\nvar f_lambertw = function f_lambertw(z) {\n  var tol = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1e-10;\n  var w;\n  var wn;\n\n  if (!Number.isFinite(z)) {\n    return z;\n  }\n\n  if (z === 0) {\n    return z;\n  }\n\n  if (z === 1) {\n    return OMEGA;\n  }\n\n  if (z < 10) {\n    w = 0;\n  } else {\n    w = Math.log(z) - Math.log(Math.log(z));\n  }\n\n  for (var i = 0; i < 100; ++i) {\n    wn = (z * Math.exp(-w) + w * w) / (w + 1);\n\n    if (Math.abs(wn - w) < tol * Math.abs(wn)) {\n      return wn;\n    } else {\n      w = wn;\n    }\n  }\n\n  throw Error(\"Iteration failed to converge: \".concat(z.toString())); //return Number.NaN;\n}; //from https://github.com/scipy/scipy/blob/8dba340293fe20e62e173bdf2c10ae208286692f/scipy/special/lambertw.pxd\n// The evaluation can become inaccurate very close to the branch point\n// at ``-1/e``. In some corner cases, `lambertw` might currently\n// fail to converge, or can end up on the wrong branch.\n\n\nfunction d_lambertw(z) {\n  var tol = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1e-10;\n  var w;\n  var ew, wewz, wn;\n\n  if (!Number.isFinite(z.mag)) {\n    return z;\n  }\n\n  if (z.eq(Decimal.dZero)) {\n    return z;\n  }\n\n  if (z.eq(Decimal.dOne)) {\n    //Split out this case because the asymptotic series blows up\n    return Decimal.fromNumber(OMEGA);\n  } //Get an initial guess for Halley's method\n\n\n  w = Decimal.ln(z); //Halley's method; see 5.9 in [1]\n\n  for (var i = 0; i < 100; ++i) {\n    ew = w.neg().exp();\n    wewz = w.sub(z.mul(ew));\n    wn = w.sub(wewz.div(w.add(1).sub(w.add(2).mul(wewz).div(Decimal.mul(2, w).add(2)))));\n\n    if (Decimal.abs(wn.sub(w)).lt(Decimal.abs(wn).mul(tol))) {\n      return wn;\n    } else {\n      w = wn;\n    }\n  }\n\n  throw Error(\"Iteration failed to converge: \".concat(z.toString())); //return Decimal.dNaN;\n}\n/**\r\n * The Decimal's value is simply mantissa * 10^exponent.\r\n */\n\n\nvar Decimal = /*#__PURE__*/function () {\n  function Decimal(value) {\n    _classCallCheck(this, Decimal);\n\n    this.sign = 0;\n    this.mag = 0;\n    this.layer = 0;\n\n    if (value instanceof Decimal) {\n      this.fromDecimal(value);\n    } else if (typeof value === \"number\") {\n      this.fromNumber(value);\n    } else if (typeof value === \"string\") {\n      this.fromString(value);\n    }\n  }\n\n  _createClass(Decimal, [{\n    key: \"m\",\n    get: function get() {\n      if (this.sign === 0) {\n        return 0;\n      } else if (this.layer === 0) {\n        var exp = Math.floor(Math.log10(this.mag)); //handle special case 5e-324\n\n        var man;\n\n        if (this.mag === 5e-324) {\n          man = 5;\n        } else {\n          man = this.mag / powerOf10(exp);\n        }\n\n        return this.sign * man;\n      } else if (this.layer === 1) {\n        var residue = this.mag - Math.floor(this.mag);\n        return this.sign * Math.pow(10, residue);\n      } else {\n        //mantissa stops being relevant past 1e9e15 / ee15.954\n        return this.sign;\n      }\n    },\n    set: function set(value) {\n      if (this.layer <= 2) {\n        this.fromMantissaExponent(value, this.e);\n      } else {\n        //don't even pretend mantissa is meaningful\n        this.sign = Math.sign(value);\n\n        if (this.sign === 0) {\n          this.layer = 0;\n          this.exponent = 0;\n        }\n      }\n    }\n  }, {\n    key: \"e\",\n    get: function get() {\n      if (this.sign === 0) {\n        return 0;\n      } else if (this.layer === 0) {\n        return Math.floor(Math.log10(this.mag));\n      } else if (this.layer === 1) {\n        return Math.floor(this.mag);\n      } else if (this.layer === 2) {\n        return Math.floor(Math.sign(this.mag) * Math.pow(10, Math.abs(this.mag)));\n      } else {\n        return this.mag * Number.POSITIVE_INFINITY;\n      }\n    },\n    set: function set(value) {\n      this.fromMantissaExponent(this.m, value);\n    }\n  }, {\n    key: \"s\",\n    get: function get() {\n      return this.sign;\n    },\n    set: function set(value) {\n      if (value === 0) {\n        this.sign = 0;\n        this.layer = 0;\n        this.mag = 0;\n      } else {\n        this.sign = value;\n      }\n    } // Object.defineProperty(Decimal.prototype, \"mantissa\", {\n\n  }, {\n    key: \"mantissa\",\n    get: function get() {\n      return this.m;\n    },\n    set: function set(value) {\n      this.m = value;\n    }\n  }, {\n    key: \"exponent\",\n    get: function get() {\n      return this.e;\n    },\n    set: function set(value) {\n      this.e = value;\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize() {\n      /*\r\n      PSEUDOCODE:\r\n      Whenever we are partially 0 (sign is 0 or mag and layer is 0), make it fully 0.\r\n      Whenever we are at or hit layer 0, extract sign from negative mag.\r\n      If layer === 0 and mag < FIRST_NEG_LAYER (1/9e15), shift to 'first negative layer' (add layer, log10 mag).\r\n      While abs(mag) > EXP_LIMIT (9e15), layer += 1, mag = maglog10(mag).\r\n      While abs(mag) < LAYER_DOWN (15.954) and layer > 0, layer -= 1, mag = pow(10, mag).\r\n            When we're done, all of the following should be true OR one of the numbers is not IsFinite OR layer is not IsInteger (error state):\r\n      Any 0 is totally zero (0, 0, 0).\r\n      Anything layer 0 has mag 0 OR mag > 1/9e15 and < 9e15.\r\n      Anything layer 1 or higher has abs(mag) >= 15.954 and < 9e15.\r\n      We will assume in calculations that all Decimals are either erroneous or satisfy these criteria. (Otherwise: Garbage in, garbage out.)\r\n      */\n      if (this.sign === 0 || this.mag === 0 && this.layer === 0) {\n        this.sign = 0;\n        this.mag = 0;\n        this.layer = 0;\n        return this;\n      }\n\n      if (this.layer === 0 && this.mag < 0) {\n        //extract sign from negative mag at layer 0\n        this.mag = -this.mag;\n        this.sign = -this.sign;\n      } //Handle shifting from layer 0 to negative layers.\n\n\n      if (this.layer === 0 && this.mag < FIRST_NEG_LAYER) {\n        this.layer += 1;\n        this.mag = Math.log10(this.mag);\n        return this;\n      }\n\n      var absmag = Math.abs(this.mag);\n      var signmag = Math.sign(this.mag);\n\n      if (absmag >= EXP_LIMIT) {\n        this.layer += 1;\n        this.mag = signmag * Math.log10(absmag);\n        return this;\n      } else {\n        while (absmag < LAYER_DOWN && this.layer > 0) {\n          this.layer -= 1;\n\n          if (this.layer === 0) {\n            this.mag = Math.pow(10, this.mag);\n          } else {\n            this.mag = signmag * Math.pow(10, absmag);\n            absmag = Math.abs(this.mag);\n            signmag = Math.sign(this.mag);\n          }\n        }\n\n        if (this.layer === 0) {\n          if (this.mag < 0) {\n            //extract sign from negative mag at layer 0\n            this.mag = -this.mag;\n            this.sign = -this.sign;\n          } else if (this.mag === 0) {\n            //excessive rounding can give us all zeroes\n            this.sign = 0;\n          }\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"fromComponents\",\n    value: function fromComponents(sign, layer, mag) {\n      this.sign = sign;\n      this.layer = layer;\n      this.mag = mag;\n      this.normalize();\n      return this;\n    }\n  }, {\n    key: \"fromComponents_noNormalize\",\n    value: function fromComponents_noNormalize(sign, layer, mag) {\n      this.sign = sign;\n      this.layer = layer;\n      this.mag = mag;\n      return this;\n    }\n  }, {\n    key: \"fromMantissaExponent\",\n    value: function fromMantissaExponent(mantissa, exponent) {\n      this.layer = 1;\n      this.sign = Math.sign(mantissa);\n      mantissa = Math.abs(mantissa);\n      this.mag = exponent + Math.log10(mantissa);\n      this.normalize();\n      return this;\n    }\n  }, {\n    key: \"fromMantissaExponent_noNormalize\",\n    value: function fromMantissaExponent_noNormalize(mantissa, exponent) {\n      //The idea of 'normalizing' a break_infinity.js style Decimal doesn't really apply. So just do the same thing.\n      this.fromMantissaExponent(mantissa, exponent);\n      return this;\n    }\n  }, {\n    key: \"fromDecimal\",\n    value: function fromDecimal(value) {\n      this.sign = value.sign;\n      this.layer = value.layer;\n      this.mag = value.mag;\n      return this;\n    }\n  }, {\n    key: \"fromNumber\",\n    value: function fromNumber(value) {\n      this.mag = Math.abs(value);\n      this.sign = Math.sign(value);\n      this.layer = 0;\n      this.normalize();\n      return this;\n    }\n  }, {\n    key: \"fromString\",\n    value: function fromString(value) {\n      var originalValue = value;\n      var cached = Decimal.fromStringCache.get(originalValue);\n\n      if (cached !== undefined) {\n        return this.fromDecimal(cached);\n      }\n\n      {\n        value = value.replace(\",\", \"\");\n      } //Handle x^^^y format.\n\n\n      var pentationparts = value.split(\"^^^\");\n\n      if (pentationparts.length === 2) {\n        var _base = parseFloat(pentationparts[0]);\n\n        var _height = parseFloat(pentationparts[1]);\n\n        var heightparts = pentationparts[1].split(\";\");\n        var payload = 1;\n\n        if (heightparts.length === 2) {\n          payload = parseFloat(heightparts[1]);\n\n          if (!isFinite(payload)) {\n            payload = 1;\n          }\n        }\n\n        if (isFinite(_base) && isFinite(_height)) {\n          var result = Decimal.pentate(_base, _height, payload);\n          this.sign = result.sign;\n          this.layer = result.layer;\n          this.mag = result.mag;\n\n          if (Decimal.fromStringCache.maxSize >= 1) {\n            Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\n          }\n\n          return this;\n        }\n      } //Handle x^^y format.\n\n\n      var tetrationparts = value.split(\"^^\");\n\n      if (tetrationparts.length === 2) {\n        var _base2 = parseFloat(tetrationparts[0]);\n\n        var _height2 = parseFloat(tetrationparts[1]);\n\n        var _heightparts = tetrationparts[1].split(\";\");\n\n        var _payload = 1;\n\n        if (_heightparts.length === 2) {\n          _payload = parseFloat(_heightparts[1]);\n\n          if (!isFinite(_payload)) {\n            _payload = 1;\n          }\n        }\n\n        if (isFinite(_base2) && isFinite(_height2)) {\n          var _result = Decimal.tetrate(_base2, _height2, _payload);\n\n          this.sign = _result.sign;\n          this.layer = _result.layer;\n          this.mag = _result.mag;\n\n          if (Decimal.fromStringCache.maxSize >= 1) {\n            Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\n          }\n\n          return this;\n        }\n      } //Handle x^y format.\n\n\n      var powparts = value.split(\"^\");\n\n      if (powparts.length === 2) {\n        var _base3 = parseFloat(powparts[0]);\n\n        var _exponent = parseFloat(powparts[1]);\n\n        if (isFinite(_base3) && isFinite(_exponent)) {\n          var _result2 = Decimal.pow(_base3, _exponent);\n\n          this.sign = _result2.sign;\n          this.layer = _result2.layer;\n          this.mag = _result2.mag;\n\n          if (Decimal.fromStringCache.maxSize >= 1) {\n            Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\n          }\n\n          return this;\n        }\n      } //Handle various cases involving it being a Big Number.\n\n\n      value = value.trim().toLowerCase(); //handle X PT Y format.\n\n      var base;\n      var height;\n      var ptparts = value.split(\"pt\");\n\n      if (ptparts.length === 2) {\n        base = 10;\n        height = parseFloat(ptparts[0]);\n        ptparts[1] = ptparts[1].replace(\"(\", \"\");\n        ptparts[1] = ptparts[1].replace(\")\", \"\");\n\n        var _payload2 = parseFloat(ptparts[1]);\n\n        if (!isFinite(_payload2)) {\n          _payload2 = 1;\n        }\n\n        if (isFinite(base) && isFinite(height)) {\n          var _result3 = Decimal.tetrate(base, height, _payload2);\n\n          this.sign = _result3.sign;\n          this.layer = _result3.layer;\n          this.mag = _result3.mag;\n\n          if (Decimal.fromStringCache.maxSize >= 1) {\n            Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\n          }\n\n          return this;\n        }\n      } //handle XpY format (it's the same thing just with p).\n\n\n      ptparts = value.split(\"p\");\n\n      if (ptparts.length === 2) {\n        base = 10;\n        height = parseFloat(ptparts[0]);\n        ptparts[1] = ptparts[1].replace(\"(\", \"\");\n        ptparts[1] = ptparts[1].replace(\")\", \"\");\n\n        var _payload3 = parseFloat(ptparts[1]);\n\n        if (!isFinite(_payload3)) {\n          _payload3 = 1;\n        }\n\n        if (isFinite(base) && isFinite(height)) {\n          var _result4 = Decimal.tetrate(base, height, _payload3);\n\n          this.sign = _result4.sign;\n          this.layer = _result4.layer;\n          this.mag = _result4.mag;\n\n          if (Decimal.fromStringCache.maxSize >= 1) {\n            Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\n          }\n\n          return this;\n        }\n      }\n\n      var parts = value.split(\"e\");\n      var ecount = parts.length - 1; //Handle numbers that are exactly floats (0 or 1 es).\n\n      if (ecount === 0) {\n        var numberAttempt = parseFloat(value);\n\n        if (isFinite(numberAttempt)) {\n          this.fromNumber(numberAttempt);\n\n          if (Decimal.fromStringCache.size >= 1) {\n            Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\n          }\n\n          return this;\n        }\n      } else if (ecount === 1) {\n        //Very small numbers (\"2e-3000\" and so on) may look like valid floats but round to 0.\n        var _numberAttempt = parseFloat(value);\n\n        if (isFinite(_numberAttempt) && _numberAttempt !== 0) {\n          this.fromNumber(_numberAttempt);\n\n          if (Decimal.fromStringCache.maxSize >= 1) {\n            Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\n          }\n\n          return this;\n        }\n      } //Handle new (e^N)X format.\n\n\n      var newparts = value.split(\"e^\");\n\n      if (newparts.length === 2) {\n        this.sign = 1;\n\n        if (newparts[0].charAt(0) == \"-\") {\n          this.sign = -1;\n        }\n\n        var layerstring = \"\";\n\n        for (var i = 0; i < newparts[1].length; ++i) {\n          var chrcode = newparts[1].charCodeAt(i);\n\n          if (chrcode >= 43 && chrcode <= 57 || chrcode === 101) {\n            //is \"0\" to \"9\" or \"+\" or \"-\" or \".\" or \"e\" (or \",\" or \"/\")\n            layerstring += newparts[1].charAt(i);\n          } //we found the end of the layer count\n          else {\n            this.layer = parseFloat(layerstring);\n            this.mag = parseFloat(newparts[1].substr(i + 1));\n            this.normalize();\n\n            if (Decimal.fromStringCache.maxSize >= 1) {\n              Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\n            }\n\n            return this;\n          }\n        }\n      }\n\n      if (ecount < 1) {\n        this.sign = 0;\n        this.layer = 0;\n        this.mag = 0;\n\n        if (Decimal.fromStringCache.maxSize >= 1) {\n          Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\n        }\n\n        return this;\n      }\n\n      var mantissa = parseFloat(parts[0]);\n\n      if (mantissa === 0) {\n        this.sign = 0;\n        this.layer = 0;\n        this.mag = 0;\n\n        if (Decimal.fromStringCache.maxSize >= 1) {\n          Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\n        }\n\n        return this;\n      }\n\n      var exponent = parseFloat(parts[parts.length - 1]); //handle numbers like AeBeC and AeeeeBeC\n\n      if (ecount >= 2) {\n        var me = parseFloat(parts[parts.length - 2]);\n\n        if (isFinite(me)) {\n          exponent *= Math.sign(me);\n          exponent += f_maglog10(me);\n        }\n      } //Handle numbers written like eee... (N es) X\n\n\n      if (!isFinite(mantissa)) {\n        this.sign = parts[0] === \"-\" ? -1 : 1;\n        this.layer = ecount;\n        this.mag = exponent;\n      } //Handle numbers written like XeY\n      else if (ecount === 1) {\n        this.sign = Math.sign(mantissa);\n        this.layer = 1; //Example: 2e10 is equal to 10^log10(2e10) which is equal to 10^(10+log10(2))\n\n        this.mag = exponent + Math.log10(Math.abs(mantissa));\n      } //Handle numbers written like Xeee... (N es) Y\n      else {\n        this.sign = Math.sign(mantissa);\n        this.layer = ecount;\n\n        if (ecount === 2) {\n          var _result5 = Decimal.mul(FC(1, 2, exponent), D(mantissa));\n\n          this.sign = _result5.sign;\n          this.layer = _result5.layer;\n          this.mag = _result5.mag;\n\n          if (Decimal.fromStringCache.maxSize >= 1) {\n            Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\n          }\n\n          return this;\n        } else {\n          //at eee and above, mantissa is too small to be recognizable!\n          this.mag = exponent;\n        }\n      }\n\n      this.normalize();\n\n      if (Decimal.fromStringCache.maxSize >= 1) {\n        Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\n      }\n\n      return this;\n    }\n  }, {\n    key: \"fromValue\",\n    value: function fromValue(value) {\n      if (value instanceof Decimal) {\n        return this.fromDecimal(value);\n      }\n\n      if (typeof value === \"number\") {\n        return this.fromNumber(value);\n      }\n\n      if (typeof value === \"string\") {\n        return this.fromString(value);\n      }\n\n      this.sign = 0;\n      this.layer = 0;\n      this.mag = 0;\n      return this;\n    }\n  }, {\n    key: \"toNumber\",\n    value: function toNumber() {\n      if (!Number.isFinite(this.layer)) {\n        return Number.NaN;\n      }\n\n      if (this.layer === 0) {\n        return this.sign * this.mag;\n      } else if (this.layer === 1) {\n        return this.sign * Math.pow(10, this.mag);\n      } //overflow for any normalized Decimal\n      else {\n        return this.mag > 0 ? this.sign > 0 ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY : 0;\n      }\n    }\n  }, {\n    key: \"mantissaWithDecimalPlaces\",\n    value: function mantissaWithDecimalPlaces(places) {\n      // https://stackoverflow.com/a/37425022\n      if (isNaN(this.m)) {\n        return Number.NaN;\n      }\n\n      if (this.m === 0) {\n        return 0;\n      }\n\n      return decimalPlaces(this.m, places);\n    }\n  }, {\n    key: \"magnitudeWithDecimalPlaces\",\n    value: function magnitudeWithDecimalPlaces(places) {\n      // https://stackoverflow.com/a/37425022\n      if (isNaN(this.mag)) {\n        return Number.NaN;\n      }\n\n      if (this.mag === 0) {\n        return 0;\n      }\n\n      return decimalPlaces(this.mag, places);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      if (isNaN(this.layer) || isNaN(this.sign) || isNaN(this.mag)) {\n        return \"NaN\";\n      }\n\n      if (this.mag === Number.POSITIVE_INFINITY || this.layer === Number.POSITIVE_INFINITY) {\n        return this.sign === 1 ? \"Infinity\" : \"-Infinity\";\n      }\n\n      if (this.layer === 0) {\n        if (this.mag < 1e21 && this.mag > 1e-7 || this.mag === 0) {\n          return (this.sign * this.mag).toString();\n        }\n\n        return this.m + \"e\" + this.e;\n      } else if (this.layer === 1) {\n        return this.m + \"e\" + this.e;\n      } else {\n        //layer 2+\n        if (this.layer <= MAX_ES_IN_A_ROW) {\n          return (this.sign === -1 ? \"-\" : \"\") + \"e\".repeat(this.layer) + this.mag;\n        } else {\n          return (this.sign === -1 ? \"-\" : \"\") + \"(e^\" + this.layer + \")\" + this.mag;\n        }\n      }\n    }\n  }, {\n    key: \"toExponential\",\n    value: function toExponential(places) {\n      if (this.layer === 0) {\n        return (this.sign * this.mag).toExponential(places);\n      }\n\n      return this.toStringWithDecimalPlaces(places);\n    }\n  }, {\n    key: \"toFixed\",\n    value: function toFixed(places) {\n      if (this.layer === 0) {\n        return (this.sign * this.mag).toFixed(places);\n      }\n\n      return this.toStringWithDecimalPlaces(places);\n    }\n  }, {\n    key: \"toPrecision\",\n    value: function toPrecision(places) {\n      if (this.e <= -7) {\n        return this.toExponential(places - 1);\n      }\n\n      if (places > this.e) {\n        return this.toFixed(places - this.exponent - 1);\n      }\n\n      return this.toExponential(places - 1);\n    }\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      return this.toString();\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.toString();\n    }\n  }, {\n    key: \"toStringWithDecimalPlaces\",\n    value: function toStringWithDecimalPlaces(places) {\n      if (this.layer === 0) {\n        if (this.mag < 1e21 && this.mag > 1e-7 || this.mag === 0) {\n          return (this.sign * this.mag).toFixed(places);\n        }\n\n        return decimalPlaces(this.m, places) + \"e\" + decimalPlaces(this.e, places);\n      } else if (this.layer === 1) {\n        return decimalPlaces(this.m, places) + \"e\" + decimalPlaces(this.e, places);\n      } else {\n        //layer 2+\n        if (this.layer <= MAX_ES_IN_A_ROW) {\n          return (this.sign === -1 ? \"-\" : \"\") + \"e\".repeat(this.layer) + decimalPlaces(this.mag, places);\n        } else {\n          return (this.sign === -1 ? \"-\" : \"\") + \"(e^\" + this.layer + \")\" + decimalPlaces(this.mag, places);\n        }\n      }\n    }\n  }, {\n    key: \"abs\",\n    value: function abs() {\n      return FC_NN(this.sign === 0 ? 0 : 1, this.layer, this.mag);\n    }\n  }, {\n    key: \"neg\",\n    value: function neg() {\n      return FC_NN(-this.sign, this.layer, this.mag);\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      return this.neg();\n    }\n  }, {\n    key: \"negated\",\n    value: function negated() {\n      return this.neg();\n    } // public sign () {\n    //     return this.sign;\n    //   }\n\n  }, {\n    key: \"sgn\",\n    value: function sgn() {\n      return this.sign;\n    }\n  }, {\n    key: \"round\",\n    value: function round() {\n      if (this.mag < 0) {\n        return Decimal.dZero;\n      }\n\n      if (this.layer === 0) {\n        return FC(this.sign, 0, Math.round(this.mag));\n      }\n\n      return this;\n    }\n  }, {\n    key: \"floor\",\n    value: function floor() {\n      if (this.mag < 0) {\n        return Decimal.dZero;\n      }\n\n      if (this.layer === 0) {\n        return FC(this.sign, 0, Math.floor(this.mag));\n      }\n\n      return this;\n    }\n  }, {\n    key: \"ceil\",\n    value: function ceil() {\n      if (this.mag < 0) {\n        return Decimal.dZero;\n      }\n\n      if (this.layer === 0) {\n        return FC(this.sign, 0, Math.ceil(this.mag));\n      }\n\n      return this;\n    }\n  }, {\n    key: \"trunc\",\n    value: function trunc() {\n      if (this.mag < 0) {\n        return Decimal.dZero;\n      }\n\n      if (this.layer === 0) {\n        return FC(this.sign, 0, Math.trunc(this.mag));\n      }\n\n      return this;\n    }\n  }, {\n    key: \"add\",\n    value: function add(value) {\n      var decimal = D(value); //inf/nan check\n\n      if (!Number.isFinite(this.layer)) {\n        return this;\n      }\n\n      if (!Number.isFinite(decimal.layer)) {\n        return decimal;\n      } //Special case - if one of the numbers is 0, return the other number.\n\n\n      if (this.sign === 0) {\n        return decimal;\n      }\n\n      if (decimal.sign === 0) {\n        return this;\n      } //Special case - Adding a number to its negation produces 0, no matter how large.\n\n\n      if (this.sign === -decimal.sign && this.layer === decimal.layer && this.mag === decimal.mag) {\n        return FC_NN(0, 0, 0);\n      }\n\n      var a;\n      var b; //Special case: If one of the numbers is layer 2 or higher, just take the bigger number.\n\n      if (this.layer >= 2 || decimal.layer >= 2) {\n        return this.maxabs(decimal);\n      }\n\n      if (Decimal.cmpabs(this, decimal) > 0) {\n        a = this;\n        b = decimal;\n      } else {\n        a = decimal;\n        b = this;\n      }\n\n      if (a.layer === 0 && b.layer === 0) {\n        return Decimal.fromNumber(a.sign * a.mag + b.sign * b.mag);\n      }\n\n      var layera = a.layer * Math.sign(a.mag);\n      var layerb = b.layer * Math.sign(b.mag); //If one of the numbers is 2+ layers higher than the other, just take the bigger number.\n\n      if (layera - layerb >= 2) {\n        return a;\n      }\n\n      if (layera === 0 && layerb === -1) {\n        if (Math.abs(b.mag - Math.log10(a.mag)) > MAX_SIGNIFICANT_DIGITS) {\n          return a;\n        } else {\n          var magdiff = Math.pow(10, Math.log10(a.mag) - b.mag);\n          var mantissa = b.sign + a.sign * magdiff;\n          return FC(Math.sign(mantissa), 1, b.mag + Math.log10(Math.abs(mantissa)));\n        }\n      }\n\n      if (layera === 1 && layerb === 0) {\n        if (Math.abs(a.mag - Math.log10(b.mag)) > MAX_SIGNIFICANT_DIGITS) {\n          return a;\n        } else {\n          var _magdiff = Math.pow(10, a.mag - Math.log10(b.mag));\n\n          var _mantissa = b.sign + a.sign * _magdiff;\n\n          return FC(Math.sign(_mantissa), 1, Math.log10(b.mag) + Math.log10(Math.abs(_mantissa)));\n        }\n      }\n\n      if (Math.abs(a.mag - b.mag) > MAX_SIGNIFICANT_DIGITS) {\n        return a;\n      } else {\n        var _magdiff2 = Math.pow(10, a.mag - b.mag);\n\n        var _mantissa2 = b.sign + a.sign * _magdiff2;\n\n        return FC(Math.sign(_mantissa2), 1, b.mag + Math.log10(Math.abs(_mantissa2)));\n      }\n    }\n  }, {\n    key: \"plus\",\n    value: function plus(value) {\n      return this.add(value);\n    }\n  }, {\n    key: \"sub\",\n    value: function sub(value) {\n      return this.add(D(value).neg());\n    }\n  }, {\n    key: \"subtract\",\n    value: function subtract(value) {\n      return this.sub(value);\n    }\n  }, {\n    key: \"minus\",\n    value: function minus(value) {\n      return this.sub(value);\n    }\n  }, {\n    key: \"mul\",\n    value: function mul(value) {\n      var decimal = D(value); //inf/nan check\n\n      if (!Number.isFinite(this.layer)) {\n        return this;\n      }\n\n      if (!Number.isFinite(decimal.layer)) {\n        return decimal;\n      } //Special case - if one of the numbers is 0, return 0.\n\n\n      if (this.sign === 0 || decimal.sign === 0) {\n        return FC_NN(0, 0, 0);\n      } //Special case - Multiplying a number by its own reciprocal yields +/- 1, no matter how large.\n\n\n      if (this.layer === decimal.layer && this.mag === -decimal.mag) {\n        return FC_NN(this.sign * decimal.sign, 0, 1);\n      }\n\n      var a;\n      var b; //Which number is bigger in terms of its multiplicative distance from 1?\n\n      if (this.layer > decimal.layer || this.layer == decimal.layer && Math.abs(this.mag) > Math.abs(decimal.mag)) {\n        a = this;\n        b = decimal;\n      } else {\n        a = decimal;\n        b = this;\n      }\n\n      if (a.layer === 0 && b.layer === 0) {\n        return Decimal.fromNumber(a.sign * b.sign * a.mag * b.mag);\n      } //Special case: If one of the numbers is layer 3 or higher or one of the numbers is 2+ layers bigger than the other, just take the bigger number.\n\n\n      if (a.layer >= 3 || a.layer - b.layer >= 2) {\n        return FC(a.sign * b.sign, a.layer, a.mag);\n      }\n\n      if (a.layer === 1 && b.layer === 0) {\n        return FC(a.sign * b.sign, 1, a.mag + Math.log10(b.mag));\n      }\n\n      if (a.layer === 1 && b.layer === 1) {\n        return FC(a.sign * b.sign, 1, a.mag + b.mag);\n      }\n\n      if (a.layer === 2 && b.layer === 1) {\n        var newmag = FC(Math.sign(a.mag), a.layer - 1, Math.abs(a.mag)).add(FC(Math.sign(b.mag), b.layer - 1, Math.abs(b.mag)));\n        return FC(a.sign * b.sign, newmag.layer + 1, newmag.sign * newmag.mag);\n      }\n\n      if (a.layer === 2 && b.layer === 2) {\n        var _newmag = FC(Math.sign(a.mag), a.layer - 1, Math.abs(a.mag)).add(FC(Math.sign(b.mag), b.layer - 1, Math.abs(b.mag)));\n\n        return FC(a.sign * b.sign, _newmag.layer + 1, _newmag.sign * _newmag.mag);\n      }\n\n      throw Error(\"Bad arguments to mul: \" + this + \", \" + value);\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply(value) {\n      return this.mul(value);\n    }\n  }, {\n    key: \"times\",\n    value: function times(value) {\n      return this.mul(value);\n    }\n  }, {\n    key: \"div\",\n    value: function div(value) {\n      var decimal = D(value);\n      return this.mul(decimal.recip());\n    }\n  }, {\n    key: \"divide\",\n    value: function divide(value) {\n      return this.div(value);\n    }\n  }, {\n    key: \"divideBy\",\n    value: function divideBy(value) {\n      return this.div(value);\n    }\n  }, {\n    key: \"dividedBy\",\n    value: function dividedBy(value) {\n      return this.div(value);\n    }\n  }, {\n    key: \"recip\",\n    value: function recip() {\n      if (this.mag === 0) {\n        return Decimal.dNaN;\n      } else if (this.layer === 0) {\n        return FC(this.sign, 0, 1 / this.mag);\n      } else {\n        return FC(this.sign, this.layer, -this.mag);\n      }\n    }\n  }, {\n    key: \"reciprocal\",\n    value: function reciprocal() {\n      return this.recip();\n    }\n  }, {\n    key: \"reciprocate\",\n    value: function reciprocate() {\n      return this.recip();\n    }\n    /**\r\n     * -1 for less than value, 0 for equals value, 1 for greater than value\r\n     */\n\n  }, {\n    key: \"cmp\",\n    value: function cmp(value) {\n      var decimal = D(value);\n\n      if (this.sign > decimal.sign) {\n        return 1;\n      }\n\n      if (this.sign < decimal.sign) {\n        return -1;\n      }\n\n      return this.sign * this.cmpabs(value);\n    }\n  }, {\n    key: \"cmpabs\",\n    value: function cmpabs(value) {\n      var decimal = D(value);\n      var layera = this.mag > 0 ? this.layer : -this.layer;\n      var layerb = decimal.mag > 0 ? decimal.layer : -decimal.layer;\n\n      if (layera > layerb) {\n        return 1;\n      }\n\n      if (layera < layerb) {\n        return -1;\n      }\n\n      if (this.mag > decimal.mag) {\n        return 1;\n      }\n\n      if (this.mag < decimal.mag) {\n        return -1;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"compare\",\n    value: function compare(value) {\n      return this.cmp(value);\n    }\n  }, {\n    key: \"isNan\",\n    value: function isNan() {\n      return isNaN(this.sign) || isNaN(this.layer) || isNaN(this.mag);\n    }\n  }, {\n    key: \"isFinite\",\n    value: function (_isFinite2) {\n      function isFinite() {\n        return _isFinite2.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite2.toString();\n      };\n\n      return isFinite;\n    }(function () {\n      return isFinite(this.sign) && isFinite(this.layer) && isFinite(this.mag);\n    })\n  }, {\n    key: \"eq\",\n    value: function eq(value) {\n      var decimal = D(value);\n      return this.sign === decimal.sign && this.layer === decimal.layer && this.mag === decimal.mag;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(value) {\n      return this.eq(value);\n    }\n  }, {\n    key: \"neq\",\n    value: function neq(value) {\n      return !this.eq(value);\n    }\n  }, {\n    key: \"notEquals\",\n    value: function notEquals(value) {\n      return this.neq(value);\n    }\n  }, {\n    key: \"lt\",\n    value: function lt(value) {\n      return this.cmp(value) === -1;\n    }\n  }, {\n    key: \"lte\",\n    value: function lte(value) {\n      return !this.gt(value);\n    }\n  }, {\n    key: \"gt\",\n    value: function gt(value) {\n      return this.cmp(value) === 1;\n    }\n  }, {\n    key: \"gte\",\n    value: function gte(value) {\n      return !this.lt(value);\n    }\n  }, {\n    key: \"max\",\n    value: function max(value) {\n      var decimal = D(value);\n      return this.lt(decimal) ? decimal : this;\n    }\n  }, {\n    key: \"min\",\n    value: function min(value) {\n      var decimal = D(value);\n      return this.gt(decimal) ? decimal : this;\n    }\n  }, {\n    key: \"maxabs\",\n    value: function maxabs(value) {\n      var decimal = D(value);\n      return this.cmpabs(decimal) < 0 ? decimal : this;\n    }\n  }, {\n    key: \"minabs\",\n    value: function minabs(value) {\n      var decimal = D(value);\n      return this.cmpabs(decimal) > 0 ? decimal : this;\n    }\n  }, {\n    key: \"clamp\",\n    value: function clamp(min, max) {\n      return this.max(min).min(max);\n    }\n  }, {\n    key: \"clampMin\",\n    value: function clampMin(min) {\n      return this.max(min);\n    }\n  }, {\n    key: \"clampMax\",\n    value: function clampMax(max) {\n      return this.min(max);\n    }\n  }, {\n    key: \"cmp_tolerance\",\n    value: function cmp_tolerance(value, tolerance) {\n      var decimal = D(value);\n      return this.eq_tolerance(decimal, tolerance) ? 0 : this.cmp(decimal);\n    }\n  }, {\n    key: \"compare_tolerance\",\n    value: function compare_tolerance(value, tolerance) {\n      return this.cmp_tolerance(value, tolerance);\n    }\n    /**\r\n     * Tolerance is a relative tolerance, multiplied by the greater of the magnitudes of the two arguments.\r\n     * For example, if you put in 1e-9, then any number closer to the\r\n     * larger number than (larger number)*1e-9 will be considered equal.\r\n     */\n\n  }, {\n    key: \"eq_tolerance\",\n    value: function eq_tolerance(value, tolerance) {\n      var decimal = D(value); // https://stackoverflow.com/a/33024979\n\n      if (tolerance == null) {\n        tolerance = 1e-7;\n      } //Numbers that are too far away are never close.\n\n\n      if (this.sign !== decimal.sign) {\n        return false;\n      }\n\n      if (Math.abs(this.layer - decimal.layer) > 1) {\n        return false;\n      } // return abs(a-b) <= tolerance * max(abs(a), abs(b))\n\n\n      var magA = this.mag;\n      var magB = decimal.mag;\n\n      if (this.layer > decimal.layer) {\n        magB = f_maglog10(magB);\n      }\n\n      if (this.layer < decimal.layer) {\n        magA = f_maglog10(magA);\n      }\n\n      return Math.abs(magA - magB) <= tolerance * Math.max(Math.abs(magA), Math.abs(magB));\n    }\n  }, {\n    key: \"equals_tolerance\",\n    value: function equals_tolerance(value, tolerance) {\n      return this.eq_tolerance(value, tolerance);\n    }\n  }, {\n    key: \"neq_tolerance\",\n    value: function neq_tolerance(value, tolerance) {\n      return !this.eq_tolerance(value, tolerance);\n    }\n  }, {\n    key: \"notEquals_tolerance\",\n    value: function notEquals_tolerance(value, tolerance) {\n      return this.neq_tolerance(value, tolerance);\n    }\n  }, {\n    key: \"lt_tolerance\",\n    value: function lt_tolerance(value, tolerance) {\n      var decimal = D(value);\n      return !this.eq_tolerance(decimal, tolerance) && this.lt(decimal);\n    }\n  }, {\n    key: \"lte_tolerance\",\n    value: function lte_tolerance(value, tolerance) {\n      var decimal = D(value);\n      return this.eq_tolerance(decimal, tolerance) || this.lt(decimal);\n    }\n  }, {\n    key: \"gt_tolerance\",\n    value: function gt_tolerance(value, tolerance) {\n      var decimal = D(value);\n      return !this.eq_tolerance(decimal, tolerance) && this.gt(decimal);\n    }\n  }, {\n    key: \"gte_tolerance\",\n    value: function gte_tolerance(value, tolerance) {\n      var decimal = D(value);\n      return this.eq_tolerance(decimal, tolerance) || this.gt(decimal);\n    }\n  }, {\n    key: \"pLog10\",\n    value: function pLog10() {\n      if (this.lt(Decimal.dZero)) {\n        return Decimal.dZero;\n      }\n\n      return this.log10();\n    }\n  }, {\n    key: \"absLog10\",\n    value: function absLog10() {\n      if (this.sign === 0) {\n        return Decimal.dNaN;\n      } else if (this.layer > 0) {\n        return FC(Math.sign(this.mag), this.layer - 1, Math.abs(this.mag));\n      } else {\n        return FC(1, 0, Math.log10(this.mag));\n      }\n    }\n  }, {\n    key: \"log10\",\n    value: function log10() {\n      if (this.sign <= 0) {\n        return Decimal.dNaN;\n      } else if (this.layer > 0) {\n        return FC(Math.sign(this.mag), this.layer - 1, Math.abs(this.mag));\n      } else {\n        return FC(this.sign, 0, Math.log10(this.mag));\n      }\n    }\n  }, {\n    key: \"log\",\n    value: function log(base) {\n      base = D(base);\n\n      if (this.sign <= 0) {\n        return Decimal.dNaN;\n      }\n\n      if (base.sign <= 0) {\n        return Decimal.dNaN;\n      }\n\n      if (base.sign === 1 && base.layer === 0 && base.mag === 1) {\n        return Decimal.dNaN;\n      } else if (this.layer === 0 && base.layer === 0) {\n        return FC(this.sign, 0, Math.log(this.mag) / Math.log(base.mag));\n      }\n\n      return Decimal.div(this.log10(), base.log10());\n    }\n  }, {\n    key: \"log2\",\n    value: function log2() {\n      if (this.sign <= 0) {\n        return Decimal.dNaN;\n      } else if (this.layer === 0) {\n        return FC(this.sign, 0, Math.log2(this.mag));\n      } else if (this.layer === 1) {\n        return FC(Math.sign(this.mag), 0, Math.abs(this.mag) * 3.321928094887362); //log2(10)\n      } else if (this.layer === 2) {\n        return FC(Math.sign(this.mag), 1, Math.abs(this.mag) + 0.5213902276543247); //-log10(log10(2))\n      } else {\n        return FC(Math.sign(this.mag), this.layer - 1, Math.abs(this.mag));\n      }\n    }\n  }, {\n    key: \"ln\",\n    value: function ln() {\n      if (this.sign <= 0) {\n        return Decimal.dNaN;\n      } else if (this.layer === 0) {\n        return FC(this.sign, 0, Math.log(this.mag));\n      } else if (this.layer === 1) {\n        return FC(Math.sign(this.mag), 0, Math.abs(this.mag) * 2.302585092994046); //ln(10)\n      } else if (this.layer === 2) {\n        return FC(Math.sign(this.mag), 1, Math.abs(this.mag) + 0.36221568869946325); //log10(log10(e))\n      } else {\n        return FC(Math.sign(this.mag), this.layer - 1, Math.abs(this.mag));\n      }\n    }\n  }, {\n    key: \"logarithm\",\n    value: function logarithm(base) {\n      return this.log(base);\n    }\n  }, {\n    key: \"pow\",\n    value: function pow(value) {\n      var decimal = D(value);\n      var a = this;\n      var b = decimal; //special case: if a is 0, then return 0 (UNLESS b is 0, then return 1)\n\n      if (a.sign === 0) {\n        return b.eq(0) ? FC_NN(1, 0, 1) : a;\n      } //special case: if a is 1, then return 1\n\n\n      if (a.sign === 1 && a.layer === 0 && a.mag === 1) {\n        return a;\n      } //special case: if b is 0, then return 1\n\n\n      if (b.sign === 0) {\n        return FC_NN(1, 0, 1);\n      } //special case: if b is 1, then return a\n\n\n      if (b.sign === 1 && b.layer === 0 && b.mag === 1) {\n        return a;\n      }\n\n      var result = a.absLog10().mul(b).pow10();\n\n      if (this.sign === -1) {\n        if (Math.abs(b.toNumber() % 2) % 2 === 1) {\n          return result.neg();\n        } else if (Math.abs(b.toNumber() % 2) % 2 === 0) {\n          return result;\n        }\n\n        return Decimal.dNaN;\n      }\n\n      return result;\n    }\n  }, {\n    key: \"pow10\",\n    value: function pow10() {\n      /*\r\n      There are four cases we need to consider:\r\n      1) positive sign, positive mag (e15, ee15): +1 layer (e.g. 10^15 becomes e15, 10^e15 becomes ee15)\r\n      2) negative sign, positive mag (-e15, -ee15): +1 layer but sign and mag sign are flipped (e.g. 10^-15 becomes e-15, 10^-e15 becomes ee-15)\r\n      3) positive sign, negative mag (e-15, ee-15): layer 0 case would have been handled in the Math.pow check, so just return 1\r\n      4) negative sign, negative mag (-e-15, -ee-15): layer 0 case would have been handled in the Math.pow check, so just return 1\r\n      */\n      if (!Number.isFinite(this.layer) || !Number.isFinite(this.mag)) {\n        return Decimal.dNaN;\n      }\n\n      var a = this; //handle layer 0 case - if no precision is lost just use Math.pow, else promote one layer\n\n      if (a.layer === 0) {\n        var newmag = Math.pow(10, a.sign * a.mag);\n\n        if (Number.isFinite(newmag) && Math.abs(newmag) >= 0.1) {\n          return FC(1, 0, newmag);\n        } else {\n          if (a.sign === 0) {\n            return Decimal.dOne;\n          } else {\n            a = FC_NN(a.sign, a.layer + 1, Math.log10(a.mag));\n          }\n        }\n      } //handle all 4 layer 1+ cases individually\n\n\n      if (a.sign > 0 && a.mag >= 0) {\n        return FC(a.sign, a.layer + 1, a.mag);\n      }\n\n      if (a.sign < 0 && a.mag >= 0) {\n        return FC(-a.sign, a.layer + 1, -a.mag);\n      } //both the negative mag cases are identical: one +/- rounding error\n\n\n      return Decimal.dOne;\n    }\n  }, {\n    key: \"pow_base\",\n    value: function pow_base(value) {\n      return D(value).pow(this);\n    }\n  }, {\n    key: \"root\",\n    value: function root(value) {\n      var decimal = D(value);\n      return this.pow(decimal.recip());\n    }\n  }, {\n    key: \"factorial\",\n    value: function factorial() {\n      if (this.mag < 0) {\n        return this.add(1).gamma();\n      } else if (this.layer === 0) {\n        return this.add(1).gamma();\n      } else if (this.layer === 1) {\n        return Decimal.exp(Decimal.mul(this, Decimal.ln(this).sub(1)));\n      } else {\n        return Decimal.exp(this);\n      }\n    } //from HyperCalc source code\n\n  }, {\n    key: \"gamma\",\n    value: function gamma() {\n      if (this.mag < 0) {\n        return this.recip();\n      } else if (this.layer === 0) {\n        if (this.lt(FC_NN(1, 0, 24))) {\n          return Decimal.fromNumber(f_gamma(this.sign * this.mag));\n        }\n\n        var t = this.mag - 1;\n        var l = 0.9189385332046727; //0.5*Math.log(2*Math.PI)\n\n        l = l + (t + 0.5) * Math.log(t);\n        l = l - t;\n        var n2 = t * t;\n        var np = t;\n        var lm = 12 * np;\n        var adj = 1 / lm;\n        var l2 = l + adj;\n\n        if (l2 === l) {\n          return Decimal.exp(l);\n        }\n\n        l = l2;\n        np = np * n2;\n        lm = 360 * np;\n        adj = 1 / lm;\n        l2 = l - adj;\n\n        if (l2 === l) {\n          return Decimal.exp(l);\n        }\n\n        l = l2;\n        np = np * n2;\n        lm = 1260 * np;\n        var lt = 1 / lm;\n        l = l + lt;\n        np = np * n2;\n        lm = 1680 * np;\n        lt = 1 / lm;\n        l = l - lt;\n        return Decimal.exp(l);\n      } else if (this.layer === 1) {\n        return Decimal.exp(Decimal.mul(this, Decimal.ln(this).sub(1)));\n      } else {\n        return Decimal.exp(this);\n      }\n    }\n  }, {\n    key: \"lngamma\",\n    value: function lngamma() {\n      return this.gamma().ln();\n    }\n  }, {\n    key: \"exp\",\n    value: function exp() {\n      if (this.mag < 0) {\n        return Decimal.dOne;\n      }\n\n      if (this.layer === 0 && this.mag <= 709.7) {\n        return Decimal.fromNumber(Math.exp(this.sign * this.mag));\n      } else if (this.layer === 0) {\n        return FC(1, 1, this.sign * Math.log10(Math.E) * this.mag);\n      } else if (this.layer === 1) {\n        return FC(1, 2, this.sign * (Math.log10(0.4342944819032518) + this.mag));\n      } else {\n        return FC(1, this.layer + 1, this.sign * this.mag);\n      }\n    }\n  }, {\n    key: \"sqr\",\n    value: function sqr() {\n      return this.pow(2);\n    }\n  }, {\n    key: \"sqrt\",\n    value: function sqrt() {\n      if (this.layer === 0) {\n        return Decimal.fromNumber(Math.sqrt(this.sign * this.mag));\n      } else if (this.layer === 1) {\n        return FC(1, 2, Math.log10(this.mag) - 0.3010299956639812);\n      } else {\n        var result = Decimal.div(FC_NN(this.sign, this.layer - 1, this.mag), FC_NN(1, 0, 2));\n        result.layer += 1;\n        result.normalize();\n        return result;\n      }\n    }\n  }, {\n    key: \"cube\",\n    value: function cube() {\n      return this.pow(3);\n    }\n  }, {\n    key: \"cbrt\",\n    value: function cbrt() {\n      return this.pow(1 / 3);\n    } //Tetration/tetrate: The result of exponentiating 'this' to 'this' 'height' times in a row.  https://en.wikipedia.org/wiki/Tetration\n    //If payload != 1, then this is 'iterated exponentiation', the result of exping (payload) to base (this) (height) times. https://andydude.github.io/tetration/archives/tetration2/ident.html\n    //Works with negative and positive real heights.\n\n  }, {\n    key: \"tetrate\",\n    value: function tetrate() {\n      var height = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;\n      var payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : FC_NN(1, 0, 1);\n\n      //x^^1 == x\n      if (height === 1) {\n        return Decimal.pow(this, payload);\n      } //x^^0 == 1\n\n\n      if (height === 0) {\n        return new Decimal(payload);\n      } //1^^x == 1\n\n\n      if (this.eq(Decimal.dOne)) {\n        return Decimal.dOne;\n      } //-1^^x == -1\n\n\n      if (this.eq(-1)) {\n        return Decimal.pow(this, payload);\n      }\n\n      if (height === Number.POSITIVE_INFINITY) {\n        var this_num = this.toNumber(); //within the convergence range?\n\n        if (this_num <= 1.44466786100976613366 && this_num >= 0.06598803584531253708) {\n          //hotfix for the very edge of the number range not being handled properly\n          if (this_num > 1.444667861009099) {\n            return Decimal.fromNumber(Math.E);\n          } //Formula for infinite height power tower.\n\n\n          var negln = Decimal.ln(this).neg();\n          return negln.lambertw().div(negln);\n        } else if (this_num > 1.44466786100976613366) {\n          //explodes to infinity\n          // TODO: replace this with Decimal.dInf\n          return Decimal.fromNumber(Number.POSITIVE_INFINITY);\n        } else {\n          //0.06598803584531253708 > this_num >= 0: never converges\n          //this_num < 0: quickly becomes a complex number\n          return Decimal.dNaN;\n        }\n      } //0^^x oscillates if we define 0^0 == 1 (which in javascript land we do), since then 0^^1 is 0, 0^^2 is 1, 0^^3 is 0, etc. payload is ignored\n      //using the linear approximation for height (TODO: don't know a better way to calculate it ATM, but it wouldn't surprise me if it's just NaN)\n\n\n      if (this.eq(Decimal.dZero)) {\n        var result = Math.abs((height + 1) % 2);\n\n        if (result > 1) {\n          result = 2 - result;\n        }\n\n        return Decimal.fromNumber(result);\n      }\n\n      if (height < 0) {\n        return Decimal.iteratedlog(payload, this, -height);\n      }\n\n      payload = D(payload);\n      var oldheight = height;\n      height = Math.trunc(height);\n      var fracheight = oldheight - height;\n\n      if (this.gt(Decimal.dZero) && this.lte(1.44466786100976613366)) {\n        //similar to 0^^n, flip-flops between two values, converging slowly (or if it's below 0.06598803584531253708, never. so once again, the fractional part at the end will be a linear approximation (TODO: again pending knowledge of how to approximate better, although tbh I think it should in reality just be NaN)\n        height = Math.min(10000, height);\n\n        for (var i = 0; i < height; ++i) {\n          var old_payload = payload;\n          payload = this.pow(payload); //stop early if we converge\n\n          if (old_payload.eq(payload)) {\n            return payload;\n          }\n        }\n\n        if (fracheight != 0) {\n          var next_payload = this.pow(payload);\n          return payload.mul(1 - fracheight).add(next_payload.mul(fracheight));\n        }\n\n        return payload;\n      } //TODO: base < 0, but it's hard for me to reason about (probably all non-integer heights are NaN automatically?)\n\n\n      if (fracheight !== 0) {\n        if (payload.eq(Decimal.dOne)) {\n          //TODO: for bases above 10, revert to old linear approximation until I can think of something better\n          if (this.gt(10)) {\n            payload = this.pow(fracheight);\n          } else {\n            payload = Decimal.fromNumber(Decimal.tetrate_critical(this.toNumber(), fracheight)); //TODO: until the critical section grid can handle numbers below 2, scale them to the base\n            //TODO: maybe once the critical section grid has very large bases, this math can be appropriate for them too? I'll think about it\n\n            if (this.lt(2)) {\n              payload = payload.sub(1).mul(this.minus(1)).plus(1);\n            }\n          }\n        } else {\n          if (this.eq(10)) {\n            payload = payload.layeradd10(fracheight);\n          } else {\n            payload = payload.layeradd(fracheight, this);\n          }\n        }\n      }\n\n      for (var _i = 0; _i < height; ++_i) {\n        payload = this.pow(payload); //bail if we're NaN\n\n        if (!isFinite(payload.layer) || !isFinite(payload.mag)) {\n          return payload.normalize();\n        } //shortcut\n\n\n        if (payload.layer - this.layer > 3) {\n          return FC_NN(payload.sign, payload.layer + (height - _i - 1), payload.mag);\n        } //give up after 10000 iterations if nothing is happening\n\n\n        if (_i > 10000) {\n          return payload;\n        }\n      }\n\n      return payload;\n    } //iteratedexp/iterated exponentiation: - all cases handled in tetrate, so just call it\n\n  }, {\n    key: \"iteratedexp\",\n    value: function iteratedexp() {\n      var height = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;\n      var payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : FC_NN(1, 0, 1);\n      return this.tetrate(height, payload);\n    } //iterated log/repeated log: The result of applying log(base) 'times' times in a row. Approximately equal to subtracting (times) from the number's slog representation. Equivalent to tetrating to a negative height.\n    //Works with negative and positive real heights.\n\n  }, {\n    key: \"iteratedlog\",\n    value: function iteratedlog() {\n      var base = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n      if (times < 0) {\n        return Decimal.tetrate(base, -times, this);\n      }\n\n      base = D(base);\n      var result = Decimal.fromDecimal(this);\n      var fulltimes = times;\n      times = Math.trunc(times);\n      var fraction = fulltimes - times;\n\n      if (result.layer - base.layer > 3) {\n        var layerloss = Math.min(times, result.layer - base.layer - 3);\n        times -= layerloss;\n        result.layer -= layerloss;\n      }\n\n      for (var i = 0; i < times; ++i) {\n        result = result.log(base); //bail if we're NaN\n\n        if (!isFinite(result.layer) || !isFinite(result.mag)) {\n          return result.normalize();\n        } //give up after 10000 iterations if nothing is happening\n\n\n        if (i > 10000) {\n          return result;\n        }\n      } //handle fractional part\n\n\n      if (fraction > 0 && fraction < 1) {\n        if (base.eq(10)) {\n          result = result.layeradd10(-fraction);\n        } else {\n          result = result.layeradd(-fraction, base);\n        }\n      }\n\n      return result;\n    } //Super-logarithm, one of tetration's inverses, tells you what size power tower you'd have to tetrate base to to get number. By definition, will never be higher than 1.8e308 in break_eternity.js, since a power tower 1.8e308 numbers tall is the largest representable number.\n    // https://en.wikipedia.org/wiki/Super-logarithm\n    // NEW: Accept a number of iterations, and use binary search to, after making an initial guess, hone in on the true value, assuming tetration as the ground truth.\n\n  }, {\n    key: \"slog\",\n    value: function slog() {\n      var base = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      var iterations = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 43;\n      var step_size = 0.001;\n      var has_changed_directions_once = false;\n      var previously_rose = false;\n      var result = this.slog_internal(base).toNumber();\n\n      for (var i = 1; i < iterations; ++i) {\n        var new_decimal = new Decimal(base).tetrate(result);\n        var currently_rose = new_decimal.gt(this);\n\n        if (iterations > 1) {\n          if (previously_rose != currently_rose) {\n            has_changed_directions_once = true;\n          }\n        }\n\n        previously_rose = currently_rose;\n\n        if (has_changed_directions_once) {\n          step_size /= 2;\n        }\n\n        step_size = Math.abs(step_size) * (currently_rose ? -1 : 1);\n        result += step_size;\n      }\n\n      return Decimal.fromNumber(result);\n    }\n  }, {\n    key: \"slog_internal\",\n    value: function slog_internal() {\n      var base = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      base = D(base); //special cases:\n      //slog base 0 or lower is NaN\n\n      if (base.lte(Decimal.dZero)) {\n        return Decimal.dNaN;\n      } //slog base 1 is NaN\n\n\n      if (base.eq(Decimal.dOne)) {\n        return Decimal.dNaN;\n      } //need to handle these small, wobbling bases specially\n\n\n      if (base.lt(Decimal.dOne)) {\n        if (this.eq(Decimal.dOne)) {\n          return Decimal.dZero;\n        }\n\n        if (this.eq(Decimal.dZero)) {\n          return Decimal.dNegOne;\n        } //0 < this < 1: ambiguous (happens multiple times)\n        //this < 0: impossible (as far as I can tell)\n        //this > 1: partially complex (http://myweb.astate.edu/wpaulsen/tetcalc/tetcalc.html base 0.25 for proof)\n\n\n        return Decimal.dNaN;\n      } //slog_n(0) is -1\n\n\n      if (this.mag < 0 || this.eq(Decimal.dZero)) {\n        return Decimal.dNegOne;\n      }\n\n      var result = 0;\n      var copy = Decimal.fromDecimal(this);\n\n      if (copy.layer - base.layer > 3) {\n        var layerloss = copy.layer - base.layer - 3;\n        result += layerloss;\n        copy.layer -= layerloss;\n      }\n\n      for (var i = 0; i < 100; ++i) {\n        if (copy.lt(Decimal.dZero)) {\n          copy = Decimal.pow(base, copy);\n          result -= 1;\n        } else if (copy.lte(Decimal.dOne)) {\n          return Decimal.fromNumber(result + Decimal.slog_critical(base.toNumber(), copy.toNumber()));\n        } else {\n          result += 1;\n          copy = Decimal.log(copy, base);\n        }\n      }\n\n      return Decimal.fromNumber(result);\n    } //background info and tables of values for critical functions taken here: https://github.com/Patashu/break_eternity.js/issues/22\n\n  }, {\n    key: \"layeradd10\",\n    value: //Function for adding/removing layers from a Decimal, even fractional layers (e.g. its slog10 representation).\n    //Moved this over to use the same critical section as tetrate/slog.\n    function layeradd10(diff) {\n      diff = Decimal.fromValue_noAlloc(diff).toNumber();\n      var result = Decimal.fromDecimal(this);\n\n      if (diff >= 1) {\n        //bug fix: if result is very smol (mag < 0, layer > 0) turn it into 0 first\n        if (result.mag < 0 && result.layer > 0) {\n          result.sign = 0;\n          result.mag = 0;\n          result.layer = 0;\n        } else if (result.sign === -1 && result.layer == 0) {\n          //bug fix - for stuff like -3.layeradd10(1) we need to move the sign to the mag\n          result.sign = 1;\n          result.mag = -result.mag;\n        }\n\n        var layeradd = Math.trunc(diff);\n        diff -= layeradd;\n        result.layer += layeradd;\n      }\n\n      if (diff <= -1) {\n        var _layeradd = Math.trunc(diff);\n\n        diff -= _layeradd;\n        result.layer += _layeradd;\n\n        if (result.layer < 0) {\n          for (var i = 0; i < 100; ++i) {\n            result.layer++;\n            result.mag = Math.log10(result.mag);\n\n            if (!isFinite(result.mag)) {\n              //another bugfix: if we hit -Infinity mag, then we should return negative infinity, not 0. 0.layeradd10(-1) h its this\n              if (result.sign === 0) {\n                result.sign = 1;\n              } //also this, for 0.layeradd10(-2)\n\n\n              if (result.layer < 0) {\n                result.layer = 0;\n              }\n\n              return result.normalize();\n            }\n\n            if (result.layer >= 0) {\n              break;\n            }\n          }\n        }\n      }\n\n      while (result.layer < 0) {\n        result.layer++;\n        result.mag = Math.log10(result.mag);\n      } //bugfix: before we normalize: if we started with 0, we now need to manually fix a layer ourselves!\n\n\n      if (result.sign === 0) {\n        result.sign = 1;\n\n        if (result.mag === 0 && result.layer >= 1) {\n          result.layer -= 1;\n          result.mag = 1;\n        }\n      }\n\n      result.normalize(); //layeradd10: like adding 'diff' to the number's slog(base) representation. Very similar to tetrate base 10 and iterated log base 10. Also equivalent to adding a fractional amount to the number's layer in its break_eternity.js representation.\n\n      if (diff !== 0) {\n        return result.layeradd(diff, 10); //safe, only calls positive height 1 payload tetration, slog and log\n      }\n\n      return result;\n    } //layeradd: like adding 'diff' to the number's slog(base) representation. Very similar to tetrate base 'base' and iterated log base 'base'.\n\n  }, {\n    key: \"layeradd\",\n    value: function layeradd(diff, base) {\n      var slogthis = this.slog(base).toNumber();\n      var slogdest = slogthis + diff;\n\n      if (slogdest >= 0) {\n        return Decimal.tetrate(base, slogdest);\n      } else if (!Number.isFinite(slogdest)) {\n        return Decimal.dNaN;\n      } else if (slogdest >= -1) {\n        return Decimal.log(Decimal.tetrate(base, slogdest + 1), base);\n      } else {\n        return Decimal.log(Decimal.log(Decimal.tetrate(base, slogdest + 2), base), base);\n      }\n    } //The Lambert W function, also called the omega function or product logarithm, is the solution W(x) === x*e^x.\n    // https://en.wikipedia.org/wiki/Lambert_W_function\n    //Some special values, for testing: https://en.wikipedia.org/wiki/Lambert_W_function#Special_values\n\n  }, {\n    key: \"lambertw\",\n    value: function lambertw() {\n      if (this.lt(-0.3678794411710499)) {\n        throw Error(\"lambertw is unimplemented for results less than -1, sorry!\");\n      } else if (this.mag < 0) {\n        return Decimal.fromNumber(f_lambertw(this.toNumber()));\n      } else if (this.layer === 0) {\n        return Decimal.fromNumber(f_lambertw(this.sign * this.mag));\n      } else if (this.layer === 1) {\n        return d_lambertw(this);\n      } else if (this.layer === 2) {\n        return d_lambertw(this);\n      }\n\n      if (this.layer >= 3) {\n        return FC_NN(this.sign, this.layer - 1, this.mag);\n      }\n\n      throw \"Unhandled behavior in lambertw()\";\n    } //The super square-root function - what number, tetrated to height 2, equals this?\n    //Other sroots are possible to calculate probably through guess and check methods, this one is easy though.\n    // https://en.wikipedia.org/wiki/Tetration#Super-root\n\n  }, {\n    key: \"ssqrt\",\n    value: function ssqrt() {\n      if (this.sign == 1 && this.layer >= 3) {\n        return FC_NN(this.sign, this.layer - 1, this.mag);\n      }\n\n      var lnx = this.ln();\n      return lnx.div(lnx.lambertw());\n    }\n    /*\r\n      Unit tests for tetrate/iteratedexp/iteratedlog/layeradd10/layeradd/slog:\r\n    (note: these won't be exactly precise with the new slog implementation, but that's okay)\r\n      for (var i = 0; i < 1000; ++i)\r\n    {\r\n    var first = Math.random()*100;\r\n    var both = Math.random()*100;\r\n    var expected = first+both+1;\r\n    var result = new Decimal(10).layeradd10(first).layeradd10(both).slog();\r\n    if (Number.isFinite(result.mag) && !Decimal.eq_tolerance(expected, result))\r\n    {\r\n        console.log(first + \", \" + both);\r\n    }\r\n    }\r\n      for (var i = 0; i < 1000; ++i)\r\n    {\r\n    var first = Math.random()*100;\r\n    var both = Math.random()*100;\r\n    first += both;\r\n    var expected = first-both+1;\r\n    var result = new Decimal(10).layeradd10(first).layeradd10(-both).slog();\r\n    if (Number.isFinite(result.mag) && !Decimal.eq_tolerance(expected, result))\r\n    {\r\n        console.log(first + \", \" + both);\r\n    }\r\n    }\r\n      for (var i = 0; i < 1000; ++i)\r\n    {\r\n    var first = Math.random()*100;\r\n    var both = Math.random()*100;\r\n    var base = Math.random()*8+2;\r\n    var expected = first+both+1;\r\n    var result = new Decimal(base).layeradd(first, base).layeradd(both, base).slog(base);\r\n    if (Number.isFinite(result.mag) && !Decimal.eq_tolerance(expected, result))\r\n    {\r\n        console.log(first + \", \" + both);\r\n    }\r\n    }\r\n      for (var i = 0; i < 1000; ++i)\r\n    {\r\n    var first = Math.random()*100;\r\n    var both = Math.random()*100;\r\n    var base = Math.random()*8+2;\r\n    first += both;\r\n    var expected = first-both+1;\r\n    var result = new Decimal(base).layeradd(first, base).layeradd(-both, base).slog(base);\r\n    if (Number.isFinite(result.mag) && !Decimal.eq_tolerance(expected, result))\r\n    {\r\n        console.log(first + \", \" + both);\r\n    }\r\n    }\r\n      for (var i = 0; i < 1000; ++i)\r\n    {\r\n    var first = Math.round((Math.random()*30))/10;\r\n    var both = Math.round((Math.random()*30))/10;\r\n    var tetrateonly = Decimal.tetrate(10, first);\r\n    var tetrateandlog = Decimal.tetrate(10, first+both).iteratedlog(10, both);\r\n    if (!Decimal.eq_tolerance(tetrateonly, tetrateandlog))\r\n    {\r\n    console.log(first + \", \" + both);\r\n    }\r\n    }\r\n      for (var i = 0; i < 1000; ++i)\r\n    {\r\n    var first = Math.round((Math.random()*30))/10;\r\n    var both = Math.round((Math.random()*30))/10;\r\n    var base = Math.random()*8+2;\r\n    var tetrateonly = Decimal.tetrate(base, first);\r\n    var tetrateandlog = Decimal.tetrate(base, first+both).iteratedlog(base, both);\r\n    if (!Decimal.eq_tolerance(tetrateonly, tetrateandlog))\r\n    {\r\n    console.log(first + \", \" + both);\r\n    }\r\n    }\r\n      for (var i = 0; i < 1000; ++i)\r\n    {\r\n    var first = Math.round((Math.random()*30))/10;\r\n    var both = Math.round((Math.random()*30))/10;\r\n    var base = Math.random()*8+2;\r\n    var tetrateonly = Decimal.tetrate(base, first, base);\r\n    var tetrateandlog = Decimal.tetrate(base, first+both, base).iteratedlog(base, both);\r\n    if (!Decimal.eq_tolerance(tetrateonly, tetrateandlog))\r\n    {\r\n    console.log(first + \", \" + both);\r\n    }\r\n    }\r\n      for (var i = 0; i < 1000; ++i)\r\n    {\r\n    var xex = new Decimal(-0.3678794411710499+Math.random()*100);\r\n    var x = Decimal.lambertw(xex);\r\n    if (!Decimal.eq_tolerance(xex, x.mul(Decimal.exp(x))))\r\n    {\r\n        console.log(xex);\r\n    }\r\n    }\r\n      for (var i = 0; i < 1000; ++i)\r\n    {\r\n    var xex = new Decimal(-0.3678794411710499+Math.exp(Math.random()*100));\r\n    var x = Decimal.lambertw(xex);\r\n    if (!Decimal.eq_tolerance(xex, x.mul(Decimal.exp(x))))\r\n    {\r\n        console.log(xex);\r\n    }\r\n    }\r\n      for (var i = 0; i < 1000; ++i)\r\n    {\r\n    var a = Decimal.randomDecimalForTesting(Math.random() > 0.5 ? 0 : 1);\r\n    var b = Decimal.randomDecimalForTesting(Math.random() > 0.5 ? 0 : 1);\r\n    if (Math.random() > 0.5) { a = a.recip(); }\r\n    if (Math.random() > 0.5) { b = b.recip(); }\r\n    var c = a.add(b).toNumber();\r\n    if (Number.isFinite(c) && !Decimal.eq_tolerance(c, a.toNumber()+b.toNumber()))\r\n    {\r\n        console.log(a + \", \" + b);\r\n    }\r\n    }\r\n      for (var i = 0; i < 100; ++i)\r\n    {\r\n    var a = Decimal.randomDecimalForTesting(Math.round(Math.random()*4));\r\n    var b = Decimal.randomDecimalForTesting(Math.round(Math.random()*4));\r\n    if (Math.random() > 0.5) { a = a.recip(); }\r\n    if (Math.random() > 0.5) { b = b.recip(); }\r\n    var c = a.mul(b).toNumber();\r\n    if (Number.isFinite(c) && Number.isFinite(a.toNumber()) && Number.isFinite(b.toNumber()) && a.toNumber() != 0 && b.toNumber() != 0 && c != 0 && !Decimal.eq_tolerance(c, a.toNumber()*b.toNumber()))\r\n    {\r\n        console.log(\"Test 1: \" + a + \", \" + b);\r\n    }\r\n    else if (!Decimal.mul(a.recip(), b.recip()).eq_tolerance(Decimal.mul(a, b).recip()))\r\n    {\r\n        console.log(\"Test 3: \" + a + \", \" + b);\r\n    }\r\n    }\r\n      for (var i = 0; i < 10; ++i)\r\n    {\r\n    var a = Decimal.randomDecimalForTesting(Math.round(Math.random()*4));\r\n    var b = Decimal.randomDecimalForTesting(Math.round(Math.random()*4));\r\n    if (Math.random() > 0.5 && a.sign !== 0) { a = a.recip(); }\r\n    if (Math.random() > 0.5 && b.sign !== 0) { b = b.recip(); }\r\n    var c = a.pow(b);\r\n    var d = a.root(b.recip());\r\n    var e = a.pow(b.recip());\r\n    var f = a.root(b);\r\n        if (!c.eq_tolerance(d) && a.sign !== 0 && b.sign !== 0)\r\n    {\r\n      console.log(\"Test 1: \" + a + \", \" + b);\r\n    }\r\n    if (!e.eq_tolerance(f) && a.sign !== 0 && b.sign !== 0)\r\n    {\r\n      console.log(\"Test 2: \" + a + \", \" + b);\r\n    }\r\n    }\r\n      for (var i = 0; i < 10; ++i)\r\n    {\r\n    var a = Math.round(Math.random()*18-9);\r\n    var b = Math.round(Math.random()*100-50);\r\n    var c = Math.round(Math.random()*18-9);\r\n    var d = Math.round(Math.random()*100-50);\r\n    console.log(\"Decimal.pow(Decimal.fromMantissaExponent(\" + a + \", \" + b + \"), Decimal.fromMantissaExponent(\" + c + \", \" + d + \")).toString()\");\r\n    }\r\n      */\n    //Pentation/pentate: The result of tetrating 'height' times in a row. An absurdly strong operator - Decimal.pentate(2, 4.28) and Decimal.pentate(10, 2.37) are already too huge for break_eternity.js!\n    // https://en.wikipedia.org/wiki/Pentation\n\n  }, {\n    key: \"pentate\",\n    value: function pentate() {\n      var height = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;\n      var payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : FC_NN(1, 0, 1);\n      payload = D(payload);\n      var oldheight = height;\n      height = Math.trunc(height);\n      var fracheight = oldheight - height; //I have no idea if this is a meaningful approximation for pentation to continuous heights, but it is monotonic and continuous.\n\n      if (fracheight !== 0) {\n        if (payload.eq(Decimal.dOne)) {\n          ++height;\n          payload = Decimal.fromNumber(fracheight);\n        } else {\n          if (this.eq(10)) {\n            payload = payload.layeradd10(fracheight);\n          } else {\n            payload = payload.layeradd(fracheight, this);\n          }\n        }\n      }\n\n      for (var i = 0; i < height; ++i) {\n        payload = this.tetrate(payload.toNumber()); //bail if we're NaN\n\n        if (!isFinite(payload.layer) || !isFinite(payload.mag)) {\n          return payload.normalize();\n        } //give up after 10 iterations if nothing is happening\n\n\n        if (i > 10) {\n          return payload;\n        }\n      }\n\n      return payload;\n    } // trig functions!\n\n  }, {\n    key: \"sin\",\n    value: function sin() {\n      if (this.mag < 0) {\n        return this;\n      }\n\n      if (this.layer === 0) {\n        return Decimal.fromNumber(Math.sin(this.sign * this.mag));\n      }\n\n      return FC_NN(0, 0, 0);\n    }\n  }, {\n    key: \"cos\",\n    value: function cos() {\n      if (this.mag < 0) {\n        return Decimal.dOne;\n      }\n\n      if (this.layer === 0) {\n        return Decimal.fromNumber(Math.cos(this.sign * this.mag));\n      }\n\n      return FC_NN(0, 0, 0);\n    }\n  }, {\n    key: \"tan\",\n    value: function tan() {\n      if (this.mag < 0) {\n        return this;\n      }\n\n      if (this.layer === 0) {\n        return Decimal.fromNumber(Math.tan(this.sign * this.mag));\n      }\n\n      return FC_NN(0, 0, 0);\n    }\n  }, {\n    key: \"asin\",\n    value: function asin() {\n      if (this.mag < 0) {\n        return this;\n      }\n\n      if (this.layer === 0) {\n        return Decimal.fromNumber(Math.asin(this.sign * this.mag));\n      }\n\n      return FC_NN(Number.NaN, Number.NaN, Number.NaN);\n    }\n  }, {\n    key: \"acos\",\n    value: function acos() {\n      if (this.mag < 0) {\n        return Decimal.fromNumber(Math.acos(this.toNumber()));\n      }\n\n      if (this.layer === 0) {\n        return Decimal.fromNumber(Math.acos(this.sign * this.mag));\n      }\n\n      return FC_NN(Number.NaN, Number.NaN, Number.NaN);\n    }\n  }, {\n    key: \"atan\",\n    value: function atan() {\n      if (this.mag < 0) {\n        return this;\n      }\n\n      if (this.layer === 0) {\n        return Decimal.fromNumber(Math.atan(this.sign * this.mag));\n      }\n\n      return Decimal.fromNumber(Math.atan(this.sign * 1.8e308));\n    }\n  }, {\n    key: \"sinh\",\n    value: function sinh() {\n      return this.exp().sub(this.negate().exp()).div(2);\n    }\n  }, {\n    key: \"cosh\",\n    value: function cosh() {\n      return this.exp().add(this.negate().exp()).div(2);\n    }\n  }, {\n    key: \"tanh\",\n    value: function tanh() {\n      return this.sinh().div(this.cosh());\n    }\n  }, {\n    key: \"asinh\",\n    value: function asinh() {\n      return Decimal.ln(this.add(this.sqr().add(1).sqrt()));\n    }\n  }, {\n    key: \"acosh\",\n    value: function acosh() {\n      return Decimal.ln(this.add(this.sqr().sub(1).sqrt()));\n    }\n  }, {\n    key: \"atanh\",\n    value: function atanh() {\n      if (this.abs().gte(1)) {\n        return FC_NN(Number.NaN, Number.NaN, Number.NaN);\n      }\n\n      return Decimal.ln(this.add(1).div(Decimal.fromNumber(1).sub(this))).div(2);\n    }\n    /**\r\n     * Joke function from Realm Grinder\r\n     */\n\n  }, {\n    key: \"ascensionPenalty\",\n    value: function ascensionPenalty(ascensions) {\n      if (ascensions === 0) {\n        return this;\n      }\n\n      return this.root(Decimal.pow(10, ascensions));\n    }\n    /**\r\n     * Joke function from Cookie Clicker. It's 'egg'\r\n     */\n\n  }, {\n    key: \"egg\",\n    value: function egg() {\n      return this.add(9);\n    }\n  }, {\n    key: \"lessThanOrEqualTo\",\n    value: function lessThanOrEqualTo(other) {\n      return this.cmp(other) < 1;\n    }\n  }, {\n    key: \"lessThan\",\n    value: function lessThan(other) {\n      return this.cmp(other) < 0;\n    }\n  }, {\n    key: \"greaterThanOrEqualTo\",\n    value: function greaterThanOrEqualTo(other) {\n      return this.cmp(other) > -1;\n    }\n  }, {\n    key: \"greaterThan\",\n    value: function greaterThan(other) {\n      return this.cmp(other) > 0;\n    }\n  }], [{\n    key: \"fromComponents\",\n    value: function fromComponents(sign, layer, mag) {\n      return new Decimal().fromComponents(sign, layer, mag);\n    }\n  }, {\n    key: \"fromComponents_noNormalize\",\n    value: function fromComponents_noNormalize(sign, layer, mag) {\n      return new Decimal().fromComponents_noNormalize(sign, layer, mag);\n    }\n  }, {\n    key: \"fromMantissaExponent\",\n    value: function fromMantissaExponent(mantissa, exponent) {\n      return new Decimal().fromMantissaExponent(mantissa, exponent);\n    }\n  }, {\n    key: \"fromMantissaExponent_noNormalize\",\n    value: function fromMantissaExponent_noNormalize(mantissa, exponent) {\n      return new Decimal().fromMantissaExponent_noNormalize(mantissa, exponent);\n    }\n  }, {\n    key: \"fromDecimal\",\n    value: function fromDecimal(value) {\n      return new Decimal().fromDecimal(value);\n    }\n  }, {\n    key: \"fromNumber\",\n    value: function fromNumber(value) {\n      return new Decimal().fromNumber(value);\n    }\n  }, {\n    key: \"fromString\",\n    value: function fromString(value) {\n      return new Decimal().fromString(value);\n    }\n  }, {\n    key: \"fromValue\",\n    value: function fromValue(value) {\n      return new Decimal().fromValue(value);\n    }\n    /**\r\n     * Converts a DecimalSource to a Decimal, without constructing a new Decimal\r\n     * if the provided value is already a Decimal.\r\n     *\r\n     * As the return value could be the provided value itself, this function\r\n     * returns a read-only Decimal to prevent accidental mutations of the value.\r\n     * Use `new Decimal(value)` to explicitly create a writeable copy if mutation\r\n     * is required.\r\n     */\n\n  }, {\n    key: \"fromValue_noAlloc\",\n    value: function fromValue_noAlloc(value) {\n      if (value instanceof Decimal) {\n        return value;\n      } else if (typeof value === \"string\") {\n        var cached = Decimal.fromStringCache.get(value);\n\n        if (cached !== undefined) {\n          return cached;\n        }\n\n        return Decimal.fromString(value);\n      } else if (typeof value === \"number\") {\n        return Decimal.fromNumber(value);\n      } else {\n        // This should never happen... but some users like Prestige Tree Rewritten\n        // pass undefined values in as DecimalSources, so we should handle this\n        // case to not break them.\n        return Decimal.dZero;\n      }\n    }\n  }, {\n    key: \"abs\",\n    value: function abs(value) {\n      return D(value).abs();\n    }\n  }, {\n    key: \"neg\",\n    value: function neg(value) {\n      return D(value).neg();\n    }\n  }, {\n    key: \"negate\",\n    value: function negate(value) {\n      return D(value).neg();\n    }\n  }, {\n    key: \"negated\",\n    value: function negated(value) {\n      return D(value).neg();\n    }\n  }, {\n    key: \"sign\",\n    value: function sign(value) {\n      return D(value).sign;\n    }\n  }, {\n    key: \"sgn\",\n    value: function sgn(value) {\n      return D(value).sign;\n    }\n  }, {\n    key: \"round\",\n    value: function round(value) {\n      return D(value).round();\n    }\n  }, {\n    key: \"floor\",\n    value: function floor(value) {\n      return D(value).floor();\n    }\n  }, {\n    key: \"ceil\",\n    value: function ceil(value) {\n      return D(value).ceil();\n    }\n  }, {\n    key: \"trunc\",\n    value: function trunc(value) {\n      return D(value).trunc();\n    }\n  }, {\n    key: \"add\",\n    value: function add(value, other) {\n      return D(value).add(other);\n    }\n  }, {\n    key: \"plus\",\n    value: function plus(value, other) {\n      return D(value).add(other);\n    }\n  }, {\n    key: \"sub\",\n    value: function sub(value, other) {\n      return D(value).sub(other);\n    }\n  }, {\n    key: \"subtract\",\n    value: function subtract(value, other) {\n      return D(value).sub(other);\n    }\n  }, {\n    key: \"minus\",\n    value: function minus(value, other) {\n      return D(value).sub(other);\n    }\n  }, {\n    key: \"mul\",\n    value: function mul(value, other) {\n      return D(value).mul(other);\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply(value, other) {\n      return D(value).mul(other);\n    }\n  }, {\n    key: \"times\",\n    value: function times(value, other) {\n      return D(value).mul(other);\n    }\n  }, {\n    key: \"div\",\n    value: function div(value, other) {\n      return D(value).div(other);\n    }\n  }, {\n    key: \"divide\",\n    value: function divide(value, other) {\n      return D(value).div(other);\n    }\n  }, {\n    key: \"recip\",\n    value: function recip(value) {\n      return D(value).recip();\n    }\n  }, {\n    key: \"reciprocal\",\n    value: function reciprocal(value) {\n      return D(value).recip();\n    }\n  }, {\n    key: \"reciprocate\",\n    value: function reciprocate(value) {\n      return D(value).reciprocate();\n    }\n  }, {\n    key: \"cmp\",\n    value: function cmp(value, other) {\n      return D(value).cmp(other);\n    }\n  }, {\n    key: \"cmpabs\",\n    value: function cmpabs(value, other) {\n      return D(value).cmpabs(other);\n    }\n  }, {\n    key: \"compare\",\n    value: function compare(value, other) {\n      return D(value).cmp(other);\n    }\n  }, {\n    key: \"isNaN\",\n    value: function (_isNaN) {\n      function isNaN(_x) {\n        return _isNaN.apply(this, arguments);\n      }\n\n      isNaN.toString = function () {\n        return _isNaN.toString();\n      };\n\n      return isNaN;\n    }(function (value) {\n      value = D(value);\n      return isNaN(value.sign) || isNaN(value.layer) || isNaN(value.mag);\n    })\n  }, {\n    key: \"isFinite\",\n    value: function (_isFinite) {\n      function isFinite(_x2) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      value = D(value);\n      return isFinite(value.sign) && isFinite(value.layer) && isFinite(value.mag);\n    })\n  }, {\n    key: \"eq\",\n    value: function eq(value, other) {\n      return D(value).eq(other);\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(value, other) {\n      return D(value).eq(other);\n    }\n  }, {\n    key: \"neq\",\n    value: function neq(value, other) {\n      return D(value).neq(other);\n    }\n  }, {\n    key: \"notEquals\",\n    value: function notEquals(value, other) {\n      return D(value).notEquals(other);\n    }\n  }, {\n    key: \"lt\",\n    value: function lt(value, other) {\n      return D(value).lt(other);\n    }\n  }, {\n    key: \"lte\",\n    value: function lte(value, other) {\n      return D(value).lte(other);\n    }\n  }, {\n    key: \"gt\",\n    value: function gt(value, other) {\n      return D(value).gt(other);\n    }\n  }, {\n    key: \"gte\",\n    value: function gte(value, other) {\n      return D(value).gte(other);\n    }\n  }, {\n    key: \"max\",\n    value: function max(value, other) {\n      return D(value).max(other);\n    }\n  }, {\n    key: \"min\",\n    value: function min(value, other) {\n      return D(value).min(other);\n    }\n  }, {\n    key: \"minabs\",\n    value: function minabs(value, other) {\n      return D(value).minabs(other);\n    }\n  }, {\n    key: \"maxabs\",\n    value: function maxabs(value, other) {\n      return D(value).maxabs(other);\n    }\n  }, {\n    key: \"clamp\",\n    value: function clamp(value, min, max) {\n      return D(value).clamp(min, max);\n    }\n  }, {\n    key: \"clampMin\",\n    value: function clampMin(value, min) {\n      return D(value).clampMin(min);\n    }\n  }, {\n    key: \"clampMax\",\n    value: function clampMax(value, max) {\n      return D(value).clampMax(max);\n    }\n  }, {\n    key: \"cmp_tolerance\",\n    value: function cmp_tolerance(value, other, tolerance) {\n      return D(value).cmp_tolerance(other, tolerance);\n    }\n  }, {\n    key: \"compare_tolerance\",\n    value: function compare_tolerance(value, other, tolerance) {\n      return D(value).cmp_tolerance(other, tolerance);\n    }\n  }, {\n    key: \"eq_tolerance\",\n    value: function eq_tolerance(value, other, tolerance) {\n      return D(value).eq_tolerance(other, tolerance);\n    }\n  }, {\n    key: \"equals_tolerance\",\n    value: function equals_tolerance(value, other, tolerance) {\n      return D(value).eq_tolerance(other, tolerance);\n    }\n  }, {\n    key: \"neq_tolerance\",\n    value: function neq_tolerance(value, other, tolerance) {\n      return D(value).neq_tolerance(other, tolerance);\n    }\n  }, {\n    key: \"notEquals_tolerance\",\n    value: function notEquals_tolerance(value, other, tolerance) {\n      return D(value).notEquals_tolerance(other, tolerance);\n    }\n  }, {\n    key: \"lt_tolerance\",\n    value: function lt_tolerance(value, other, tolerance) {\n      return D(value).lt_tolerance(other, tolerance);\n    }\n  }, {\n    key: \"lte_tolerance\",\n    value: function lte_tolerance(value, other, tolerance) {\n      return D(value).lte_tolerance(other, tolerance);\n    }\n  }, {\n    key: \"gt_tolerance\",\n    value: function gt_tolerance(value, other, tolerance) {\n      return D(value).gt_tolerance(other, tolerance);\n    }\n  }, {\n    key: \"gte_tolerance\",\n    value: function gte_tolerance(value, other, tolerance) {\n      return D(value).gte_tolerance(other, tolerance);\n    }\n  }, {\n    key: \"pLog10\",\n    value: function pLog10(value) {\n      return D(value).pLog10();\n    }\n  }, {\n    key: \"absLog10\",\n    value: function absLog10(value) {\n      return D(value).absLog10();\n    }\n  }, {\n    key: \"log10\",\n    value: function log10(value) {\n      return D(value).log10();\n    }\n  }, {\n    key: \"log\",\n    value: function log(value, base) {\n      return D(value).log(base);\n    }\n  }, {\n    key: \"log2\",\n    value: function log2(value) {\n      return D(value).log2();\n    }\n  }, {\n    key: \"ln\",\n    value: function ln(value) {\n      return D(value).ln();\n    }\n  }, {\n    key: \"logarithm\",\n    value: function logarithm(value, base) {\n      return D(value).logarithm(base);\n    }\n  }, {\n    key: \"pow\",\n    value: function pow(value, other) {\n      return D(value).pow(other);\n    }\n  }, {\n    key: \"pow10\",\n    value: function pow10(value) {\n      return D(value).pow10();\n    }\n  }, {\n    key: \"root\",\n    value: function root(value, other) {\n      return D(value).root(other);\n    }\n  }, {\n    key: \"factorial\",\n    value: function factorial(value, _other) {\n      return D(value).factorial();\n    }\n  }, {\n    key: \"gamma\",\n    value: function gamma(value, _other) {\n      return D(value).gamma();\n    }\n  }, {\n    key: \"lngamma\",\n    value: function lngamma(value, _other) {\n      return D(value).lngamma();\n    }\n  }, {\n    key: \"exp\",\n    value: function exp(value) {\n      return D(value).exp();\n    }\n  }, {\n    key: \"sqr\",\n    value: function sqr(value) {\n      return D(value).sqr();\n    }\n  }, {\n    key: \"sqrt\",\n    value: function sqrt(value) {\n      return D(value).sqrt();\n    }\n  }, {\n    key: \"cube\",\n    value: function cube(value) {\n      return D(value).cube();\n    }\n  }, {\n    key: \"cbrt\",\n    value: function cbrt(value) {\n      return D(value).cbrt();\n    }\n  }, {\n    key: \"tetrate\",\n    value: function tetrate(value) {\n      var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n      var payload = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : FC_NN(1, 0, 1);\n      return D(value).tetrate(height, payload);\n    }\n  }, {\n    key: \"iteratedexp\",\n    value: function iteratedexp(value) {\n      var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n      var payload = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : FC_NN(1, 0, 1);\n      return D(value).iteratedexp(height, payload);\n    }\n  }, {\n    key: \"iteratedlog\",\n    value: function iteratedlog(value) {\n      var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n      var times = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      return D(value).iteratedlog(base, times);\n    }\n  }, {\n    key: \"layeradd10\",\n    value: function layeradd10(value, diff) {\n      return D(value).layeradd10(diff);\n    }\n  }, {\n    key: \"layeradd\",\n    value: function layeradd(value, diff) {\n      var base = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n      return D(value).layeradd(diff, base);\n    }\n  }, {\n    key: \"slog\",\n    value: function slog(value) {\n      var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n      return D(value).slog(base);\n    }\n  }, {\n    key: \"lambertw\",\n    value: function lambertw(value) {\n      return D(value).lambertw();\n    }\n  }, {\n    key: \"ssqrt\",\n    value: function ssqrt(value) {\n      return D(value).ssqrt();\n    }\n  }, {\n    key: \"pentate\",\n    value: function pentate(value) {\n      var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n      var payload = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : FC_NN(1, 0, 1);\n      return D(value).pentate(height, payload);\n    }\n    /**\r\n     * If you're willing to spend 'resourcesAvailable' and want to buy something\r\n     * with exponentially increasing cost each purchase (start at priceStart,\r\n     * multiply by priceRatio, already own currentOwned), how much of it can you buy?\r\n     * Adapted from Trimps source code.\r\n     */\n\n  }, {\n    key: \"affordGeometricSeries\",\n    value: function affordGeometricSeries(resourcesAvailable, priceStart, priceRatio, currentOwned) {\n      return this.affordGeometricSeries_core(D(resourcesAvailable), D(priceStart), D(priceRatio), currentOwned);\n    }\n    /**\r\n     * How much resource would it cost to buy (numItems) items if you already have currentOwned,\r\n     * the initial price is priceStart and it multiplies by priceRatio each purchase?\r\n     */\n\n  }, {\n    key: \"sumGeometricSeries\",\n    value: function sumGeometricSeries(numItems, priceStart, priceRatio, currentOwned) {\n      return this.sumGeometricSeries_core(numItems, D(priceStart), D(priceRatio), currentOwned);\n    }\n    /**\r\n     * If you're willing to spend 'resourcesAvailable' and want to buy something with additively\r\n     * increasing cost each purchase (start at priceStart, add by priceAdd, already own currentOwned),\r\n     * how much of it can you buy?\r\n     */\n\n  }, {\n    key: \"affordArithmeticSeries\",\n    value: function affordArithmeticSeries(resourcesAvailable, priceStart, priceAdd, currentOwned) {\n      return this.affordArithmeticSeries_core(D(resourcesAvailable), D(priceStart), D(priceAdd), D(currentOwned));\n    }\n    /**\r\n     * How much resource would it cost to buy (numItems) items if you already have currentOwned,\r\n     * the initial price is priceStart and it adds priceAdd each purchase?\r\n     * Adapted from http://www.mathwords.com/a/arithmetic_series.htm\r\n     */\n\n  }, {\n    key: \"sumArithmeticSeries\",\n    value: function sumArithmeticSeries(numItems, priceStart, priceAdd, currentOwned) {\n      return this.sumArithmeticSeries_core(D(numItems), D(priceStart), D(priceAdd), D(currentOwned));\n    }\n    /**\r\n     * When comparing two purchases that cost (resource) and increase your resource/sec by (deltaRpS),\r\n     * the lowest efficiency score is the better one to purchase.\r\n     * From Frozen Cookies:\r\n     * http://cookieclicker.wikia.com/wiki/Frozen_Cookies_(JavaScript_Add-on)#Efficiency.3F_What.27s_that.3F\r\n     */\n\n  }, {\n    key: \"efficiencyOfPurchase\",\n    value: function efficiencyOfPurchase(cost, currentRpS, deltaRpS) {\n      return this.efficiencyOfPurchase_core(D(cost), D(currentRpS), D(deltaRpS));\n    }\n  }, {\n    key: \"randomDecimalForTesting\",\n    value: function randomDecimalForTesting(maxLayers) {\n      // NOTE: This doesn't follow any kind of sane random distribution, so use this for testing purposes only.\n      //5% of the time, return 0\n      if (Math.random() * 20 < 1) {\n        return FC_NN(0, 0, 0);\n      }\n\n      var randomsign = Math.random() > 0.5 ? 1 : -1; //5% of the time, return 1 or -1\n\n      if (Math.random() * 20 < 1) {\n        return FC_NN(randomsign, 0, 1);\n      } //pick a random layer\n\n\n      var layer = Math.floor(Math.random() * (maxLayers + 1));\n      var randomexp = layer === 0 ? Math.random() * 616 - 308 : Math.random() * 16; //10% of the time, make it a simple power of 10\n\n      if (Math.random() > 0.9) {\n        randomexp = Math.trunc(randomexp);\n      }\n\n      var randommag = Math.pow(10, randomexp); //10% of the time, trunc mag\n\n      if (Math.random() > 0.9) {\n        randommag = Math.trunc(randommag);\n      }\n\n      return FC(randomsign, layer, randommag);\n    }\n  }, {\n    key: \"affordGeometricSeries_core\",\n    value: function affordGeometricSeries_core(resourcesAvailable, priceStart, priceRatio, currentOwned) {\n      var actualStart = priceStart.mul(priceRatio.pow(currentOwned));\n      return Decimal.floor(resourcesAvailable.div(actualStart).mul(priceRatio.sub(1)).add(1).log10().div(priceRatio.log10()));\n    }\n  }, {\n    key: \"sumGeometricSeries_core\",\n    value: function sumGeometricSeries_core(numItems, priceStart, priceRatio, currentOwned) {\n      return priceStart.mul(priceRatio.pow(currentOwned)).mul(Decimal.sub(1, priceRatio.pow(numItems))).div(Decimal.sub(1, priceRatio));\n    }\n  }, {\n    key: \"affordArithmeticSeries_core\",\n    value: function affordArithmeticSeries_core(resourcesAvailable, priceStart, priceAdd, currentOwned) {\n      // n = (-(a-d/2) + sqrt((a-d/2)^2+2dS))/d\n      // where a is actualStart, d is priceAdd and S is resourcesAvailable\n      // then floor it and you're done!\n      var actualStart = priceStart.add(currentOwned.mul(priceAdd));\n      var b = actualStart.sub(priceAdd.div(2));\n      var b2 = b.pow(2);\n      return b.neg().add(b2.add(priceAdd.mul(resourcesAvailable).mul(2)).sqrt()).div(priceAdd).floor();\n    }\n  }, {\n    key: \"sumArithmeticSeries_core\",\n    value: function sumArithmeticSeries_core(numItems, priceStart, priceAdd, currentOwned) {\n      var actualStart = priceStart.add(currentOwned.mul(priceAdd)); // (n/2)*(2*a+(n-1)*d)\n\n      return numItems.div(2).mul(actualStart.mul(2).plus(numItems.sub(1).mul(priceAdd)));\n    }\n  }, {\n    key: \"efficiencyOfPurchase_core\",\n    value: function efficiencyOfPurchase_core(cost, currentRpS, deltaRpS) {\n      return cost.div(currentRpS).add(cost.div(deltaRpS));\n    }\n  }, {\n    key: \"slog_critical\",\n    value: function slog_critical(base, height) {\n      //TODO: for bases above 10, revert to old linear approximation until I can think of something better\n      if (base > 10) {\n        return height - 1;\n      }\n\n      return Decimal.critical_section(base, height, critical_slog_values);\n    }\n  }, {\n    key: \"tetrate_critical\",\n    value: function tetrate_critical(base, height) {\n      return Decimal.critical_section(base, height, critical_tetr_values);\n    }\n  }, {\n    key: \"critical_section\",\n    value: function critical_section(base, height, grid) {\n      //this part is simple at least, since it's just 0.1 to 0.9\n      height *= 10;\n\n      if (height < 0) {\n        height = 0;\n      }\n\n      if (height > 10) {\n        height = 10;\n      } //have to do this complicated song and dance since one of the critical_headers is Math.E, and in the future I'd like 1.5 as well\n\n\n      if (base < 2) {\n        base = 2;\n      }\n\n      if (base > 10) {\n        base = 10;\n      }\n\n      var lower = 0;\n      var upper = 0; //basically, if we're between bases, we interpolate each bases' relevant values together\n      //then we interpolate based on what the fractional height is.\n      //accuracy could be improved by doing a non-linear interpolation (maybe), by adding more bases and heights (definitely) but this is AFAIK the best you can get without running some pari.gp or mathematica program to calculate exact values\n      //however, do note http://myweb.astate.edu/wpaulsen/tetcalc/tetcalc.html can do it for arbitrary heights but not for arbitrary bases (2, e, 10 present)\n\n      for (var i = 0; i < critical_headers.length; ++i) {\n        if (critical_headers[i] == base) {\n          // exact match\n          lower = grid[i][Math.floor(height)];\n          upper = grid[i][Math.ceil(height)];\n          break;\n        } else if (critical_headers[i] < base && critical_headers[i + 1] > base) {\n          // interpolate between this and the next\n          var basefrac = (base - critical_headers[i]) / (critical_headers[i + 1] - critical_headers[i]);\n          lower = grid[i][Math.floor(height)] * (1 - basefrac) + grid[i + 1][Math.floor(height)] * basefrac;\n          upper = grid[i][Math.ceil(height)] * (1 - basefrac) + grid[i + 1][Math.ceil(height)] * basefrac;\n          break;\n        }\n      }\n\n      var frac = height - Math.floor(height); //improvement - you get more accuracy (especially around 0.9-1.0) by doing log, then frac, then powing the result\n      //(we could pre-log the lookup table, but then fractional bases would get Weird)\n\n      var result = Math.pow(base, Math.log(lower) / Math.log(base) * (1 - frac) + Math.log(upper) / Math.log(base) * frac);\n      return result;\n    }\n  }]);\n\n  return Decimal;\n}();\nDecimal.dZero = FC_NN(0, 0, 0);\nDecimal.dOne = FC_NN(1, 0, 1);\nDecimal.dNegOne = FC_NN(-1, 0, 1);\nDecimal.dTwo = FC_NN(1, 0, 2);\nDecimal.dTen = FC_NN(1, 0, 10);\nDecimal.dNaN = FC_NN(Number.NaN, Number.NaN, Number.NaN);\nDecimal.dInf = FC_NN(1, Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY);\nDecimal.dNegInf = FC_NN(-1, Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY);\nDecimal.dNumberMax = FC(1, 0, Number.MAX_VALUE);\nDecimal.dNumberMin = FC(1, 0, Number.MIN_VALUE);\nDecimal.fromStringCache = new LRUCache(DEFAULT_FROM_STRING_CACHE_SIZE); // return Decimal;\n// Optimise Decimal aliases.\n// We can't do this optimisation before Decimal is assigned.\n\nD = Decimal.fromValue_noAlloc;\nFC = Decimal.fromComponents;\nFC_NN = Decimal.fromComponents_noNormalize; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nDecimal.fromMantissaExponent; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nDecimal.fromMantissaExponent_noNormalize;\n\nexport { Decimal as default };\n","import {\r\n    getUpgradeTimesBought,\r\n    isUpgradeName,\r\n    player,\r\n    playerSettings\r\n} from \"./player\";\r\nimport Decimal from \"break_eternity.js\";\r\n\r\ndeclare global {\r\n    interface Window {\r\n        changeCheatMode?: VoidFunction;\r\n        cheat?: VoidFunction;\r\n        clearls: VoidFunction;\r\n    }\r\n}\r\n\r\nfunction decimalPlaces(\r\n    value: number,\r\n    places: number,\r\n    trunc = (x: number) => x\r\n): number {\r\n    const length = places + 1;\r\n    const digitsCount = Math.ceil(Math.log10(Math.abs(value)));\r\n    const rounded =\r\n        Math.round(value * 10 ** (length - digitsCount)) *\r\n        10 ** (digitsCount - length);\r\n    return trunc(Number(rounded.toFixed(Math.max(length - digitsCount, 0))));\r\n}\r\n\r\nexport function formatDecimal(d: Decimal, places = 3, ePlaces = 99): string {\r\n    if (d.layer === 0) {\r\n        if ((d.mag < 1e4 && d.mag > 1e-7) || d.mag === 0) {\r\n            return (d.sign * d.mag).toFixed(places);\r\n        }\r\n        return `${decimalPlaces(d.m, places)}e${decimalPlaces(\r\n            d.e,\r\n            ePlaces,\r\n            Math.round\r\n        )}`;\r\n    } else if (d.layer === 1) {\r\n        return `${decimalPlaces(d.m, places)}e${decimalPlaces(\r\n            d.e,\r\n            ePlaces,\r\n            Math.round\r\n        )}`;\r\n    } else {\r\n        if (d.layer <= 5) {\r\n            return `${d.sign === -1 ? \"-\" : \"\"}${\"e\".repeat(d.layer)}\r\n        ${decimalPlaces(d.mag, ePlaces, Math.round)}`;\r\n        } else {\r\n            return `${d.sign === -1 ? \"-\" : \"\"}(e^${d.layer})${decimalPlaces(\r\n                d.mag,\r\n                ePlaces,\r\n                Math.round\r\n            )}`;\r\n        }\r\n    }\r\n}\r\n\r\nexport function format(n: number): string {\r\n    return Math.log10(n) >= 6\r\n        ? n.toExponential(2).replace(\"e+\", \"e\").replace(\".00\", \"\")\r\n        : n.toFixed(0);\r\n}\r\n\r\nexport function formatBig(n: Decimal): string {\r\n    return n.absLog10().toNumber() >= 6\r\n        ? formatDecimal(n, 2).replace(\"e+\", \"e\").replace(\".00\", \"\")\r\n        : n.toFixed(0);\r\n}\r\n\r\nexport function formatSpecific(n: number): string {\r\n    return Math.log10(n) >= 6\r\n        ? n.toExponential(2).replace(\"e+\", \"e\").replace(\".00\", \"\")\r\n        : n.toFixed(3).replace(\".000\", \"\");\r\n}\r\n\r\nexport function formatBigSpecific(n: Decimal): string {\r\n    return n.absLog10().toNumber() >= 6\r\n        ? formatDecimal(n, 2).replace(\"e+\", \"e\").replace(\".00\", \"\")\r\n        : n.toFixed(3).replace(\".000\", \"\");\r\n}\r\n\r\nfunction assertElementType<T extends keyof HTMLElementTagNameMap>(\r\n    element: HTMLElement,\r\n    type: T\r\n): asserts element is HTMLElementTagNameMap[T] {\r\n    if (element.tagName !== type.toUpperCase()) {\r\n        throw new TypeError(`element isn't a <${type}> HTML element`);\r\n    }\r\n}\r\n\r\n/**\r\n * @param id Id of the element to get.\r\n * @returns The HTML element with the given id.\r\n */\r\nexport function getElement(id: string): HTMLElement;\r\n/**\r\n * @param id Id of the element to get.\r\n * @param type The expected tag name of the element.\r\n * @returns The HTML element with the given id.\r\n */\r\nexport function getElement<T extends keyof HTMLElementTagNameMap>(\r\n    id: string,\r\n    type: T\r\n): HTMLElementTagNameMap[T];\r\nexport function getElement<T extends keyof HTMLElementTagNameMap>(\r\n    id: string,\r\n    type?: T\r\n): HTMLElement | HTMLElementTagNameMap[T] {\r\n    const element = document.getElementById(id);\r\n    if (element === null) {\r\n        throw new Error(`Element with id ${id} dosen't exist`);\r\n    }\r\n\r\n    if (type !== undefined) {\r\n        assertElementType(element, type);\r\n    }\r\n    return element;\r\n}\r\n\r\ntype D2Arg<T> = T | Decimal | Operator | D2Arg<T>[];\r\n\r\nconst operatorMap = {\r\n    \"+\": \"plus\",\r\n    \"*\": \"times\",\r\n    \"/\": \"div\",\r\n    \"^\": \"pow\"\r\n} as const;\r\n\r\ntype Operator = keyof typeof operatorMap;\r\n\r\nfunction isOperator(x: unknown): x is Operator {\r\n    return typeof x === \"string\" && x in operatorMap;\r\n}\r\n\r\nexport function onDecimal<T = string>(\r\n    is: (x: unknown) => x is T,\r\n    lookup: (key: T) => Decimal\r\n) {\r\n    function fn(\r\n        start: T | Decimal | D2Arg<T>[],\r\n        ...terms: D2Arg<T>[]\r\n    ): Decimal {\r\n        let result: Decimal | ((x: D2Arg<T>) => Decimal);\r\n        if (Array.isArray(start)) {\r\n            const [first, rest] = splitArgs(start);\r\n            result = fn(first, ...rest);\r\n        } else {\r\n            result = start instanceof Decimal ? start : lookup(start);\r\n        }\r\n\r\n        terms.forEach(token => {\r\n            if (typeof result === \"function\") {\r\n                if (isOperator(token)) {\r\n                    throw new Error(\"two operations in a row\");\r\n                }\r\n                if (Array.isArray(token)) {\r\n                    const [first, rest] = splitArgs(token);\r\n                    result = result(fn(first, ...rest));\r\n                } else {\r\n                    const operand = is(token) ? lookup(token) : token;\r\n                    result = result(operand);\r\n                }\r\n            } else {\r\n                if (token instanceof Decimal) {\r\n                    result = result.times(token);\r\n                } else if (is(token)) {\r\n                    result = result.times(lookup(token));\r\n                } else if (Array.isArray(token)) {\r\n                    const [first, args] = splitArgs(token);\r\n                    result = result.times(fn(first, ...args));\r\n                } else {\r\n                    const left = result;\r\n                    const method = (d: Decimal) =>\r\n                        Decimal[operatorMap[token]](left, d);\r\n                    result = x => {\r\n                        if (x instanceof Decimal) {\r\n                            return method(x);\r\n                        }\r\n                        if (Decimal[x as never]) {\r\n                            throw new Error(\r\n                                \"cannot have two operations in a row\"\r\n                            );\r\n                        }\r\n\r\n                        return method(lookup(x as T));\r\n                    };\r\n                }\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    function splitArgs(args: D2Arg<T>[]): [T | Decimal, D2Arg<T>[]] {\r\n        const arr = [...args];\r\n        const head = arr.shift();\r\n        if (head === undefined) {\r\n            throw new Error(\"arr is empty\");\r\n        }\r\n        if (isOperator(head)) {\r\n            throw new Error(\"first token cannot be an operator\");\r\n        }\r\n        if (Array.isArray(head)) {\r\n            const [first, rest] = splitArgs(head);\r\n            return [fn(first, ...rest), arr];\r\n        }\r\n        return [head, arr];\r\n    }\r\n    return fn;\r\n}\r\n\r\nexport const onBought = onDecimal(isUpgradeName, key =>\r\n    getUpgradeTimesBought(key)\r\n);\r\n\r\nexport const onBoughtInc = onDecimal(isUpgradeName, key =>\r\n    getUpgradeTimesBought(key).plus(Decimal.dOne)\r\n);\r\n\r\n// dev only\r\nif (import.meta.env.DEV)\r\n    window.cheat = function (): void {\r\n        switch (playerSettings.cheatMode) {\r\n            case 0:\r\n                player.num = player.num.times(Decimal.dTwo);\r\n                break;\r\n            case 1:\r\n                player.alphaNum = player.alphaNum.times(Decimal.dTwo);\r\n                break;\r\n            case 2:\r\n                player.num = player.num.times(Decimal.dTwo);\r\n                player.alphaNum = player.alphaNum.times(Decimal.dTwo);\r\n                break;\r\n            case 3:\r\n                player.alphaNum = player.alphaNum\r\n                    .plus(Decimal.dOne)\r\n                    .times(Decimal.dTwo);\r\n                break;\r\n            case 4:\r\n                player.num = player.num.times(Decimal.dTwo);\r\n                player.alphaNum = player.alphaNum\r\n                    .plus(Decimal.dOne)\r\n                    .times(Decimal.dTwo);\r\n                break;\r\n            case 5:\r\n                player.betaNum = player.betaNum\r\n                    .plus(Decimal.dOne)\r\n                    .times(Decimal.dTwo);\r\n                break;\r\n        }\r\n\r\n        window.changeCheatMode = function (): void {\r\n            playerSettings.cheatMode = (playerSettings.cheatMode + 1) % 6;\r\n            getElement(\"cheatmodediv\").textContent =\r\n                playerSettings.cheatMode.toString();\r\n        };\r\n    };\r\nelse {\r\n    getElement(\"cheat\").style.display = \"none\";\r\n    getElement(\"devtoggle\").style.display = \"none\";\r\n}\r\n\r\nwindow.clearls = function (): void {\r\n    localStorage.clear();\r\n    location.reload();\r\n};\r\n","import { getElement } from \"./util\";\r\nimport Decimal from \"break_eternity.js\";\r\n\r\ndeclare global {\r\n    interface Window {\r\n        loadbackup: VoidFunction;\r\n        player?: typeof player;\r\n        playerSettings?: typeof playerSettings;\r\n        Decimal?: typeof Decimal;\r\n    }\r\n}\r\n\r\n/**\r\n * The player save data object.\r\n */\r\nexport const player = {\r\n    /**\r\n     * All the upgrades.\r\n     */\r\n    upgrades: {\r\n        gen: {\r\n            cost: Decimal.dZero,\r\n            timesBought: Decimal.dZero\r\n        },\r\n        biggerbatches: {\r\n            cost: new Decimal(2000),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        speed: {\r\n            cost: new Decimal(50),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        mbup: {\r\n            cost: new Decimal(100),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        mbmult: {\r\n            cost: new Decimal(1000),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        unlockgenboost: {\r\n            cost: new Decimal(5000),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        genboostuptime: {\r\n            cost: new Decimal(100),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        genboostupmult: {\r\n            cost: new Decimal(10000),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        nuclearbuy: {\r\n            cost: new Decimal(1e8),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        speedparticle: {\r\n            cost: new Decimal(5e4),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        machine: {\r\n            cost: new Decimal(2e4),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        nuclearalphabuy: {\r\n            cost: new Decimal(1e6),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        alphaacc: {\r\n            cost: new Decimal(1e10),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        threeboost: {\r\n            cost: Decimal.dOne,\r\n            timesBought: Decimal.dZero\r\n        },\r\n        perbang: {\r\n            cost: new Decimal(4),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        bangspeed: {\r\n            cost: Decimal.dOne,\r\n            timesBought: Decimal.dZero\r\n        },\r\n        unlockpca: {\r\n            cost: new Decimal(20),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        upgradepca: {\r\n            cost: Decimal.dTwo,\r\n            timesBought: Decimal.dZero\r\n        },\r\n        boosterup: {\r\n            cost: new Decimal(100),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        boosteruppercent: {\r\n            cost: new Decimal(100),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        genboostdouble: {\r\n            cost: Decimal.dOne,\r\n            timesBought: Decimal.dZero\r\n        },\r\n        alphamachinedouble: {\r\n            cost: new Decimal(1000),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        bangautobuyerunlock: {\r\n            cost: Decimal.dOne,\r\n            timesBought: Decimal.dZero\r\n        },\r\n        upgradebangautobuyer: {\r\n            cost: Decimal.dOne,\r\n            timesBought: Decimal.dZero\r\n        },\r\n        boostsacrifice: {\r\n            cost: new Decimal(1e5),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        betaacc: {\r\n            cost: new Decimal(1e10),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        unlockabgb: {\r\n            cost: Decimal.dOne,\r\n            timesBought: Decimal.dZero\r\n        },\r\n        abgbefficiency: {\r\n            cost: new Decimal(3),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        permerge: {\r\n            cost: new Decimal(4),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        mergespeed: {\r\n            cost: Decimal.dOne,\r\n            timesBought: Decimal.dZero\r\n        },\r\n        GnBBAunlock: {\r\n            cost: new Decimal(0.5),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        GBUAunlock: {\r\n            cost: new Decimal(0.5),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        MBUAunlock: {\r\n            cost: new Decimal(0.5),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        NPAunlock: {\r\n            cost: new Decimal(0.5),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        AAccAunlock: {\r\n            cost: new Decimal(0.5),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        SAunlock: {\r\n            cost: new Decimal(0.5),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        unlocknpboost: {\r\n            cost: Decimal.dTwo,\r\n            timesBought: Decimal.dZero\r\n        },\r\n        upgradenpboost: {\r\n            cost: Decimal.dTwo,\r\n            timesBought: Decimal.dZero\r\n        },\r\n        reactorupmult: {\r\n            cost: new Decimal(1500),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        reactoruptime: {\r\n            cost: new Decimal(1250),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        unlocknapboost: {\r\n            cost: new Decimal(15),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        upgradenapboost: {\r\n            cost: new Decimal(15),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        reactorUnlockNAP: {\r\n            cost: new Decimal(3e4),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        reactorUnlockBP: {\r\n            cost: new Decimal(8e6),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        reactorUnlockMB: {\r\n            cost: new Decimal(8000),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        reactorUnlockGB: {\r\n            cost: new Decimal(2.5e5),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        reactorupMB: {\r\n            cost: new Decimal(3000),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        doublebeta: {\r\n            cost: new Decimal(0.2),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        unlockaga: {\r\n            cost: new Decimal(0.25),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        upgradeaga: {\r\n            cost: new Decimal(0.25),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        mergeautobuyerunlock: {\r\n            cost: new Decimal(0.25),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        upgrademergeautobuyer: {\r\n            cost: new Decimal(0.25),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        buyreturngenerator: {\r\n            cost: new Decimal(1e5),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        rpup: {\r\n            cost: new Decimal(2.5e5),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        rpmult: {\r\n            cost: new Decimal(4e5),\r\n            timesBought: Decimal.dZero\r\n        },\r\n        omegabooster: {\r\n            cost: new Decimal(12),\r\n            timesBought: Decimal.dZero\r\n        }\r\n    },\r\n    num: Decimal.dZero,\r\n    alphaNum: Decimal.dZero,\r\n    betaNum: Decimal.dZero,\r\n    gammaNum: Decimal.dZero,\r\n    deltaNum: Decimal.dZero,\r\n    omegaNum: Decimal.dZero,\r\n    genBoostTimeLeft: Decimal.dZero,\r\n    genBoostTimeLeftCon: Decimal.dTen,\r\n    genBoostMult: Decimal.dOne,\r\n    pChunks: Decimal.dZero,\r\n    bangTime: 300,\r\n    bangTimeLeft: 1e300,\r\n    pcaToggle: true,\r\n    pcaTime: 160,\r\n    chunkAutobuyerTimeLeft: 0,\r\n    boosterParticles: Decimal.dZero,\r\n    untilBoost: 1,\r\n    omegaBase: Decimal.dZero,\r\n    omegaBaseCost: new Decimal(1e10),\r\n    omegaAlpha: Decimal.dZero,\r\n    omegaAlphaCost: new Decimal(1e12),\r\n    bangAutobuyerToggle: true,\r\n    bangAutobuyerTime: 160,\r\n    bangAutobuyerTimeLeft: 0,\r\n    clickerParticles: Decimal.dZero,\r\n    machineWear: 10,\r\n    aGroups: Decimal.dZero,\r\n    mergeTime: 300,\r\n    mergeTimeLeft: 1e300,\r\n    fuel: Decimal.dZero,\r\n    superfuel: Decimal.dZero,\r\n    hyperfuel: Decimal.dZero,\r\n    instantAutobuyers: {\r\n        genAutobuyerToggle: false,\r\n        bbAutobuyerToggle: false,\r\n        genBoostTimeAutobuyerToggle: false,\r\n        genBoostMultAutobuyerToggle: false,\r\n        manBoost1perClickAutobuyerToggle: false,\r\n        manBoost1xperClickAutobuyerToggle: false,\r\n        nuclearParticlesAutobuyerToggle: false,\r\n        nuclearAlphaParticlesAutobuyerToggle: false,\r\n        AlphaAccAutobuyerToggle: false,\r\n        SpeedAutobuyerToggle: false\r\n    },\r\n    mergeAutobuyerToggle: true,\r\n    mergeAutobuyerTime: 160,\r\n    mergeAutobuyerTimeLeft: 0,\r\n    agaToggle: true,\r\n    agaTime: 160,\r\n    groupAutobuyerTimeLeft: 0,\r\n    returnParticles: Decimal.dZero\r\n};\r\n\r\n/**\r\n * The player settings object.\r\n */\r\nexport const playerSettings = {\r\n    /**\r\n     * Current version of the game.\r\n     */\r\n    version: \"b2.3.0.0\",\r\n    /**\r\n     * The number of seconds every which the game gets automatically saved.\r\n     */\r\n    autoSaveDelay: 50,\r\n    autoSaveMode: 4,\r\n    autoSaveSet: 50,\r\n    /**\r\n     * Number of the currently active theme.\r\n     */\r\n    themeNumber: 0,\r\n    useExperimental: false,\r\n    /**\r\n     * Whether or not you're in development mode.\r\n     */\r\n    devToggled: false,\r\n    /**\r\n     * The current cheat mode, changes which resource you will gain from\r\n     * cheating.\r\n     */\r\n    cheatMode: 0,\r\n    /**\r\n     * Whether or not the music is enabled.\r\n     */\r\n    playMusic: false\r\n};\r\n\r\nif (import.meta.env.DEV) {\r\n    window.player = player;\r\n    window.playerSettings = playerSettings;\r\n    window.Decimal = Decimal;\r\n}\r\n\r\n/**\r\n * This function is run when the game loads. Use this to perform any\r\n * save migrations.\r\n */\r\nfunction updateGame(): void {\r\n    // TODO: NEVER forget to change this when updating the game\r\n    playerSettings.version = \"b2.3.0.0\";\r\n    if (\"eSetting\" in playerSettings) delete playerSettings.eSetting;\r\n}\r\n\r\n/**\r\n * Loads the player settings from localStorage.\r\n */\r\nexport function loadSettings(): void {\r\n    const settings = localStorage.getItem(location.pathname + \"settings\");\r\n    if (settings !== null) {\r\n        const decodedSettings = settings.startsWith(\"{\")\r\n            ? settings\r\n            : atob(settings);\r\n        deepMerge(playerSettings, JSON.parse(decodedSettings));\r\n    }\r\n    updateGame();\r\n\r\n    if (playerSettings.useExperimental) {\r\n        getElement(\"tabopengamma\").style.display = \"inline\";\r\n        getElement(\"tabopendelta\").style.display = \"inline\";\r\n        getElement(\"tabopenomegaomega\").style.display = \"inline\";\r\n        getElement(\"tabopenstats\").style.display = \"inline\";\r\n        getElement(\"tabopenachievements\").style.display = \"inline\";\r\n    } else {\r\n        getElement(\"tabopengamma\").style.display = \"none\";\r\n        getElement(\"tabopendelta\").style.display = \"none\";\r\n        getElement(\"tabopenomegaomega\").style.display = \"none\";\r\n        getElement(\"tabopenstats\").style.display = \"inline\";\r\n        getElement(\"tabopenachievements\").style.display = \"none\";\r\n    }\r\n    getElement(\"experimentoggle\").textContent =\r\n        playerSettings.useExperimental.toString();\r\n}\r\n\r\nDecimal.prototype.toJSON = function (): string {\r\n    return \"D#\" + this.toString();\r\n};\r\n\r\n/**\r\n * A utility function used when deserializing the player object, used to\r\n * handle Decimal values.\r\n */\r\nfunction saveRevive(_key: string, value: unknown): unknown {\r\n    return typeof value === \"string\" && value.startsWith(\"D#\")\r\n        ? new Decimal(value.slice(2))\r\n        : value;\r\n}\r\n\r\n/**\r\n * Recursively merge two objects.\r\n * @param source The object to which copy the property values from the\r\n * other object.\r\n * @param data The object from which to copy property values.\r\n */\r\nfunction deepMerge<T extends object>(source: T, data: T): void {\r\n    for (const key in data) {\r\n        const value = data[key];\r\n        if (\r\n            typeof value === \"object\" &&\r\n            value !== null &&\r\n            !(value instanceof Decimal)\r\n        ) {\r\n            const newSource = source[key];\r\n            if (!(key in source)) {\r\n                // @ts-expect-error uhh how do I convince TS this is fine?\r\n                source[key] = Array.isArray(value) ? [] : {};\r\n            }\r\n            if (typeof newSource === \"object\" && newSource !== null) {\r\n                deepMerge(newSource, value);\r\n            }\r\n        } else source[key] = value;\r\n    }\r\n}\r\n\r\n/**\r\n * Loads the player save from localStorage, if one exists.\r\n */\r\nexport function load(): void {\r\n    const save = localStorage.getItem(location.pathname);\r\n    if (save === null) return;\r\n    deepMerge(\r\n        player,\r\n        JSON.parse(save.startsWith(\"{\") ? save : atob(save), saveRevive)\r\n    );\r\n}\r\n\r\n/**\r\n * Loads the backup save from localStorage, if one exists.\r\n */\r\nwindow.loadbackup = function (): void {\r\n    const backup = localStorage.getItem(`${location.pathname}backupsave`);\r\n    if (backup === null) return;\r\n    localStorage.setItem(location.pathname, backup);\r\n    location.reload();\r\n};\r\n\r\nexport type InstantAutobuyerName = keyof typeof player.instantAutobuyers;\r\n\r\n/**\r\n * @returns Whether or not the given value is the name of one of the\r\n * autobuyers.\r\n */\r\nexport function isAutobuyerName(x: string): x is InstantAutobuyerName {\r\n    return x in player.instantAutobuyers;\r\n}\r\n\r\nexport type UpgradeName = keyof typeof player.upgrades;\r\nexport const UpgradeNames = Object.keys(player.upgrades) as UpgradeName[];\r\n\r\n/**\r\n * @returns Whether or not the given value is the name of one of the\r\n * upgrades.\r\n */\r\nexport function isUpgradeName(x: unknown): x is UpgradeName {\r\n    return typeof x === \"string\" && x in player.upgrades;\r\n}\r\n\r\n/**\r\n * A utility function to get the current cost of an upgrade.\r\n * @param upgradeName The name of the upgrade.\r\n * @returns The cost of the given upgrade.\r\n */\r\nexport function getUpgradeCost(upgradeName: UpgradeName): Decimal {\r\n    return player.upgrades[upgradeName].cost;\r\n}\r\n\r\n/**\r\n * A utility function to change the cost of an upgade.\r\n * @param upgradeName The name of the upgrade.\r\n * @param newCost The new cost of the given upgrade.\r\n */\r\nexport function setUpgradeCost(\r\n    upgradeName: UpgradeName,\r\n    newCost: Decimal\r\n): void {\r\n    player.upgrades[upgradeName].cost = newCost;\r\n}\r\n\r\n/**\r\n * A utility function to get the current level of an upgrade.\r\n * @param upgradeName The name of the upgrade.\r\n * @returns The current level of the given upgrade.\r\n */\r\nexport function getUpgradeTimesBought(upgradeName: UpgradeName): Decimal {\r\n    return player.upgrades[upgradeName].timesBought;\r\n}\r\n","import { playerSettings } from \"./player\";\r\nimport { getElement } from \"./util\";\r\n\r\ndeclare global {\r\n    interface Window {\r\n        musicSwitch: () => Promise<void>;\r\n    }\r\n}\r\n\r\nconst music = getElement(\"audio\", \"audio\");\r\nconst musicState = getElement(\"musicState\");\r\n\r\nasync function startMusic(): Promise<void> {\r\n    musicState.textContent = playerSettings.playMusic ? \"On\" : \"Off\";\r\n    if (!playerSettings.playMusic) return;\r\n    try {\r\n        await music.play();\r\n    } catch {\r\n        setTimeout(startMusic, 100);\r\n    }\r\n}\r\n\r\nawait startMusic();\r\n\r\nwindow.musicSwitch = async function (): Promise<void> {\r\n    playerSettings.playMusic = !playerSettings.playMusic;\r\n    playerSettings.playMusic ? await music.play() : music.pause();\r\n    musicState.textContent = playerSettings.playMusic ? \"On\" : \"Off\";\r\n};\r\n","import {\r\n    player,\r\n    getUpgradeTimesBought,\r\n    getUpgradeCost,\r\n    setUpgradeCost,\r\n    type UpgradeName\r\n} from \"./player\";\r\nimport { formatBig, getElement, onBought, formatDecimal } from \"./util\";\r\nimport Decimal from \"break_eternity.js\";\r\n\r\ndeclare global {\r\n    interface Window {\r\n        buyUpgrade: (upgrade: UpgradeName) => void;\r\n        buyFiftySpeed: VoidFunction;\r\n    }\r\n}\r\n\r\nexport const currencyName = {\r\n    num: \"\",\r\n    alphaNum: \" Alpha\",\r\n    boosterParticles: \" Booster Particles\",\r\n    omegaBase: \" \",\r\n    betaNum: \" Beta\",\r\n    omegaAlpha: \" \"\r\n};\r\n\r\nexport type CurrencyName = keyof typeof currencyName;\r\n\r\nexport function UpdateCostDisplay(\r\n    elementID: string,\r\n    variable: Decimal,\r\n    currency: CurrencyName = \"num\",\r\n    precision = 0\r\n) {\r\n    if (precision === 0) {\r\n        getElement(elementID).textContent =\r\n            \"Cost: \" + formatBig(variable) + currencyName[currency];\r\n    } else {\r\n        getElement(elementID).textContent =\r\n            \"Cost: \" +\r\n            formatDecimal(variable, precision) +\r\n            currencyName[currency];\r\n    }\r\n}\r\n\r\ninterface Upgrade {\r\n    cost: Decimal;\r\n    currency: CurrencyName;\r\n    costDiv: string;\r\n    costFunction?: ((upgradeAmount: Decimal) => Decimal) | null;\r\n    scaleFunction: (upgradeName: UpgradeName) => void;\r\n    extra?: VoidFunction;\r\n    costRounding?: number;\r\n}\r\n\r\nexport const upgrades = {\r\n    gen: {\r\n        cost: Decimal.dInf,\r\n        costFunction(upgradeAmount) {\r\n            // 1000 * 4 ^ amount\r\n            return upgradeAmount.pow_base(4).times(1000);\r\n        },\r\n        scaleFunction: scaleGen,\r\n        costDiv: \"divgencost\",\r\n        currency: \"num\"\r\n    },\r\n    biggerbatches: {\r\n        cost: Decimal.dInf,\r\n        costFunction(upgradeAmount) {\r\n            // 2000 * 2 ^ amount\r\n            return upgradeAmount.pow_base(Decimal.dTwo).times(2000);\r\n        },\r\n        scaleFunction: scaleMultiplier(Decimal.dTwo),\r\n        costDiv: \"divbbcost\",\r\n        currency: \"num\"\r\n    },\r\n    speed: {\r\n        cost: new Decimal(50),\r\n        costFunction(upgradeAmount) {\r\n            /* (amount === 0 ? 50 : 100) + 10 * min(amount, 10) +\r\n\t\t\tmin(max(amount - 10, 0), 1000) * 40 +\r\n\t\t\t1.1 ^ (max(amount - 1000, 0))*/\r\n            return new Decimal(upgradeAmount.eq(Decimal.dZero) ? 50 : 100)\r\n                .plus(Decimal.dTen.times(upgradeAmount.min(Decimal.dTen)))\r\n                .plus(\r\n                    upgradeAmount\r\n                        .minus(Decimal.dTen)\r\n                        .max(Decimal.dZero)\r\n                        .min(1000)\r\n                        .times(40)\r\n                )\r\n                .plus(\r\n                    upgradeAmount.minus(1000).max(Decimal.dZero).pow_base(1.1)\r\n                );\r\n        },\r\n        scaleFunction: scaleSpeed,\r\n        costDiv: \"divspeedcost\",\r\n        currency: \"num\"\r\n    },\r\n    mbup: {\r\n        cost: new Decimal(100),\r\n        costFunction(upgradeAmount) {\r\n            //TODO: finish this; jakub is implementing actual upgrade formulas into the upgrade object instead of what i was donig before\r\n            // 100 * 1.5 ^ amount\r\n            return upgradeAmount.pow_base(1.5).times(100);\r\n        },\r\n        scaleFunction: scaleMultiplier(new Decimal(1.5)),\r\n        costDiv: \"divmbupcost\",\r\n        currency: \"num\"\r\n    },\r\n    mbmult: {\r\n        cost: new Decimal(1000),\r\n        costFunction(upgradeAmount) {\r\n            // 1000 * 2 ^ amount\r\n            return Decimal.dTwo.pow(upgradeAmount).times(1000);\r\n        },\r\n        scaleFunction: scaleMultiplier(Decimal.dTwo),\r\n        costDiv: \"divmbmultcost\",\r\n        currency: \"num\"\r\n    },\r\n    unlockgenboost: {\r\n        cost: new Decimal(5000),\r\n        scaleFunction: scaleMultiplier(Decimal.dInf),\r\n        costDiv: \"divgenunlockcost\",\r\n        currency: \"num\"\r\n    },\r\n    genboostuptime: {\r\n        cost: new Decimal(100),\r\n        costFunction(upgradeAmount) {\r\n            // 100 * 5 ^ amount\r\n            return upgradeAmount.pow_base(5).times(100);\r\n        },\r\n        scaleFunction: scaleMultiplier(new Decimal(5)),\r\n        costDiv: \"divgbuptcost\",\r\n        currency: \"num\",\r\n        extra: GBTExtra\r\n    },\r\n    genboostupmult: {\r\n        cost: new Decimal(10000),\r\n        costFunction(upgradeAmount) {\r\n            // 1e4 * 5 ^ amount\r\n            return upgradeAmount.pow_base(5).times(1e4);\r\n        },\r\n        scaleFunction: scaleMultiplier(new Decimal(5)),\r\n        costDiv: \"divgbupmcost\",\r\n        currency: \"num\",\r\n        extra: GBMExtra\r\n    },\r\n    nuclearbuy: {\r\n        cost: new Decimal(1e8),\r\n        costFunction(upgradeAmount) {\r\n            // 1e8 * 7 ^ amount\r\n            return upgradeAmount.pow_base(7).times(1e8);\r\n        },\r\n        scaleFunction: scaleMultiplier(new Decimal(7)),\r\n        costDiv: \"divnuclearcost\",\r\n        currency: \"num\",\r\n        extra: NBExtra\r\n    },\r\n    speedparticle: {\r\n        cost: new Decimal(5e4),\r\n        costFunction(upgradeAmount) {\r\n            // 5e4 * 5 ^ amount\r\n            return upgradeAmount.pow_base(5).times(5e4);\r\n        },\r\n        scaleFunction: scaleMultiplier(new Decimal(5)),\r\n        costDiv: \"divspeedparticlecost\",\r\n        currency: \"num\"\r\n    },\r\n    machine: {\r\n        cost: new Decimal(2e4),\r\n        costFunction(upgradeAmount) {\r\n            // 2e4 * 1.5 ^ amount\r\n            return upgradeAmount.pow_base(4).times(2e4);\r\n        },\r\n        scaleFunction: scaleMultiplier(new Decimal(4)),\r\n        costDiv: \"divmachinecost\",\r\n        currency: \"num\",\r\n        extra: MachineExtra\r\n    },\r\n    alphaacc: {\r\n        cost: new Decimal(1e10),\r\n        costFunction(upgradeAmount) {\r\n            // 1e10 * 1000 ^ amount\r\n            return upgradeAmount.pow_base(1000).times(1e10);\r\n        },\r\n        scaleFunction: scaleMultiplier(new Decimal(1000)),\r\n        costDiv: \"divalphaacceleratorcost\",\r\n        currency: \"num\"\r\n    },\r\n    threeboost: {\r\n        cost: Decimal.dOne,\r\n        costFunction(upgradeAmount) {\r\n            // 4 ^ amount\r\n            return upgradeAmount.pow_base(4);\r\n        },\r\n        scaleFunction: scaleMultiplier(new Decimal(4)),\r\n        costDiv: \"divthreeboostcost\",\r\n        currency: \"alphaNum\"\r\n    },\r\n    perbang: {\r\n        cost: new Decimal(4),\r\n        costFunction(upgradeAmount) {\r\n            // 4 ^ (amount + 1)\r\n            return upgradeAmount.add(Decimal.dOne).pow_base(4);\r\n        },\r\n        scaleFunction: scaleMultiplier(new Decimal(4)),\r\n        costDiv: \"divperbangcost\",\r\n        currency: \"alphaNum\"\r\n    },\r\n    bangspeed: {\r\n        cost: Decimal.dOne,\r\n        costFunction(upgradeAmount) {\r\n            /* 2 ^ min(amount, 2) +\r\n\t\t\t5 ^ (max(amount - 2, 0)) +\r\n\t\t\t2*/\r\n            return upgradeAmount\r\n                .min(Decimal.dTwo)\r\n                .pow_base(Decimal.dTwo)\r\n                .plus(\r\n                    upgradeAmount\r\n                        .sub(Decimal.dTwo)\r\n                        .max(Decimal.dZero)\r\n                        .pow_base(5)\r\n                )\r\n                .plus(Decimal.dTwo);\r\n        },\r\n        scaleFunction: scaleBangSpeed,\r\n        costDiv: \"divbangspeedcost\",\r\n        currency: \"alphaNum\"\r\n    },\r\n    unlockpca: {\r\n        cost: new Decimal(20),\r\n        costFunction: null,\r\n        scaleFunction: scaleMultiplier(Decimal.dInf),\r\n        costDiv: \"divunlockpca\",\r\n        currency: \"alphaNum\"\r\n    },\r\n    upgradepca: {\r\n        cost: Decimal.dTwo,\r\n        costFunction(upgradeAmount) {\r\n            // 2 * 3 ^ amount\r\n            return upgradeAmount.pow_base(3).times(Decimal.dTwo);\r\n        },\r\n        scaleFunction: scaleMultiplier(new Decimal(3)),\r\n        costDiv: \"divupgradepcacost\",\r\n        currency: \"alphaNum\",\r\n        extra: PCAExtra\r\n    },\r\n    boosterup: {\r\n        cost: new Decimal(100),\r\n        costFunction(upgradeAmount) {\r\n            // 10 ^ (amount + 2)\r\n            return upgradeAmount.add(Decimal.dTwo).pow_base(Decimal.dTen);\r\n        },\r\n        scaleFunction: scaleMultiplier(Decimal.dTen),\r\n        costDiv: \"divboosterupcost\",\r\n        currency: \"alphaNum\"\r\n    },\r\n    boosteruppercent: {\r\n        cost: new Decimal(100),\r\n        costFunction(upgradeAmount) {\r\n            // 10 ^ (amount + 2)\r\n            return upgradeAmount.add(Decimal.dTwo).pow_base(Decimal.dTen);\r\n        },\r\n        scaleFunction: scaleMultiplier(Decimal.dTen),\r\n        costDiv: \"divboosteruppercentcost\",\r\n        currency: \"alphaNum\"\r\n    },\r\n    nuclearalphabuy: {\r\n        cost: new Decimal(1e6),\r\n        costFunction(upgradeAmount) {\r\n            // 1e6 * 7 ^ amount\r\n            return upgradeAmount.pow_base(7).times(1e6);\r\n        },\r\n        scaleFunction: scaleMultiplier(new Decimal(7)),\r\n        costDiv: \"divnuclearalphacost\",\r\n        currency: \"alphaNum\",\r\n        extra: NABExtra\r\n    },\r\n    genboostdouble: {\r\n        cost: Decimal.dOne,\r\n        costFunction(upgradeAmount) {\r\n            // 2 ^ amount\r\n            return upgradeAmount.pow_base(Decimal.dTwo);\r\n        },\r\n        scaleFunction: scaleMultiplier(Decimal.dTwo),\r\n        costDiv: \"gboostdouble\",\r\n        currency: \"alphaNum\",\r\n        extra: GBDExtra\r\n    },\r\n    alphamachinedouble: {\r\n        cost: new Decimal(1000),\r\n        costFunction(upgradeAmount) {\r\n            // 1000 * 3 ^ amount\r\n            return upgradeAmount.pow_base(3).times(1000);\r\n        },\r\n        scaleFunction: scaleMultiplier(new Decimal(3)),\r\n        costDiv: \"alphamachinedouble\",\r\n        currency: \"alphaNum\"\r\n    },\r\n    bangautobuyerunlock: {\r\n        cost: Decimal.dOne,\r\n        costFunction: null,\r\n        scaleFunction: scaleMultiplier(Decimal.dInf),\r\n        costDiv: \"divbau\",\r\n        currency: \"omegaBase\"\r\n    },\r\n    upgradebangautobuyer: {\r\n        cost: Decimal.dOne,\r\n        costFunction(upgradeAmount) {\r\n            // 1 + amount / 2\r\n            return upgradeAmount.div(Decimal.dTwo).plus(Decimal.dOne);\r\n        },\r\n        scaleFunction: scaleBA,\r\n        costDiv: \"divupgradeba\",\r\n        currency: \"omegaBase\",\r\n        extra: BAExtra,\r\n        costRounding: 1\r\n    },\r\n    boostsacrifice: {\r\n        cost: new Decimal(1e5),\r\n        costFunction(upgradeAmount) {\r\n            // 1e5 * 10 ^ amount\r\n            return upgradeAmount.pow_base(Decimal.dTen).times(1e5);\r\n        },\r\n        scaleFunction: scaleMultiplier(Decimal.dTen),\r\n        costDiv: \"divboostsacrificecost\",\r\n        currency: \"boosterParticles\",\r\n        extra: BSExtra\r\n    },\r\n    betaacc: {\r\n        cost: new Decimal(1e10),\r\n        costFunction(upgradeAmount) {\r\n            // 1e10 * 1000 ^ amount\r\n            return upgradeAmount.pow_base(1000).times(1e10);\r\n        },\r\n        scaleFunction: scaleMultiplier(new Decimal(1000)),\r\n        costDiv: \"divbetaacceleratorcost\",\r\n        currency: \"alphaNum\"\r\n    },\r\n    unlockabgb: {\r\n        cost: Decimal.dOne,\r\n        costFunction: null,\r\n        scaleFunction: scaleMultiplier(Decimal.dInf),\r\n        costDiv: \"divabgbcost\",\r\n        currency: \"betaNum\"\r\n    },\r\n    abgbefficiency: {\r\n        cost: new Decimal(3),\r\n        costFunction(upgradeAmount) {\r\n            // 4 * (amount + 1)\r\n            return upgradeAmount.plus(Decimal.dOne).pow_base(Decimal.dTwo);\r\n        },\r\n        scaleFunction: scaleMultiplier(Decimal.dTwo),\r\n        costDiv: \"divabgbefficiencycost\",\r\n        currency: \"betaNum\"\r\n    },\r\n    permerge: {\r\n        cost: new Decimal(4),\r\n        costFunction(upgradeAmount) {\r\n            // 4 ^ (amount + 1)\r\n            return upgradeAmount.plus(Decimal.dOne).pow_base(Decimal.dTen);\r\n        },\r\n        scaleFunction: scaleMultiplier(new Decimal(4)),\r\n        costDiv: \"divpermergecost\",\r\n        currency: \"betaNum\"\r\n    },\r\n    mergespeed: {\r\n        cost: Decimal.dOne,\r\n        costFunction(upgradeAmount) {\r\n            /* 2 ^ min(amount, 2) +\r\n\t\t\t5 ^ (max(amount - 2, 0)) +\r\n\t\t\t2*/\r\n            return upgradeAmount\r\n                .min(Decimal.dTwo)\r\n                .pow_base(Decimal.dTwo)\r\n                .plus(\r\n                    upgradeAmount\r\n                        .sub(Decimal.dTwo)\r\n                        .max(Decimal.dZero)\r\n                        .pow_base(5)\r\n                )\r\n                .plus(Decimal.dTwo);\r\n        },\r\n        scaleFunction: scaleBangSpeed,\r\n        costDiv: \"divmergespeedcost\",\r\n        currency: \"betaNum\"\r\n    },\r\n    GnBBAunlock: {\r\n        cost: new Decimal(0.5),\r\n        scaleFunction: scaleMultiplier(Decimal.dInf),\r\n        costDiv: \"usewhencostdisplaynotneeded\", //TODO: woudlnt it be cool to remove these somehow?\r\n        currency: \"omegaAlpha\"\r\n    },\r\n    GBUAunlock: {\r\n        cost: new Decimal(0.5),\r\n        scaleFunction: scaleMultiplier(Decimal.dInf),\r\n        costDiv: \"usewhencostdisplaynotneeded\", //TODO: woudlnt it be cool to remove these somehow?\r\n        currency: \"omegaAlpha\"\r\n    },\r\n    MBUAunlock: {\r\n        cost: new Decimal(0.5),\r\n        scaleFunction: scaleMultiplier(Decimal.dInf),\r\n        costDiv: \"usewhencostdisplaynotneeded\", //TODO: woudlnt it be cool to remove these somehow?\r\n        currency: \"omegaAlpha\"\r\n    },\r\n    NPAunlock: {\r\n        cost: new Decimal(0.5),\r\n        scaleFunction: scaleMultiplier(Decimal.dInf),\r\n        costDiv: \"usewhencostdisplaynotneeded\", //TODO: costDiv: \"usewhencostdisplaynotneeded\"\r\n        currency: \"omegaAlpha\"\r\n    },\r\n    AAccAunlock: {\r\n        cost: new Decimal(0.5),\r\n        scaleFunction: scaleMultiplier(Decimal.dInf),\r\n        costDiv: \"usewhencostdisplaynotneeded\",\r\n        currency: \"omegaAlpha\"\r\n    },\r\n    SAunlock: {\r\n        cost: new Decimal(0.5),\r\n        scaleFunction: scaleMultiplier(Decimal.dInf),\r\n        costDiv: \"usewhencostdisplaynotneeded\",\r\n        currency: \"omegaAlpha\"\r\n    },\r\n    unlocknpboost: {\r\n        cost: Decimal.dTwo,\r\n        scaleFunction: scaleMultiplier(Decimal.dInf),\r\n        costDiv: \"divnpboostcost\",\r\n        currency: \"betaNum\",\r\n        extra: NBExtra\r\n    },\r\n    upgradenpboost: {\r\n        cost: Decimal.dTwo,\r\n        costFunction(upgradeAmount) {\r\n            // 2 6 amount\r\n            return Decimal.dTwo.pow(upgradeAmount);\r\n        },\r\n        scaleFunction: scaleMultiplier(Decimal.dTwo),\r\n        costDiv: \"divnpboostupcost\",\r\n        currency: \"betaNum\",\r\n        extra: NBExtra\r\n    },\r\n    reactorupmult: {\r\n        cost: new Decimal(1500),\r\n        scaleFunction: scaleReactorUpMult,\r\n        costDiv: \"divreactorupmultcost\",\r\n        currency: \"betaNum\"\r\n    },\r\n    reactoruptime: {\r\n        cost: new Decimal(1250),\r\n        scaleFunction: scaleReactorUpTime,\r\n        costDiv: \"divreactoruptimecost\",\r\n        currency: \"betaNum\"\r\n    },\r\n    unlocknapboost: {\r\n        cost: new Decimal(15),\r\n        scaleFunction: scaleMultiplier(Decimal.dInf),\r\n        costDiv: \"divnapboostcost\",\r\n        currency: \"betaNum\",\r\n        extra: NABExtra\r\n    },\r\n    upgradenapboost: {\r\n        cost: new Decimal(15),\r\n        scaleFunction: scaleMultiplier(new Decimal(4)),\r\n        costDiv: \"divnapboostupcost\",\r\n        currency: \"betaNum\",\r\n        extra: NABExtra\r\n    },\r\n    reactorUnlockNAP: {\r\n        cost: new Decimal(3e4),\r\n        scaleFunction: scaleMultiplier(Decimal.dInf),\r\n        costDiv: \"divreactorunlockNAPcost\",\r\n        currency: \"betaNum\"\r\n    },\r\n    reactorUnlockBP: {\r\n        cost: new Decimal(8e6),\r\n        scaleFunction: scaleMultiplier(Decimal.dInf),\r\n        costDiv: \"divreactorunlockBPcost\",\r\n        currency: \"betaNum\"\r\n    },\r\n    reactorUnlockMB: {\r\n        cost: new Decimal(8000),\r\n        scaleFunction: scaleMultiplier(Decimal.dInf),\r\n        costDiv: \"divreactorunlockMBcost\",\r\n        currency: \"betaNum\"\r\n    },\r\n    reactorUnlockGB: {\r\n        cost: new Decimal(2.5e5),\r\n        scaleFunction: scaleMultiplier(Decimal.dInf),\r\n        costDiv: \"divreactorunlockGBcost\",\r\n        currency: \"betaNum\"\r\n    },\r\n    reactorupMB: {\r\n        cost: new Decimal(3000),\r\n        scaleFunction: scaleMultiplier(new Decimal(1.75)),\r\n        costDiv: \"divreactorupMBcost\",\r\n        currency: \"betaNum\"\r\n    },\r\n    doublebeta: {\r\n        cost: new Decimal(0.2),\r\n        scaleFunction: scaleOmegaAlphaWeak,\r\n        costDiv: \"divdoublebetacost\",\r\n        currency: \"omegaAlpha\",\r\n        costRounding: 1\r\n    },\r\n    unlockaga: {\r\n        cost: new Decimal(0.25),\r\n        scaleFunction: scaleMultiplier(Decimal.dInf),\r\n        costDiv: \"divunlockaga\",\r\n        currency: \"omegaAlpha\",\r\n        costRounding: 2\r\n    },\r\n    upgradeaga: {\r\n        cost: new Decimal(0.25),\r\n        scaleFunction: scaleOmegaAlpha,\r\n        costDiv: \"divupgradeagacost\",\r\n        currency: \"omegaAlpha\",\r\n        extra: AGAExtra,\r\n        costRounding: 2\r\n    },\r\n    mergeautobuyerunlock: {\r\n        cost: new Decimal(0.25),\r\n        scaleFunction: scaleMultiplier(Decimal.dInf),\r\n        costDiv: \"divmau\",\r\n        currency: \"omegaAlpha\",\r\n        costRounding: 2\r\n    },\r\n    upgrademergeautobuyer: {\r\n        cost: new Decimal(0.25),\r\n        scaleFunction: scaleOmegaAlpha,\r\n        costDiv: \"divupgradema\",\r\n        currency: \"omegaAlpha\",\r\n        extra: MAExtra,\r\n        costRounding: 2\r\n    },\r\n    buyreturngenerator: {\r\n        cost: new Decimal(1e5),\r\n        scaleFunction: scaleMultiplier(new Decimal(2)),\r\n        costDiv: \"divreturngeneratorcost\",\r\n        currency: \"betaNum\"\r\n    },\r\n    rpup: {\r\n        cost: new Decimal(2.5e5),\r\n        scaleFunction: scaleMultiplier(new Decimal(3)),\r\n        costDiv: \"divrpupcost\",\r\n        currency: \"betaNum\"\r\n    },\r\n    rpmult: {\r\n        cost: new Decimal(4e5),\r\n        scaleFunction: scaleMultiplier(new Decimal(20)),\r\n        costDiv: \"divrpmultcost\",\r\n        currency: \"betaNum\"\r\n    },\r\n    omegabooster: {\r\n        cost: new Decimal(12),\r\n        scaleFunction: scaleMultiplier(Decimal.dOne),  //TODO: ah yes, scaling by 1. I failed to make scaleFunction and costDiv optional\r\n        costDiv: \"usewhencostdisplaynotneeded\",\r\n        currency: \"omegaBase\",\r\n        extra: OBExtra\r\n    }\r\n} as const satisfies Record<string, Upgrade>; // will fix later\r\n\r\nexport function scaleMultiplier(\r\n    multiplier: Decimal\r\n): (upgradeName: UpgradeName) => void {\r\n    return function (upgradeName: UpgradeName): void {\r\n        setUpgradeCost(\r\n            upgradeName,\r\n            getUpgradeCost(upgradeName).times(multiplier)\r\n        );\r\n    };\r\n}\r\n\r\nexport function scaleBangSpeed(upgradeName: UpgradeName): void {\r\n    if (getUpgradeTimesBought(upgradeName).lte(Decimal.dTwo)) {\r\n        scaleMultiplier(Decimal.dTwo)(upgradeName);\r\n    } else {\r\n        scaleMultiplier(new Decimal(5))(upgradeName);\r\n    }\r\n}\r\n\r\nfunction scaleSpeed(upgradeName: UpgradeName): void {\r\n    const x = getUpgradeTimesBought(upgradeName);\r\n\r\n    if (x.lt(Decimal.dTen)) {\r\n        setUpgradeCost(upgradeName, Decimal.dTen.times(x).plus(100));\r\n    } else if (x.gte(Decimal.dTen) && x.lte(1000)) {\r\n        setUpgradeCost(upgradeName, x.times(40).minus(200));\r\n    } else {\r\n        scaleMultiplier(new Decimal(1.1))(upgradeName);\r\n    }\r\n}\r\n\r\nfunction scaleGen(upgradeName: UpgradeName): void {\r\n    if (getUpgradeCost(upgradeName).eq(Decimal.dZero)) {\r\n        setUpgradeCost(upgradeName, new Decimal(1000));\r\n    } else {\r\n        scaleMultiplier(new Decimal(4))(upgradeName);\r\n    }\r\n}\r\n\r\nfunction scaleBA(upgradeName: UpgradeName): void {\r\n    setUpgradeCost(upgradeName, getUpgradeCost(upgradeName).plus(0.5));\r\n}\r\n\r\nfunction scaleOmegaAlpha(upgradeName: UpgradeName): void {\r\n    setUpgradeCost(upgradeName, getUpgradeCost(upgradeName).plus(0.25));\r\n}\r\n\r\nfunction scaleOmegaAlphaWeak(upgradeName: UpgradeName): void {\r\n    setUpgradeCost(upgradeName, getUpgradeCost(upgradeName).plus(0.2));\r\n}\r\n\r\nfunction scaleReactorUpMult(upgradeName: UpgradeName): void {\r\n    if (getUpgradeTimesBought(upgradeName).lte(4)) {\r\n        scaleMultiplier(new Decimal(4))(upgradeName);\r\n    } else if (getUpgradeTimesBought(upgradeName).lte(8)) {\r\n        scaleMultiplier(new Decimal(8))(upgradeName);\r\n    } else {\r\n        scaleMultiplier(new Decimal(64))(upgradeName);\r\n    }\r\n}\r\n\r\nfunction scaleReactorUpTime(upgradeName: UpgradeName): void {\r\n    if (getUpgradeTimesBought(upgradeName).lte(4)) {\r\n        scaleMultiplier(new Decimal(2.6))(upgradeName);\r\n    } else if (getUpgradeTimesBought(upgradeName).lte(8)) {\r\n        scaleMultiplier(new Decimal(4.3))(upgradeName);\r\n    } else {\r\n        scaleMultiplier(new Decimal(32))(upgradeName);\r\n    }\r\n}\r\n\r\nfunction GBTExtra(): void {\r\n    player.genBoostTimeLeftCon = player.genBoostTimeLeftCon.plus(\r\n        Decimal.dTwo.pow(getUpgradeTimesBought(\"genboostdouble\")).times(20)\r\n    );\r\n    player.genBoostTimeLeft = Decimal.dZero;\r\n    player.genBoostTimeLeft = player.genBoostTimeLeftCon;\r\n}\r\n\r\nfunction GBMExtra(): void {\r\n    player.genBoostTimeLeft = Decimal.dZero;\r\n    player.genBoostTimeLeft = player.genBoostTimeLeftCon;\r\n}\r\n\r\nfunction GBDExtra(): void {\r\n    player.genBoostTimeLeftCon = player.genBoostTimeLeftCon.times(Decimal.dTwo);\r\n    player.genBoostTimeLeft = Decimal.dZero;\r\n    player.genBoostTimeLeft = player.genBoostTimeLeftCon;\r\n}\r\n\r\nfunction MachineExtra(): void {\r\n    player.machineWear = 10;\r\n}\r\n\r\nfunction NBExtra(): void {\r\n    let nuclearParticles = getUpgradeTimesBought(\"nuclearbuy\");\r\n\r\n    if (getUpgradeTimesBought(\"unlocknpboost\").eq(Decimal.dOne)) {\r\n        nuclearParticles = onBought([\r\n            \"nuclearbuy\",\r\n            \"*\",\r\n            [\r\n                Decimal.dOne,\r\n                \"+\",\r\n                [\"upgradenpboost\", \"+\", Decimal.dOne, \"/\", Decimal.dTen]\r\n            ]\r\n        ]);\r\n        getElement(\"divnp\").textContent =\r\n            \"Nuclear Particles: \" + formatDecimal(nuclearParticles, 1);\r\n    } else {\r\n        getElement(\"divnp\").textContent =\r\n            \"Nuclear Particles: \" +\r\n            formatBig(getUpgradeTimesBought(\"nuclearbuy\"));\r\n    }\r\n}\r\n\r\nfunction NABExtra(): void {\r\n    let nuclearAlphaParticles = getUpgradeTimesBought(\"nuclearalphabuy\");\r\n\r\n    if (getUpgradeTimesBought(\"unlocknapboost\").eq(Decimal.dOne)) {\r\n        nuclearAlphaParticles = onBought([\r\n            \"nuclearalphabuy\",\r\n            \"*\",\r\n            [\r\n                Decimal.dOne,\r\n                \"+\",\r\n                [\"upgradenapboost\", \"+\", Decimal.dOne, \"/\", Decimal.dTen]\r\n            ]\r\n        ]);\r\n        getElement(\"divnap\").textContent =\r\n            \"Nuclear Alpha Particles: \" +\r\n            formatDecimal(nuclearAlphaParticles, 1);\r\n    } else {\r\n        getElement(\"divnap\").textContent =\r\n            \"Nuclear Alpha Particles: \" +\r\n            formatBig(getUpgradeTimesBought(\"nuclearalphabuy\"));\r\n    }\r\n}\r\n\r\nfunction PCAExtra(): void {\r\n    if (getUpgradeTimesBought(\"upgradepca\").lte(4)) {\r\n        player.pcaTime = Math.ceil(player.pcaTime / 2);\r\n    } else {\r\n        player.pcaTime = Decimal.dTen\r\n            .div(getUpgradeTimesBought(\"upgradepca\").minus(3))\r\n            .ceil()\r\n            .toNumber();\r\n    }\r\n}\r\n\r\nfunction AGAExtra(): void {\r\n    if (getUpgradeTimesBought(\"upgradeaga\").lte(4)) {\r\n        player.agaTime = Math.ceil(player.agaTime / 2);\r\n    } else {\r\n        player.agaTime = Decimal.dTen\r\n            .div(getUpgradeTimesBought(\"upgradeaga\").minus(3))\r\n            .ceil()\r\n            .toNumber();\r\n    }\r\n}\r\n\r\nfunction BAExtra(): void {\r\n    if (getUpgradeTimesBought(\"upgradebangautobuyer\").lte(4)) {\r\n        player.bangAutobuyerTime = Math.ceil(player.bangAutobuyerTime / 2);\r\n    } else {\r\n        player.bangAutobuyerTime = Decimal.dTen\r\n            .div(getUpgradeTimesBought(\"upgradebangautobuyer\").minus(3))\r\n            .ceil()\r\n            .toNumber();\r\n    }\r\n}\r\n\r\nfunction MAExtra(): void {\r\n    if (getUpgradeTimesBought(\"upgrademergeautobuyer\").lte(4)) {\r\n        player.mergeAutobuyerTime = Math.ceil(player.mergeAutobuyerTime / 2);\r\n    } else {\r\n        player.mergeAutobuyerTime = Decimal.dTen\r\n            .div(getUpgradeTimesBought(\"upgrademergeautobuyer\").minus(3))\r\n            .ceil()\r\n            .toNumber();\r\n    }\r\n}\r\n\r\nfunction BSExtra(): void {\r\n    player.boosterParticles = Decimal.dZero;\r\n}\r\n\r\nfunction OBExtra(): void {\r\n    if (getUpgradeTimesBought(\"omegabooster\").lte(3)) {\r\n        player.omegaAlpha = player.omegaAlpha.plus(2);\r\n        getElement(\"divomegaboostersbought\").textContent =\r\n            `Bought: ${getUpgradeTimesBought(\"omegabooster\").toString()}/3`;\r\n        if (getUpgradeTimesBought(\"omegabooster\").gte(3)) {\r\n            getElement(\"omegaboosterbutton\").style.display = \"none\"\r\n        }\r\n    }\r\n}\r\n\r\nexport function buyUpgrade(upgradeName: UpgradeName): void {\r\n    const upgrade = upgrades[upgradeName];\r\n    const oldCost = getUpgradeCost(upgradeName);\r\n\r\n    if (player[upgrade.currency].gte(oldCost)) {\r\n        player.upgrades[upgradeName].timesBought = player.upgrades[\r\n            upgradeName\r\n        ].timesBought.plus(Decimal.dOne);\r\n        player[upgrade.currency] = player[upgrade.currency].minus(oldCost);\r\n        upgrade.scaleFunction(upgradeName);\r\n        if (\"extra\" in upgrade) {\r\n            upgrade.extra();\r\n        }\r\n\r\n        if (!(\"costRounding\" in upgrade)) {\r\n            UpdateCostDisplay(\r\n                upgrade.costDiv,\r\n                getUpgradeCost(upgradeName),\r\n                upgrade.currency\r\n            );\r\n        } else {\r\n            UpdateCostDisplay(\r\n                upgrade.costDiv,\r\n                getUpgradeCost(upgradeName),\r\n                upgrade.currency,\r\n                upgrade.costRounding\r\n            );\r\n        }\r\n    }\r\n}\r\nwindow.buyUpgrade = buyUpgrade;\r\n\r\nwindow.buyFiftySpeed = function (): void {\r\n    for (let i = 0; i < 50; i++) {\r\n        if (player.num.lt(getUpgradeCost(\"speed\"))) return;\r\n        buyUpgrade(\"speed\");\r\n    }\r\n};\r\n","import { getElement } from \"./util\";\r\n\r\nconst achievementContainer = getElement(\"achievementContainer\");\r\n\r\n// not implemented yet, we will make achievements later\r\nexport function createAchievementHTML(): void {\r\n    const newDiv = document.createElement(\"div\");\r\n    newDiv.textContent = \"stuff\";\r\n    achievementContainer.appendChild(newDiv);\r\n}\r\n","import { getElement, formatBig, formatBigSpecific } from \"./util\";\r\nimport { player } from \"./player\";\r\nimport { type CurrencyName, currencyName } from \"./upgrades\";\r\nimport Decimal from \"break_eternity.js\";\r\n\r\nconst features: Record<FeatureKey, Feature> = {\r\n    GB: {\r\n        displayName: \"Generator boost\",\r\n        unlocksAt: new Decimal(5000),\r\n        currency: \"num\",\r\n        next: \"Factory\"\r\n    },\r\n    Factory: {\r\n        displayName: \"Factory\",\r\n        unlocksAt: new Decimal(1e5),\r\n        currency: \"num\",\r\n        next: \"NP\"\r\n    },\r\n    NP: {\r\n        displayName: \"Nuclear Particles\",\r\n        unlocksAt: new Decimal(1e8),\r\n        currency: \"num\",\r\n        next: \"Bang\"\r\n    },\r\n    Bang: {\r\n        displayName: \"Bang\",\r\n        unlocksAt: new Decimal(1e9),\r\n        currency: \"num\",\r\n        next: \"BA\"\r\n    },\r\n    BA: {\r\n        displayName: \"Bang Autobuyer (in Omega tab)\",\r\n        unlocksAt: new Decimal(1e10),\r\n        currency: \"num\",\r\n        next: \"PCA\"\r\n    },\r\n    PCA: {\r\n        displayName: \"Particle Chunk Autobuyer\",\r\n        unlocksAt: new Decimal(20),\r\n        currency: \"alphaNum\",\r\n        next: \"BS\"\r\n    },\r\n    BS: {\r\n        displayName: \"Boost Sacrifice\",\r\n        unlocksAt: new Decimal(1e5),\r\n        currency: \"boosterParticles\",\r\n        next: \"NAP\"\r\n    },\r\n    NAP: {\r\n        displayName: \"Nuclear Alpha Particles\",\r\n        unlocksAt: new Decimal(1e6),\r\n        currency: \"alphaNum\",\r\n        next: \"Merge\"\r\n    },\r\n    Merge: {\r\n        displayName: \"Merge\",\r\n        unlocksAt: new Decimal(1e9),\r\n        currency: \"alphaNum\",\r\n        next: \"Reactor\"\r\n    },\r\n    Reactor: {\r\n        displayName: \"Reactor\",\r\n        unlocksAt: new Decimal(300),\r\n        currency: \"betaNum\",\r\n        next: \"Return\"\r\n    },\r\n    Return: {\r\n        displayName: \"Return\",\r\n        unlocksAt: new Decimal(1e5),\r\n        currency: \"betaNum\"\r\n    }\r\n};\r\n\r\ntype FeatureKey =\r\n    | \"GB\"\r\n    | \"Factory\"\r\n    | \"NP\"\r\n    | \"Bang\"\r\n    | \"BA\"\r\n    | \"PCA\"\r\n    | \"BS\"\r\n    | \"NAP\"\r\n    | \"Merge\"\r\n    | \"Reactor\"\r\n    | \"Return\";\r\n\r\ninterface Feature {\r\n    displayName: string;\r\n    unlocksAt: Decimal;\r\n    currency: CurrencyName;\r\n    next?: FeatureKey;\r\n}\r\n\r\nlet goal: FeatureKey | undefined = \"GB\";\r\n\r\nexport function nextFeatureHandler(): void {\r\n    if (goal === undefined) {\r\n        getElement(\"nextfeature\").textContent =\r\n            \"You have unlocked all the features.\";\r\n        return;\r\n    }\r\n\r\n    let feature = features[goal];\r\n    const featureCurrency = feature.currency;\r\n    const nextGoal = \"next\" in feature ? feature.next : undefined;\r\n\r\n    if (player[featureCurrency].gte(feature.unlocksAt)) {\r\n        goal = nextGoal;\r\n        if (goal === undefined) return;\r\n        feature = features[goal];\r\n    } else {\r\n        const percentage = player[featureCurrency]\r\n            .max(Decimal.dOne)\r\n            .log10()\r\n            .div(feature.unlocksAt.max(Decimal.dOne).log10())\r\n            .times(100)\r\n            .max(Decimal.dZero);\r\n\r\n        getElement(\"nextfeature\").textContent = `Reach\r\n            ${formatBig(feature.unlocksAt)}\r\n            ${currencyName[feature.currency]}\r\n            particles to unlock ${feature.displayName}\r\n            (${formatBigSpecific(percentage)}%)`;\r\n    }\r\n}\r\n","import \"./style.css\";\r\nimport \"./music\";\r\nimport {\r\n    load,\r\n    loadSettings,\r\n    getUpgradeTimesBought,\r\n    getUpgradeCost,\r\n    player,\r\n    playerSettings,\r\n    UpgradeNames,\r\n    type InstantAutobuyerName,\r\n    isAutobuyerName\r\n} from \"./player\";\r\nimport {\r\n    format,\r\n    formatBig,\r\n    getElement,\r\n    onBought,\r\n    onBoughtInc,\r\n    formatBigSpecific,\r\n    formatDecimal\r\n} from \"./util\";\r\nimport { UpdateCostDisplay, upgrades, buyUpgrade } from \"./upgrades\";\r\nimport { createAchievementHTML } from \"./achievements\";\r\nimport { nextFeatureHandler } from \"./features\";\r\nimport Decimal from \"break_eternity.js\";\r\n\r\ndeclare global {\r\n    interface Window {\r\n        theme: VoidFunction;\r\n        autosavesettings: VoidFunction;\r\n        openTab: (tab: string) => void;\r\n        saveExport: () => Promise<void>;\r\n        saveImport: VoidFunction;\r\n        saveImportConfirm: VoidFunction;\r\n        experimentalToggle: VoidFunction;\r\n        devToggle: VoidFunction;\r\n        mbman: VoidFunction;\r\n        gbboost: VoidFunction;\r\n        makechunk: VoidFunction;\r\n        bang: VoidFunction;\r\n        togglepca: VoidFunction;\r\n        toggleaga: VoidFunction;\r\n        buyomegabase: VoidFunction;\r\n        buyomegaalpha: VoidFunction;\r\n        buyomegabeta: VoidFunction;\r\n        buyomegagamma: VoidFunction;\r\n        buyomegadelta: VoidFunction;\r\n        toggleba: VoidFunction;\r\n        makegroup: VoidFunction;\r\n        merge: VoidFunction;\r\n        togglema: VoidFunction;\r\n        instantAutobuyerToggle: (\r\n            autobuyerVar: InstantAutobuyerName,\r\n            autobuyerDiv: string\r\n        ) => void;\r\n        buyFuel: (fuelType: Fuels) => void;\r\n        saveSettings: VoidFunction;\r\n        save: VoidFunction;\r\n        reset: VoidFunction;\r\n        Decimal?: typeof Decimal;\r\n    }\r\n}\r\n\r\nif (import.meta.env.DEV) window.Decimal = Decimal;\r\n\r\nloadSettings();\r\nload();\r\n\r\nconst divEntireBody = getElement(\"diventirebody\");\r\nconst whatTheme = getElement(\"whattheme\");\r\nconst tabOpenFactory = getElement(\"tabopenfactory\");\r\nconst tabOpenAlpha = getElement(\"tabopenalpha\");\r\nconst tabOpenBeta = getElement(\"tabopenbeta\");\r\nconst tabOpenGamma = getElement(\"tabopengamma\");\r\nconst tabOpenDelta = getElement(\"tabopendelta\");\r\nconst tabOpenOmega = getElement(\"tabopenomega\");\r\nconst tabOpenOmegaOmega = getElement(\"tabopenomegaomega\");\r\nconst tabOpenReactor = getElement(\"tabopenreactor\");\r\nconst tabOpenStats = getElement(\"tabopenstats\");\r\nconst tabOpenAchievements = getElement(\"tabopenachievements\");\r\nconst tabOpenDev = getElement(\"tabopendev\");\r\nconst devToggle = getElement(\"devtoggle\");\r\nconst autosaveElement = getElement(\"autosaving\");\r\nconst divTogglePcaElement = getElement(\"divtogglepca\");\r\nconst untilPcaElement = getElement(\"untilpca\");\r\nconst divToggleAgaElement = getElement(\"divtoggleaga\");\r\nconst untilAgaElement = getElement(\"untilaga\");\r\n\r\nconst delayArray = [600, 300, 150, 100, 50, 20, 10];\r\n\r\nconst themes = [\r\n    {\r\n        textColor: \"#EBEBEB\",\r\n        bgColor: \"#0e0e0e\",\r\n        buttonColor: \"\",\r\n        borderColor: \"\",\r\n        gradientColor: \"\",\r\n        themeName: \"Dark Rework v2\",\r\n        disableGradient: true\r\n    },\r\n    {\r\n        textColor: \"#EBEBEB\",\r\n        bgColor: \"rgb(34, 36, 34)\",\r\n        buttonColor: \"\",\r\n        borderColor: \"#BABABA\",\r\n        gradientColor: \"black\",\r\n        themeName: \"Dark Rework\",\r\n        disableGradient: false\r\n    },\r\n    {\r\n        textColor: \"#D4D4D4\",\r\n        bgColor: \"rgb(14, 16, 14)\",\r\n        buttonColor: \"\",\r\n        borderColor: \"#000000\",\r\n        gradientColor: \"black\",\r\n        themeName: \"Darker Rework\",\r\n        disableGradient: false\r\n    },\r\n    {\r\n        textColor: \"#000000\",\r\n        bgColor: \"#CCCCCC\",\r\n        buttonColor: \"\",\r\n        borderColor: \"#333333\",\r\n        gradientColor: \"white\",\r\n        buttonGradientOverride: true,\r\n        themeName: \"Light Rework\",\r\n        disableGradient: false\r\n    },\r\n    {\r\n        textColor: \"#000000\",\r\n        bgColor: \"#CCCCCC\",\r\n        buttonColor: \"\",\r\n        borderColor: \"#DD1111\",\r\n        gradientColor: \"white\",\r\n        buttonGradientOverride: true,\r\n        themeName: \"Red Borders\",\r\n        disableGradient: false\r\n    },\r\n    {\r\n        textColor: \"#CCCCCC\",\r\n        bgColor: \"#000000\",\r\n        buttonColor: \"#444444\",\r\n        borderColor: \"#CCCCCC\",\r\n        gradientColor: \"#444444\",\r\n        themeName: \"Black\",\r\n        disableGradient: false\r\n    },\r\n    {\r\n        textColor: \"#000000\",\r\n        bgColor: \"#FF91AF\",\r\n        buttonColor: \"#FFA1BF\",\r\n        borderColor: \"#FFD1FF\",\r\n        gradientColor: \"#FFA1BF\",\r\n        themeName: \"Pink\",\r\n        disableGradient: false\r\n    },\r\n    {\r\n        textColor: \"#3DD7DE\",\r\n        bgColor: \"#191970\",\r\n        buttonColor: \"#3DD7DE\",\r\n        borderColor: \"#3DD7DE\",\r\n        gradientColor: \"#7090FF\",\r\n        buttonGradientOverride: true,\r\n        themeName: \"Blue\",\r\n        disableGradient: false\r\n    },\r\n    {\r\n        textColor: \"#000000\",\r\n        bgColor: \"#DEB2EF\",\r\n        buttonColor: \"#8A7AED\",\r\n        borderColor: \"#6A5ACD\",\r\n        gradientColor: \"#5A1C61\",\r\n        buttonGradientOverride: true,\r\n        themeName: \"Purple\",\r\n        disableGradient: false\r\n    },\r\n    {\r\n        textColor: \"#EBEBEB\",\r\n        bgColor: \"#696969\",\r\n        buttonColor: \"#999999\",\r\n        borderColor: \"#000000\",\r\n        gradientColor: \"transparent\",\r\n        themeName: \"Classic\",\r\n        disableGradient: false\r\n    },\r\n    {\r\n        textColor: \"#EBEBEB\",\r\n        bgColor: \"#696969\",\r\n        buttonColor: \"#999999\",\r\n        borderColor: \"#000000\",\r\n        gradientColor: \"transparent\",\r\n        themeName: \"Classic Colors\",\r\n        disableGradient: false,\r\n    }\r\n];\r\n\r\nfunction themeExec(): void {\r\n    const theme = themes[playerSettings.themeNumber];\r\n    if (theme === undefined) {\r\n        throw new Error(\"theme dosen't exist!\");\r\n    }\r\n    const {\r\n        textColor,\r\n        bgColor,\r\n        buttonColor,\r\n        borderColor,\r\n        gradientColor,\r\n        buttonGradientOverride,\r\n        themeName,\r\n        disableGradient,\r\n    } = theme;\r\n\r\n    divEntireBody.style.opacity = \"1\";\r\n    divEntireBody.style.color = textColor;\r\n    getElement(\"Settings\").style.color = textColor;\r\n    getElement(\"Tutorial\").style.color = textColor;\r\n    getElement(\"Omega\").style.color = textColor;\r\n    document.body.style.backgroundColor = bgColor;\r\n    document.body.style.backgroundColor = bgColor;\r\n\r\n    const className = document.getElementsByClassName(\"button\");\r\n    for (const element of className) {\r\n        if (!(element instanceof HTMLElement)) {\r\n            throw new Error(`element is not an HTMLElement`);\r\n        }\r\n        element.style.backgroundColor = buttonColor;\r\n\r\n        if (themeName === \"Classic\") {\r\n            element.style.border = \"1px solid black\";\r\n            element.style.borderRadius = \"2px\";\r\n            element.style.background = buttonColor;\r\n            element.style.color = \"black\";\r\n            element.style.fontWeight = \"400\";\r\n        } else if (themeName === \"Classic Colors\") {\r\n            element.style.border = \"\";\r\n            element.style.borderRadius = \"8px\";\r\n            element.style.color = \"black\";\r\n            element.style.fontWeight = \"500\";\r\n        } else {\r\n            element.style.border = \"\";\r\n            element.style.borderRadius = \"8px\";\r\n            element.style.color = \"snow\";\r\n            element.style.fontWeight = \"500\";\r\n\r\n            if (buttonGradientOverride === undefined && disableGradient) {\r\n                element.style.background = `linear-gradient(45deg, ${gradientColor}, transparent)`;\r\n            } else if (disableGradient) {\r\n                element.style.background = `linear-gradient(45deg, black, transparent)`;\r\n            } else {\r\n                element.style.background = buttonColor;\r\n            }\r\n        }\r\n    }\r\n\r\n    const className2 = document.getElementsByClassName(\"withtheoutline\");\r\n    for (const element of className2) {\r\n        if (!(element instanceof HTMLElement)) {\r\n            throw new Error(`element is not an HTMLElement`);\r\n        }\r\n        element.style.border = `0.2em solid ${borderColor}`;\r\n    }\r\n\r\n    const className3 = document.getElementsByClassName(\"redb\");\r\n    for (const element of className3) {\r\n        if (!(element instanceof HTMLElement)) {\r\n            throw new Error(`element is not an HTMLElement`);\r\n        }\r\n        element.style.backgroundColor = buttonColor;\r\n    }\r\n\r\n    whatTheme.textContent = `Theme: ${themeName}`;\r\n}\r\n\r\nthemeExec();\r\n\r\nwindow.theme = function (): void {\r\n    playerSettings.themeNumber =\r\n        (playerSettings.themeNumber + 1) % themes.length;\r\n    themeExec();\r\n    saveSettings();\r\n};\r\n\r\nfunction prePUD(): void {\r\n    tabOpenFactory.style.display = \"none\";\r\n    tabOpenAlpha.style.display = \"none\";\r\n    tabOpenBeta.style.display = \"none\";\r\n    tabOpenReactor.style.display = \"none\";\r\n    tabOpenGamma.style.display = \"none\";\r\n    tabOpenDelta.style.display = \"none\";\r\n    tabOpenOmega.style.display = \"none\";\r\n    tabOpenStats.style.display = \"none\";\r\n    tabOpenOmegaOmega.style.display = \"none\";\r\n}\r\n\r\nfunction passiveUnlockDisplay(): void {\r\n    if (player.num.gte(1e5)) {\r\n        tabOpenFactory.style.display = \"inline\";\r\n    }\r\n    if (player.num.gte(1e9) || player.alphaNum.gt(Decimal.dZero)) {\r\n        tabOpenAlpha.style.display = \"inline\";\r\n        tabOpenOmega.style.display = \"inline\";\r\n    }\r\n    if (player.alphaNum.gte(1e9) || player.betaNum.gt(Decimal.dZero)) {\r\n        tabOpenBeta.style.display = \"inline\";\r\n    }\r\n    if (player.betaNum.gte(300)) {\r\n        tabOpenReactor.style.display = \"inline\";\r\n    }\r\n    if (playerSettings.useExperimental) {\r\n        // TODO: remove exprimental when you want\r\n        tabOpenGamma.style.display = \"inline\";\r\n        tabOpenDelta.style.display = \"inline\";\r\n        tabOpenOmegaOmega.style.display = \"inline\";\r\n        tabOpenStats.style.display = \"inline\";\r\n        tabOpenAchievements.style.display = \"inline\";\r\n    }\r\n}\r\n\r\nfunction devToolsVisibilityUpdate(): void {\r\n    tabOpenDev.style.display = playerSettings.devToggled ? \"inline\" : \"none\";\r\n    devToggle.textContent = playerSettings.devToggled.toString();\r\n}\r\n\r\nfunction autoSaveSet(): void {\r\n    const delay = delayArray[playerSettings.autoSaveMode];\r\n    playerSettings.autoSaveSet = playerSettings.autoSaveDelay = delay ?? 1e308;\r\n    autosaveElement.textContent =\r\n        delay !== undefined ? `On, delay: ${format(delay / 10)}s` : \"Off\";\r\n}\r\n\r\nwindow.autosavesettings = function (): void {\r\n    playerSettings.autoSaveMode =\r\n        (playerSettings.autoSaveMode + 1) % delayArray.length;\r\n    autoSaveSet();\r\n    saveSettings();\r\n};\r\n\r\nfunction pcaTestSingle(): void {\r\n    if (getUpgradeTimesBought(\"unlockpca\").eq(Decimal.dOne)) {\r\n        untilPcaElement.textContent =\r\n            format(player.chunkAutobuyerTimeLeft) + \" left until next autobuy\";\r\n        getElement(\"divtogglepca\").style.display = \"inline-block\";\r\n\r\n        divTogglePcaElement.textContent = player.pcaToggle ? \"on\" : \"off\";\r\n    }\r\n}\r\n\r\nfunction agaTestSingle(): void {\r\n    if (getUpgradeTimesBought(\"unlockaga\").eq(Decimal.dOne)) {\r\n        untilAgaElement.textContent =\r\n            format(player.chunkAutobuyerTimeLeft) + \" left until next autobuy\";\r\n        getElement(\"divtoggleaga\").style.display = \"inline-block\";\r\n\r\n        divToggleAgaElement.textContent = player.agaToggle ? \"On\" : \"Off\";\r\n    }\r\n}\r\n\r\nfunction baTestSingle() {\r\n    if (getUpgradeTimesBought(\"bangautobuyerunlock\").eq(Decimal.dOne)) {\r\n        getElement(\"untilba\").textContent =\r\n            format(player.bangAutobuyerTimeLeft) + \" left until next autobuy\";\r\n        getElement(\"divtoggleba\").style.display = \"inline-block\";\r\n\r\n        getElement(\"divtoggleba\").textContent = player.bangAutobuyerToggle\r\n            ? \"On\"\r\n            : \"Off\";\r\n    }\r\n}\r\n\r\nfunction maTestSingle() {\r\n    if (getUpgradeTimesBought(\"mergeautobuyerunlock\").eq(Decimal.dOne)) {\r\n        getElement(\"untilma\").textContent =\r\n            format(player.mergeAutobuyerTimeLeft) + \" left until next autobuy\";\r\n        getElement(\"divtogglema\").style.display = \"inline-block\";\r\n\r\n        getElement(\"divtogglema\").textContent = player.mergeAutobuyerToggle\r\n            ? \"On\"\r\n            : \"Off\";\r\n    }\r\n}\r\n\r\nfunction fgbTestSingle() {\r\n    if (getUpgradeTimesBought(\"gen\").eq(Decimal.dZero)) {\r\n        getElement(\"divgencost\").textContent = \"Cost: Free\";\r\n    } else {\r\n        UpdateCostDisplay(\"divgencost\", getUpgradeCost(\"gen\"));\r\n    }\r\n}\r\n\r\nlet nuclearParticles = getUpgradeTimesBought(\"nuclearbuy\");\r\nif (getUpgradeTimesBought(\"unlocknpboost\").eq(Decimal.dOne)) {\r\n    nuclearParticles = onBought([\r\n        \"nuclearbuy\",\r\n        \"*\",\r\n        [\r\n            Decimal.dOne,\r\n            \"+\",\r\n            [\"upgradenpboost\", \"+\", Decimal.dOne, \"/\", Decimal.dTen]\r\n        ]\r\n    ]);\r\n}\r\nlet nuclearAlphaParticles = getUpgradeTimesBought(\"nuclearalphabuy\");\r\nif (getUpgradeTimesBought(\"unlocknapboost\").eq(Decimal.dOne)) {\r\n    nuclearAlphaParticles = onBought([\r\n        \"nuclearalphabuy\",\r\n        \"*\",\r\n        [\r\n            Decimal.dOne,\r\n            \"+\",\r\n            [\"upgradenapboost\", \"+\", Decimal.dOne, \"/\", Decimal.dTen]\r\n        ]\r\n    ]);\r\n}\r\n\r\nfunction instantAutobuyerState(\r\n    autobuyerVar: InstantAutobuyerName,\r\n    autobuyerDiv: string\r\n): void {\r\n    getElement(autobuyerDiv).textContent = player.instantAutobuyers[\r\n        autobuyerVar\r\n    ]\r\n        ? \"On\"\r\n        : \"Off\";\r\n}\r\n\r\nfunction amountUpdate() {\r\n    if (getUpgradeTimesBought(\"unlocknpboost\").eq(Decimal.dOne)) {\r\n        getElement(\"divnp\").textContent =\r\n            \"Nuclear Particles: \" + formatDecimal(nuclearParticles, 1);\r\n    } else {\r\n        getElement(\"divnp\").textContent =\r\n            \"Nuclear Particles: \" +\r\n            formatBig(getUpgradeTimesBought(\"nuclearbuy\"));\r\n    }\r\n    if (getUpgradeTimesBought(\"unlocknapboost\").eq(Decimal.dOne)) {\r\n        getElement(\"divnap\").textContent =\r\n            \"Nuclear Alpha Particles: \" +\r\n            formatDecimal(nuclearAlphaParticles, 1);\r\n    } else {\r\n        getElement(\"divnap\").textContent =\r\n            \"Nuclear Alpha Particles: \" +\r\n            formatBig(getUpgradeTimesBought(\"nuclearalphabuy\"));\r\n    }\r\n\r\n    getElement(\"chunkamount\").textContent =\r\n        \"Particle Chunks: \" + formatBig(player.pChunks);\r\n    getElement(\"groupamount\").textContent =\r\n        \"Particle Chunks: \" + formatBig(player.aGroups);\r\n\r\n    getElement(\"omegabasecost\").textContent =\r\n        \"Cost: \" + formatBig(player.omegaBaseCost);\r\n    getElement(\"divobase\").textContent =\r\n        \"You have \" + formatBig(player.omegaBase);\r\n    getElement(\"omegaalphacost\").textContent =\r\n        \"Cost: \" + formatBig(player.omegaAlphaCost);\r\n    getElement(\"divoalpha\").textContent =\r\n        \"You have \" + formatBig(player.omegaAlpha);\r\n\r\n    if (getUpgradeTimesBought(\"omegabooster\").lte(3)) {\r\n        getElement(\"divomegaboostersbought\").textContent =\r\n            `Bought: ${getUpgradeTimesBought(\"omegabooster\").toString()}/3`;\r\n        if (getUpgradeTimesBought(\"omegabooster\").gte(3)) {\r\n            getElement(\"omegaboosterbutton\").style.display = \"none\"\r\n        }\r\n    }\r\n\r\n    for (const autobuyerName in player.instantAutobuyers) {\r\n        const autobuyerDiv = `div${autobuyerName}`;\r\n\r\n        if (!isAutobuyerName(autobuyerName)) {\r\n            throw new Error(\r\n                \"autoBuyerName dosen't match InstantAutobuyerName type\"\r\n            );\r\n        }\r\n        instantAutobuyerState(autobuyerName, autobuyerDiv);\r\n    }\r\n}\r\n\r\nfunction loadMisc(): void {\r\n    for (const upgradeName of UpgradeNames) {\r\n        const upgrade = upgrades[upgradeName];\r\n        if (!(\"costRounding\" in upgrade)) {\r\n            UpdateCostDisplay(\r\n                upgrade.costDiv,\r\n                getUpgradeCost(upgradeName),\r\n                upgrade.currency\r\n            );\r\n        } else {\r\n            UpdateCostDisplay(\r\n                upgrade.costDiv,\r\n                getUpgradeCost(upgradeName),\r\n                upgrade.currency,\r\n                upgrade.costRounding\r\n            );\r\n        }\r\n    }\r\n\r\n    themeExec();\r\n\r\n    prePUD();\r\n    passiveUnlockDisplay();\r\n\r\n    autoSaveSet();\r\n\r\n    devToolsVisibilityUpdate();\r\n\r\n    pcaTestSingle();\r\n    agaTestSingle();\r\n    baTestSingle();\r\n    maTestSingle();\r\n    fgbTestSingle();\r\n\r\n    getElement(\"counter\").innerHTML =\r\n        \"<span style='color: #64ed93;'>\" +\r\n        formatBig(player.num) +\r\n        \"</span> particles\";\r\n    getElement(\"particlespersecond\").innerHTML =\r\n        \"You are getting <span style='color: #ed6464;'> 0 </span> particles/s\";\r\n\r\n    amountUpdate();\r\n}\r\n\r\nfunction makeElementMap(...names: string[]): Record<string, HTMLElement> {\r\n    return Object.fromEntries(names.map(x => [x, getElement(x)] as const));\r\n}\r\n\r\nconst tabElements = makeElementMap(\r\n    \"Base\",\r\n    \"Factory\",\r\n    \"Alpha\",\r\n    \"Beta\",\r\n    \"Reactor\",\r\n    \"Gamma\",\r\n    \"Delta\",\r\n    \"Omega\",\r\n    \"OmegaOmega\",\r\n    \"Achievements\",\r\n    \"Stats\",\r\n    \"Settings\",\r\n    \"Tutorial\",\r\n    \"Dev\"\r\n);\r\nconst tabOmegaElements = makeElementMap(\r\n    \"oBase\",\r\n    \"oAlpha\",\r\n    \"oBeta\",\r\n    \"oGamma\",\r\n    \"oDelta\"\r\n);\r\n\r\nfunction hideElements(elements: Record<string, HTMLElement>) {\r\n    for (const name in elements) {\r\n        const element = elements[name];\r\n        if (element === undefined) {\r\n            throw new Error(\"element dosen't exist\");\r\n        }\r\n        element.style.display = \"none\";\r\n    }\r\n}\r\n\r\nwindow.openTab = function (tab: string): void {\r\n    if (tab in tabOmegaElements) {\r\n        hideElements(tabOmegaElements);\r\n    } else {\r\n        hideElements(tabElements);\r\n    }\r\n    getElement(tab).style.display = \"block\";\r\n};\r\n\r\nloadMisc();\r\n\r\nwindow.saveExport = async function (): Promise<void> {\r\n    await navigator.clipboard.writeText(save());\r\n    alert(\"Copied to clipboard!\");\r\n};\r\n\r\nwindow.saveImport = function (): void {\r\n    getElement(\"importareaid\").style.display = \"block\";\r\n    getElement(\"saveimportconfirm\").style.display = \"block\";\r\n};\r\n\r\nwindow.saveImportConfirm = function (): void {\r\n    const saveEl = getElement(\"importareaid\", \"textarea\");\r\n    const savefile = saveEl.value; // really should check for an empty value here\r\n    localStorage.setItem(location.pathname, savefile);\r\n    location.reload();\r\n};\r\n\r\nwindow.experimentalToggle = function () {\r\n    playerSettings.useExperimental = !playerSettings.useExperimental;\r\n\r\n    if (playerSettings.useExperimental) {\r\n        getElement(\"tabopengamma\").style.display = \"inline\";\r\n        getElement(\"tabopendelta\").style.display = \"inline\";\r\n        getElement(\"tabopenomegaomega\").style.display = \"inline\";\r\n        getElement(\"tabopenachievements\").style.display = \"inline\";\r\n    } else {\r\n        getElement(\"tabopengamma\").style.display = \"none\";\r\n        getElement(\"tabopendelta\").style.display = \"none\";\r\n        getElement(\"tabopenomegaomega\").style.display = \"none\";\r\n        getElement(\"tabopenachievements\").style.display = \"none\";\r\n    }\r\n    getElement(\"experimentoggle\").textContent =\r\n        playerSettings.useExperimental.toString();\r\n    saveSettings();\r\n};\r\n\r\nwindow.devToggle = function () {\r\n    playerSettings.devToggled = !playerSettings.devToggled;\r\n\r\n    if (playerSettings.devToggled) {\r\n        getElement(\"tabopendev\").style.display = \"inline\";\r\n    } else {\r\n        getElement(\"tabopendev\").style.display = \"none\";\r\n    }\r\n    getElement(\"devtoggle\").textContent = playerSettings.devToggled.toString();\r\n    saveSettings();\r\n};\r\n\r\ncreateAchievementHTML();\r\n\r\nlet machineProd = 10;\r\nlet clickerParticleMult = player.clickerParticles\r\n    .div(100)\r\n    .plus(Decimal.dOne)\r\n    .times(machineProd);\r\n\r\nconst reactor = {\r\n    isActive: false,\r\n    fuelTime: new Decimal(300),\r\n    boost: Decimal.dOne,\r\n    fuelMult: Decimal.dOne\r\n};\r\n//did a bunch of work here\r\nlet NAPfactor = Decimal.dOne;\r\nlet BPfactor = Decimal.dOne;\r\nlet MBfactor = Decimal.dOne;\r\nlet GBfactor = Decimal.dOne;\r\n\r\nlet totalBoostFromNP = nuclearParticles.times(reactor.boost);\r\nlet totalBoostFromNAP = nuclearAlphaParticles.times(NAPfactor);\r\nlet totalMBBoost = MBfactor.times(\r\n    Decimal.dTwo.pow(getUpgradeTimesBought(\"reactorupMB\"))\r\n);\r\n\r\nfunction reactorHandler() {\r\n    reactor.fuelTime = onBought([\r\n        new Decimal(300),\r\n        \"*\",\r\n        [new Decimal(1.25), \"^\", \"reactoruptime\"],\r\n        \"/\",\r\n        [Decimal.dTwo, \"^\", \"reactorupmult\"]\r\n    ]);\r\n\r\n    if (player.hyperfuel.lte(Decimal.dZero)) {\r\n        player.hyperfuel = Decimal.dZero;\r\n\r\n        if (player.superfuel.lte(Decimal.dZero)) {\r\n            player.superfuel = Decimal.dZero;\r\n\r\n            if (player.fuel.lte(Decimal.dZero)) {\r\n                player.fuel = Decimal.dZero;\r\n\r\n                reactor.isActive = false;\r\n            } else {\r\n                reactor.fuelMult = Decimal.dOne;\r\n                reactor.isActive = true;\r\n                player.fuel = player.fuel.minus(\r\n                    Decimal.dOne.div(reactor.fuelTime)\r\n                );\r\n            }\r\n        } else {\r\n            reactor.fuelMult = new Decimal(3);\r\n            reactor.isActive = true;\r\n            player.superfuel = player.superfuel.minus(\r\n                Decimal.dOne.div(reactor.fuelTime)\r\n            );\r\n        }\r\n    } else {\r\n        reactor.fuelMult = new Decimal(6561);\r\n        reactor.isActive = true;\r\n        player.hyperfuel = player.hyperfuel.minus(\r\n            Decimal.dOne.div(reactor.fuelTime)\r\n        );\r\n    }\r\n\r\n    if (reactor.isActive) {\r\n        reactor.boost = onBoughtInc([\r\n            [new Decimal(1.25), \"^\", \"reactorupmult\"],\r\n            \"*\",\r\n            reactor.fuelMult\r\n        ]);\r\n        getElement(\r\n            \"divreactorstatus\"\r\n        ).textContent = `Reactor status: Running (${formatDecimal(\r\n            player.fuel,\r\n            2\r\n        )} Fuel)`;\r\n    } else {\r\n        reactor.boost = Decimal.dOne;\r\n        getElement(\"divreactorstatus\").textContent =\r\n            \"Reactor status: Out of fuel\";\r\n    }\r\n    getElement(\r\n        \"divreactorfuelusage\"\r\n    ).textContent = `When active, your reactor is using up 1 fuel every ${formatBig(\r\n        reactor.fuelTime.div(Decimal.dTen)\r\n    )} seconds`;\r\n\r\n    let NAPtoggle = false;\r\n    let BPtoggle = false;\r\n    let MBtoggle = false;\r\n    let GBtoggle = false;\r\n\r\n    if (getUpgradeTimesBought(\"reactorUnlockNAP\").eq(Decimal.dOne)) {\r\n        NAPtoggle = true;\r\n        getElement(\"divreactorunlockNAPcost\").textContent = \"Unlocked\";\r\n        getElement(\"divreactornap\").style.display = \"block\";\r\n    }\r\n    if (getUpgradeTimesBought(\"reactorUnlockBP\").eq(Decimal.dOne)) {\r\n        BPtoggle = true;\r\n        getElement(\"divreactorunlockBPcost\").textContent = \"Unlocked\";\r\n        getElement(\"divreactorbp\").style.display = \"block\";\r\n    }\r\n    if (getUpgradeTimesBought(\"reactorUnlockMB\").eq(Decimal.dOne)) {\r\n        MBtoggle = true;\r\n        getElement(\"divreactorunlockMBcost\").textContent = \"Unlocked\";\r\n        getElement(\"divreactormb\").style.display = \"block\";\r\n    }\r\n    if (getUpgradeTimesBought(\"reactorUnlockGB\").eq(Decimal.dOne)) {\r\n        GBtoggle = true;\r\n        getElement(\"divreactorunlockGBcost\").textContent = \"Unlocked\";\r\n        getElement(\"divreactorgb\").style.display = \"block\";\r\n    }\r\n\r\n    NAPfactor = NAPtoggle\r\n        ? reactor.boost.plus(Decimal.dOne).div(Decimal.dTwo)\r\n        : Decimal.dOne;\r\n    BPfactor = BPtoggle ? reactor.boost.plus(3).div(4) : Decimal.dOne;\r\n    MBfactor = MBtoggle ? reactor.boost.pow(Decimal.dTwo) : Decimal.dOne;\r\n    GBfactor = GBtoggle\r\n        ? reactor.boost.plus(Decimal.dTwo).div(3)\r\n        : Decimal.dOne;\r\n\r\n    if (!reactor.isActive) {\r\n        //just to make sure boosts are definitely inactive when reactor is out of fuel\r\n        NAPfactor = Decimal.dOne;\r\n        BPfactor = Decimal.dOne;\r\n        GBfactor = Decimal.dOne;\r\n        MBfactor = Decimal.dOne;\r\n        totalMBBoost = Decimal.dOne;\r\n    } else {\r\n        totalMBBoost = MBfactor.times(\r\n            Decimal.dTwo.pow(getUpgradeTimesBought(\"reactorupMB\"))\r\n        );\r\n    }\r\n\r\n    totalBoostFromNP = nuclearParticles.times(reactor.boost);\r\n    totalBoostFromNAP = nuclearAlphaParticles.times(NAPfactor);\r\n\r\n    getElement(\"divreactormain\").textContent = `Current Reactor effects:`;\r\n    getElement(\r\n        \"divreactornp\"\r\n    ).textContent = `Nuclear Particles ${formatBigSpecific(\r\n        reactor.boost\r\n    )}x as strong`;\r\n    getElement(\"divreactormb\").textContent = `Manual Boost ${formatBigSpecific(\r\n        totalMBBoost\r\n    )}x as strong`;\r\n    getElement(\r\n        \"divreactornap\"\r\n    ).textContent = `Nuclear Alpha Particles ${formatBigSpecific(\r\n        NAPfactor\r\n    )}x as strong`;\r\n    getElement(\r\n        \"divreactorgb\"\r\n    ).textContent = `Generator Boost ${formatBigSpecific(GBfactor)}x as strong`;\r\n    getElement(\r\n        \"divreactorbp\"\r\n    ).textContent = `Booster Particle gain increase by ${formatBigSpecific(\r\n        BPfactor\r\n    )}x`;\r\n}\r\n\r\nwindow.mbman = function (): void {\r\n    const gain = onBoughtInc(\r\n        \"mbup\",\r\n        \"*\",\r\n        \"mbmult\",\r\n        \"*\",\r\n        clickerParticleMult,\r\n        \"*\",\r\n        totalBoostFromNP.plus(Decimal.dOne),\r\n        \"*\",\r\n        totalMBBoost\r\n    );\r\n\r\n    player.num = player.num.plus(gain);\r\n    getElement(\"counter\").textContent = formatBig(player.num) + \" particles\";\r\n};\r\n\r\nwindow.gbboost = function (): void {\r\n    player.genBoostTimeLeft = player.genBoostTimeLeftCon;\r\n};\r\n\r\nfunction makechunk(): void {\r\n    if (player.num.gte(1e9)) {\r\n        player.num = player.num.minus(1e9);\r\n        player.pChunks = player.pChunks.plus(Decimal.dOne);\r\n        getElement(\"chunkamount\").textContent =\r\n            \"Particle Chunks: \" + formatBig(player.pChunks);\r\n    }\r\n}\r\nwindow.makechunk = makechunk;\r\n\r\nfunction bang(): void {\r\n    if (player.pChunks.gte(Decimal.dTwo)) {\r\n        if (\r\n            getUpgradeTimesBought(\"alphaacc\").gt(Decimal.dZero) &&\r\n            !(\r\n                player.bangTimeLeft >= 0 &&\r\n                player.bangTimeLeft <= player.bangTime\r\n            )\r\n        ) {\r\n            player.pChunks = player.pChunks.minus(Decimal.dTwo);\r\n            player.bangTimeLeft = player.bangTime;\r\n            getElement(\"chunkamount\").textContent =\r\n                \"Particle Chunks: \" + formatBig(player.pChunks);\r\n            getElement(\"boostersmaintext\").style.display = \"block\";\r\n        }\r\n    }\r\n}\r\nwindow.bang = bang;\r\n\r\nwindow.togglepca = function (): void {\r\n    if (getUpgradeTimesBought(\"unlockpca\").eq(Decimal.dOne)) {\r\n        player.pcaToggle = !player.pcaToggle;\r\n        getElement(\"divtogglepca\").style.display = \"inline-block\";\r\n\r\n        getElement(\"divtogglepca\").textContent = player.pcaToggle\r\n            ? \"On\"\r\n            : \"Off\";\r\n    }\r\n};\r\n\r\nwindow.toggleaga = function (): void {\r\n    if (getUpgradeTimesBought(\"unlockaga\").eq(Decimal.dOne)) {\r\n        player.agaToggle = !player.agaToggle;\r\n        getElement(\"divtoggleaga\").style.display = \"inline-block\";\r\n\r\n        getElement(\"divtoggleaga\").textContent = player.agaToggle\r\n            ? \"On\"\r\n            : \"Off\";\r\n    }\r\n};\r\n\r\nwindow.buyomegabase = function (): void {\r\n    if (player.num.gte(player.omegaBaseCost)) {\r\n        player.num = player.num.minus(player.omegaBaseCost);\r\n        player.omegaBase = player.omegaBase.plus(Decimal.dOne);\r\n        player.omegaBaseCost = player.omegaBaseCost.times(Decimal.dTen);\r\n        getElement(\"omegabasecost\").textContent =\r\n            \"Cost: \" + formatBig(player.omegaBaseCost);\r\n        getElement(\"divobase\").textContent =\r\n            \"You have \" + formatBig(player.omegaBase);\r\n    }\r\n};\r\n\r\nwindow.buyomegaalpha = function (): void {\r\n    if (player.alphaNum.gte(player.omegaAlphaCost)) {\r\n        player.alphaNum = player.alphaNum.minus(player.omegaAlphaCost);\r\n        player.omegaAlpha = player.omegaAlpha.plus(Decimal.dOne);\r\n        player.omegaAlphaCost = player.omegaAlphaCost.times(100);\r\n        getElement(\"omegaalphacost\").textContent =\r\n            \"Cost: \" + formatBig(player.omegaAlphaCost);\r\n        getElement(\"divoalpha\").textContent =\r\n            \"You have \" + formatBigSpecific(player.omegaAlpha);\r\n    }\r\n};\r\n\r\nwindow.buyomegabeta = function (): void {\r\n    /* TODO: implement this */\r\n};\r\nwindow.buyomegagamma = function (): void {\r\n    /* TODO: implement this */\r\n};\r\nwindow.buyomegadelta = function (): void {\r\n    /* TODO: implement this */\r\n};\r\n\r\nwindow.toggleba = function (): void {\r\n    if (getUpgradeTimesBought(\"bangautobuyerunlock\").eq(Decimal.dOne)) {\r\n        player.bangAutobuyerToggle = !player.bangAutobuyerToggle;\r\n        getElement(\"divtoggleba\").style.display = \"inline-block\";\r\n\r\n        if (player.bangAutobuyerToggle) {\r\n            getElement(\"divtoggleba\").textContent = \"On\";\r\n        } else {\r\n            getElement(\"divtoggleba\").textContent = \"Off\";\r\n        }\r\n    }\r\n};\r\n\r\nwindow.togglema = function (): void {\r\n    if (getUpgradeTimesBought(\"mergeautobuyerunlock\").eq(Decimal.dOne)) {\r\n        player.mergeAutobuyerToggle = !player.mergeAutobuyerToggle;\r\n        getElement(\"divtogglema\").style.display = \"inline-block\";\r\n\r\n        if (player.mergeAutobuyerToggle) {\r\n            getElement(\"divtogglema\").textContent = \"On\";\r\n        } else {\r\n            getElement(\"divtogglema\").textContent = \"Off\";\r\n        }\r\n    }\r\n};\r\n\r\nfunction makegroup(): void {\r\n    if (player.alphaNum.gte(1e9)) {\r\n        player.alphaNum = player.alphaNum.minus(1e9);\r\n        player.aGroups = player.aGroups.plus(Decimal.dOne);\r\n        getElement(\"groupamount\").textContent =\r\n            \"Alpha Groups: \" + formatBig(player.aGroups);\r\n    }\r\n}\r\nwindow.makegroup = makegroup;\r\n\r\nfunction merge(): void {\r\n    if (player.aGroups.gte(Decimal.dTwo)) {\r\n        if (\r\n            getUpgradeTimesBought(\"betaacc\").gt(Decimal.dZero) &&\r\n            !(\r\n                player.mergeTimeLeft >= 0 &&\r\n                player.mergeTimeLeft <= player.mergeTime\r\n            )\r\n        ) {\r\n            player.aGroups = player.aGroups.minus(Decimal.dTwo);\r\n            player.mergeTimeLeft = player.mergeTime;\r\n            getElement(\"groupamount\").textContent =\r\n                \"Alpha Groups: \" + formatBig(player.aGroups);\r\n        }\r\n    }\r\n}\r\nwindow.merge = merge;\r\n\r\nwindow.instantAutobuyerToggle = function (\r\n    autobuyerVar: InstantAutobuyerName,\r\n    autobuyerDiv: string\r\n): void {\r\n    player.instantAutobuyers[autobuyerVar] =\r\n        !player.instantAutobuyers[autobuyerVar];\r\n    getElement(autobuyerDiv).textContent = player.instantAutobuyers[\r\n        autobuyerVar\r\n    ]\r\n        ? \"On\"\r\n        : \"Off\";\r\n};\r\n\r\ntype Fuels = \"player.fuel\" | \"player.superfuel\" | \"player.hyperfuel\";\r\n\r\nwindow.buyFuel = function (fuelType: Fuels) {\r\n    if (fuelType === \"player.fuel\") {\r\n        if (\r\n            player.num.gte(1e42) &&\r\n            player.alphaNum.gte(1e14) &&\r\n            player.betaNum.gte(50)\r\n        ) {\r\n            player.num = player.num.minus(1e42);\r\n            player.alphaNum = player.alphaNum.minus(1e14);\r\n            player.betaNum = player.betaNum.minus(50);\r\n            player.fuel = player.fuel.plus(Decimal.dOne);\r\n        }\r\n    } else {\r\n        //do this later TODO:\r\n    }\r\n};\r\n\r\nlet alphaFromReturn = Decimal.dZero;\r\n\r\nfunction returnParticleHandler(): void {\r\n    if (getUpgradeTimesBought(\"buyreturngenerator\").gt(Decimal.dZero)) {\r\n        const gain = onBought([\r\n            new Decimal(10),\r\n            \"*\",\r\n            \"buyreturngenerator\",\r\n            \"*\",\r\n            player.betaNum,\r\n            \"*\",\r\n            [\"rpup\", \"+\", Decimal.dOne]\r\n        ]);\r\n        player.returnParticles = player.returnParticles.plus(gain);\r\n\r\n        alphaFromReturn = onBought([\r\n            new Decimal(\"1e9 \"),\r\n            \"*\",\r\n            [Decimal.dTwo, \"^\", \"rpmult\"],\r\n            [totalBoostFromNAP, \"+\", Decimal.dOne],\r\n            [Decimal.dTwo, \"^\", \"alphamachinedouble\"]\r\n        ]);\r\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\r\n        getElement(\"returnboosttext\").textContent = `Your ${formatBig(\r\n            player.returnParticles\r\n        )} Return particles (+${formatBig(\r\n            gain.div(10)\r\n        )}/s) are returning ${formatBig(\r\n            alphaFromReturn.div(10)\r\n        )} Alpha particles per second`;\r\n    }\r\n}\r\n//<div id=\"returnboosttext\">Your 0 Return particles (+0/s) are returning 0 Alpha particles per second\r\nfunction fgbTestConst(): void {\r\n    if (getUpgradeTimesBought(\"gen\").gt(Decimal.dZero)) {\r\n        getElement(\"boostsection\").style.display = \"flex\";\r\n        getElement(\"bigboosttext\").style.display = \"block\";\r\n        getElement(\"veryouterboost\").style.display = \"block\";\r\n\r\n        if (getUpgradeTimesBought(\"unlocknpboost\").eq(Decimal.dOne)) {\r\n            nuclearParticles = onBought([\r\n                \"nuclearbuy\",\r\n                \"*\",\r\n                [\r\n                    Decimal.dOne,\r\n                    \"+\",\r\n                    [\"upgradenpboost\", \"+\", Decimal.dOne, \"/\", new Decimal(10)]\r\n                ]\r\n            ]);\r\n            getElement(\"npboostshow\").style.display = \"block\";\r\n            getElement(\"npboostunlockbutton\").style.display = \"none\";\r\n            getElement(\"divnpboostcost\").style.display = \"none\";\r\n        } else {\r\n            nuclearParticles = getUpgradeTimesBought(\"nuclearbuy\");\r\n            getElement(\"npboostshow\").style.display = \"none\";\r\n        }\r\n        if (getUpgradeTimesBought(\"unlocknapboost\").eq(Decimal.dOne)) {\r\n            nuclearAlphaParticles = onBought([\r\n                \"nuclearalphabuy\",\r\n                \"*\",\r\n                [\r\n                    Decimal.dOne,\r\n                    \"+\",\r\n                    [\"upgradenapboost\", \"+\", Decimal.dOne, \"/\", new Decimal(10)]\r\n                ]\r\n            ]);\r\n            getElement(\"napboostshow\").style.display = \"block\";\r\n            getElement(\"napboostunlockbutton\").style.display = \"none\";\r\n            getElement(\"divnapboostcost\").style.display = \"none\";\r\n        } else {\r\n            nuclearAlphaParticles = getUpgradeTimesBought(\"nuclearalphabuy\");\r\n            getElement(\"napboostshow\").style.display = \"none\";\r\n        }\r\n\r\n        if (getUpgradeTimesBought(\"gen\").eq(Decimal.dZero)) {\r\n            getElement(\"divgencost\").textContent = \"Cost: Free\";\r\n        } else {\r\n            UpdateCostDisplay(\"divgencost\", getUpgradeCost(\"gen\"));\r\n        }\r\n\r\n        reactorHandler();\r\n        returnParticleHandler();\r\n\r\n        getElement(\r\n            \"nptext\"\r\n        ).textContent = `Nuclear particles add a +${formatDecimal(\r\n            reactor.boost,\r\n            2\r\n        )}x multiplier to generators, generator boost, and manual boost`;\r\n        getElement(\r\n            \"naptext\"\r\n        ).textContent = `Nuclear particles add a +${formatDecimal(\r\n            reactor.boost,\r\n            2\r\n        )}x multiplier to alpha gain`;\r\n\r\n        const boostsacmult = new Decimal(1.5).pow(\r\n            getUpgradeTimesBought(\"boostsacrifice\")\r\n        );\r\n\r\n        getElement(\r\n            \"boostsactext\"\r\n        ).textContent = `Reset your Booster Particles, but increase Booster Particle and Alpha Particle gain. Currently ${formatDecimal(\r\n            boostsacmult,\r\n            1\r\n        )}x.`;\r\n\r\n        if (player.genBoostTimeLeft.greaterThan(Decimal.dZero)) {\r\n            player.genBoostMult = getUpgradeTimesBought(\"genboostupmult\")\r\n                .times(1.5)\r\n                .plus(Decimal.dTwo)\r\n                .times(GBfactor);\r\n        } else {\r\n            player.genBoostMult = Decimal.dOne;\r\n        }\r\n\r\n        if (getUpgradeTimesBought(\"unlockgenboost\").eq(Decimal.dOne)) {\r\n            getElement(\"gbshow\").style.display = \"block\";\r\n            getElement(\"divgenunlockcost\").style.display = \"none\";\r\n            getElement(\"gbunlockbutton\").style.display = \"none\";\r\n        }\r\n\r\n        if (getUpgradeTimesBought(\"unlockabgb\").eq(Decimal.dOne)) {\r\n            getElement(\"abgbshow\").style.display = \"block\";\r\n            getElement(\"divabgbcost\").style.display = \"none\";\r\n            getElement(\"abgbunlockbutton\").style.display = \"none\";\r\n        }\r\n\r\n        player.bangTime = Math.ceil(\r\n            300 / 2 ** getUpgradeTimesBought(\"bangspeed\").toNumber()\r\n        );\r\n\r\n        const alphaGain = onBought(\r\n            \"alphaacc\",\r\n            [\"perbang\", \"+\", Decimal.dOne],\r\n            [totalBoostFromNAP, \"+\", Decimal.dOne],\r\n            [Decimal.dTwo, \"^\", \"alphamachinedouble\"]\r\n        ).times(boostsacmult);\r\n\r\n        player.mergeTime = Math.ceil(\r\n            300 / 2 ** getUpgradeTimesBought(\"mergespeed\").toNumber()\r\n        );\r\n\r\n        const betaGain = onBought(\r\n            \"betaacc\",\r\n            [\"permerge\", \"+\", Decimal.dOne],\r\n            [Decimal.dTwo, \"^\", \"doublebeta\"]\r\n        );\r\n\r\n        if (player.bangTimeLeft === 0) {\r\n            player.alphaNum = player.alphaNum\r\n                .plus(alphaGain)\r\n                .plus(alphaFromReturn);\r\n            getElement(\"bangtimeleft\").textContent = \"\";\r\n        }\r\n\r\n        if (player.mergeTimeLeft === 0) {\r\n            player.betaNum = player.betaNum.plus(betaGain);\r\n            getElement(\"mergetimeleft\").textContent = \"\";\r\n        }\r\n\r\n        if (getUpgradeTimesBought(\"machine\").gte(Decimal.dOne)) {\r\n            machineProd = 9 / Math.log10(player.machineWear) + 1;\r\n            player.machineWear += 1;\r\n        }\r\n\r\n        clickerParticleMult = player.clickerParticles\r\n            .div(50)\r\n            .plus(Decimal.dOne);\r\n\r\n        let abgbBoost = Decimal.dOne;\r\n\r\n        if (getUpgradeTimesBought(\"unlockabgb\").gt(Decimal.dZero)) {\r\n            abgbBoost = onBoughtInc(\r\n                player.alphaNum.cbrt(),\r\n                \"/\",\r\n                new Decimal(100),\r\n                \"*\",\r\n                \"abgbefficiency\",\r\n                \"+\",\r\n                Decimal.dOne\r\n            );\r\n        }\r\n\r\n        getElement(\r\n            \"abgbtext\"\r\n        ).textContent = `Your alpha-based generator boost is multiplying your generators by ${formatBig(\r\n            abgbBoost\r\n        )}x (cbrt(alpha)/100*${formatBig(\r\n            getUpgradeTimesBought(\"abgbefficiency\").plus(Decimal.dOne)\r\n        )})`;\r\n\r\n        const gain: Decimal = onBought(\r\n            [\"biggerbatches\", \"+\", Decimal.dOne],\r\n            \"*\",\r\n            \"gen\",\r\n            \"*\",\r\n            [\"speed\", \"/\", Decimal.dTen, \"+\", new Decimal(0.1)],\r\n            \"*\",\r\n            player.genBoostMult,\r\n            \"*\",\r\n            [[totalBoostFromNP, \"+\", Decimal.dOne], \"^\", Decimal.dTwo],\r\n            \"*\",\r\n            [new Decimal(3), \"^\", \"threeboost\"],\r\n            \"*\",\r\n            [\r\n                Decimal.dOne,\r\n                \"+\",\r\n                [\r\n                    [player.boosterParticles, \"+\", Decimal.dOne],\r\n                    \"/\",\r\n                    new Decimal(100),\r\n                    \"*\",\r\n                    [\r\n                        [\"boosteruppercent\", \"+\", Decimal.dOne],\r\n                        \"/\",\r\n                        new Decimal(100)\r\n                    ]\r\n                ]\r\n            ],\r\n            \"*\",\r\n            abgbBoost,\r\n            \"*\",\r\n            GBfactor\r\n        );\r\n\r\n        getElement(\"particlesperclick\").textContent =\r\n            \"You are getting \" +\r\n            formatBig(\r\n                onBought(\r\n                    [\"mbup\", \"+\", Decimal.dOne],\r\n                    \"*\",\r\n                    [\"mbmult\", \"+\", Decimal.dOne],\r\n                    \"*\",\r\n                    [totalBoostFromNP, \"+\", Decimal.dOne]\r\n                )\r\n                    .times(clickerParticleMult)\r\n                    .times(totalMBBoost)\r\n            ) +\r\n            \" particles per click\";\r\n\r\n        getElement(\"alphapb\").textContent =\r\n            \"You are getting \" + formatBig(alphaGain) + \" Alpha/bang\";\r\n        getElement(\"bangtimeconst\").textContent =\r\n            \"Currently, bangs take \" +\r\n            format(player.bangTime / 10) +\r\n            \" seconds.\";\r\n        player.bangTimeLeft -= 1;\r\n\r\n        if (\r\n            player.bangTimeLeft >= 0 &&\r\n            player.bangTimeLeft <= player.bangTime\r\n        ) {\r\n            getElement(\"bangtimeleft\").textContent =\r\n                \"Bang time left: \" + format(player.bangTimeLeft / 10);\r\n            getElement(\"bangbutton\").style.display = \"none\";\r\n        } else {\r\n            getElement(\"bangbutton\").style.display = \"block\";\r\n        }\r\n\r\n        getElement(\"betapb\").textContent =\r\n            \"You are getting \" + formatBig(betaGain) + \" Beta/merge\";\r\n        getElement(\"mergetimeconst\").textContent =\r\n            \"Currently, merges take \" +\r\n            format(player.mergeTime / 10) +\r\n            \" seconds.\";\r\n        player.mergeTimeLeft -= 1;\r\n\r\n        if (\r\n            player.mergeTimeLeft >= 0 &&\r\n            player.mergeTimeLeft <= player.mergeTime\r\n        ) {\r\n            getElement(\"mergetimeleft\").textContent =\r\n                \"Merge time left: \" + format(player.mergeTimeLeft / 10);\r\n            getElement(\"mergebutton\").style.display = \"none\";\r\n        } else {\r\n            getElement(\"mergebutton\").style.display = \"block\";\r\n        }\r\n\r\n        if (player.genBoostTimeLeft.gt(Decimal.dZero)) {\r\n            player.genBoostTimeLeft = player.genBoostTimeLeft.minus(\r\n                Decimal.dOne\r\n            );\r\n        }\r\n        getElement(\"divgbtl\").textContent =\r\n            \"Boost Time Left: \" +\r\n            formatBig(player.genBoostTimeLeft.div(Decimal.dTen));\r\n\r\n        const bpGain = player.alphaNum\r\n            .times(getUpgradeTimesBought(\"boosterup\").plus(Decimal.dOne))\r\n            .times(Decimal.dTwo)\r\n            .div(Decimal.dTen)\r\n            .times(BPfactor);\r\n\r\n        player.boosterParticles = player.boosterParticles.plus(bpGain);\r\n\r\n        const percentBoostDisplay = player.boosterParticles.times(\r\n            getUpgradeTimesBought(\"boosteruppercent\")\r\n                .plus(Decimal.dOne)\r\n                .div(100)\r\n        );\r\n\r\n        if (player.boosterParticles.eq(Decimal.dZero)) {\r\n            getElement(\r\n                \"boostersmaintext\"\r\n            ).textContent = `You are currently getting 0 booster particles per alpha particle per second,\r\n               resulting in a +0% boost to base particle production`; //just added this special case\r\n            // trying to fix - usavictor\r\n        } else if (percentBoostDisplay.lt(100)) {\r\n            getElement(\r\n                \"boostersmaintext\"\r\n            ).textContent = `You are currently getting ${formatBig(\r\n                bpGain\r\n                    .times(Decimal.dTen)\r\n                    .div(player.alphaNum.max(Decimal.dOne))\r\n            )} booster particles per alpha particle per second,\r\n               resulting in a +${formatBigSpecific(\r\n                   percentBoostDisplay\r\n               )}% boost to base particle production`;\r\n        } else {\r\n            getElement(\r\n                \"boostersmaintext\"\r\n            ).textContent = `You are currently getting ${formatBig(\r\n                bpGain.times(Decimal.dTen).div(player.alphaNum)\r\n            )} booster particles per alpha particle per second,\r\n               resulting in a ${formatBigSpecific(\r\n                   percentBoostDisplay.div(100).plus(Decimal.dOne)\r\n               )}x boost to base particle production`;\r\n        }\r\n\r\n        getElement(\"bpamount\").textContent =\r\n            \"You have \" +\r\n            formatBig(player.boosterParticles) +\r\n            \" booster particles\";\r\n\r\n        const clickerParticleGain = onBought([\r\n            [\"machine\", \"*\", [new Decimal(1.5), \"^\", \"speedparticle\"]],\r\n            \"/\",\r\n            Decimal.dTen\r\n        ]).times(machineProd);\r\n        player.clickerParticles =\r\n            player.clickerParticles.plus(clickerParticleGain);\r\n\r\n        nextFeatureHandler();\r\n\r\n        getElement(\"omegabasecost\").textContent =\r\n            \"Cost: \" + formatBig(player.omegaBaseCost);\r\n        getElement(\"divobase\").textContent =\r\n            \"You have \" + formatDecimal(player.omegaBase, 1);\r\n        getElement(\"omegaalphacost\").textContent =\r\n            \"Cost: \" + formatBig(player.omegaAlphaCost);\r\n        getElement(\"divoalpha\").textContent =\r\n            \"You have \" + formatDecimal(player.omegaAlpha, 2);\r\n\r\n        player.num = player.num.plus(gain);\r\n\r\n        getElement(\"particlespersecond\").innerHTML =\r\n            \"You are getting <span style='color: #ed6464;'>\" +\r\n            formatBig(gain.times(10)) +\r\n            \"</span> particles/s\";\r\n\r\n        if (player.num.gte(1e8) || nuclearParticles.gt(Decimal.dZero)) {\r\n            getElement(\"nuclearreach\").style.display = \"none\";\r\n            getElement(\"nuclearshow\").style.display = \"block\";\r\n        }\r\n\r\n        if (\r\n            player.alphaNum.gte(1e6) ||\r\n            nuclearAlphaParticles.gt(Decimal.dZero)\r\n        ) {\r\n            getElement(\"nuclearalphareach\").style.display = \"none\";\r\n            getElement(\"nuclearalphashow\").style.display = \"block\";\r\n        }\r\n\r\n        if (player.num.gte(1e9) || player.pChunks.gt(Decimal.dZero)) {\r\n            getElement(\"bangshow\").style.display = \"block\";\r\n        }\r\n\r\n        if (player.alphaNum.gte(1e9) || player.aGroups.gt(Decimal.dZero)) {\r\n            getElement(\"mergeshow\").style.display = \"block\";\r\n\r\n            getElement(\"oAlphauupre\").style.display = \"none\";\r\n            getElement(\"oAlphauupost\").style.display = \"block\";\r\n        }\r\n\r\n        if (\r\n            player.boosterParticles.gte(1e5) ||\r\n            getUpgradeTimesBought(\"boostsacrifice\").gt(Decimal.dZero)\r\n        ) {\r\n            getElement(\"bpsacshow\").style.display = \"block\";\r\n        }\r\n\r\n        if (\r\n            player.betaNum.gte(1e5) ||\r\n            getUpgradeTimesBought(\"buyreturngenerator\").gt(Decimal.dZero)\r\n        ) {\r\n            getElement(\"returnbox\").style.display = \"block\";\r\n        }\r\n\r\n        const freeNuclearParticles = nuclearParticles.minus(\r\n            getUpgradeTimesBought(\"nuclearbuy\")\r\n        );\r\n        getElement(\r\n            \"npboosttext\"\r\n        ).textContent = `Your Nuclear Particles Boost is giving you \r\n          ${formatDecimal(freeNuclearParticles, 1)} \r\n          free Nuclear Particles`;\r\n        const freeNuclearAlphaParticles = nuclearAlphaParticles.minus(\r\n            getUpgradeTimesBought(\"nuclearalphabuy\")\r\n        );\r\n        getElement(\r\n            \"napboosttext\"\r\n        ).textContent = `Your Nuclear Alpha Particles Boost is giving you \r\n          ${formatDecimal(freeNuclearAlphaParticles, 1)} \r\n          free Nuclear Alpha Particles`;\r\n\r\n        getElement(\"counter\").innerHTML = `<span style=\"color: #64ed93\">\r\n          ${formatBig(player.num)}\r\n          </span> particles`;\r\n        getElement(\"clickercounter\").textContent = `You have \r\n          ${formatBig(player.clickerParticles)} \r\n          Clicker Particles \r\n          (${formatBig(clickerParticleGain.times(Decimal.dTen))}\r\n          /s), which are making Manual Boost \r\n          ${formatBigSpecific(clickerParticleMult)}\r\n          x stronger.`;\r\n        getElement(\"alphacounter\").textContent =\r\n            formatBig(player.alphaNum) + \" Alpha particles\";\r\n        getElement(\"betacounter\").textContent =\r\n            formatBig(player.betaNum) + \" Beta particles\";\r\n\r\n        if (getUpgradeTimesBought(\"alphaacc\").eq(Decimal.dZero)) {\r\n            getElement(\"bangwarn\").style.display = \"block\";\r\n        } else {\r\n            getElement(\"bangwarn\").style.display = \"none\";\r\n        }\r\n    }\r\n}\r\n\r\nfunction pcaTestConst(): void {\r\n    if (getUpgradeTimesBought(\"unlockpca\").eq(Decimal.dOne)) {\r\n        getElement(\"pcashow\").style.display = \"block\";\r\n        getElement(\"divunlockpca\").style.display = \"none\";\r\n        getElement(\"divunlockpcabutton\").style.display = \"none\";\r\n\r\n        if (player.pcaToggle === true) {\r\n            if (player.chunkAutobuyerTimeLeft === 0) {\r\n                player.chunkAutobuyerTimeLeft = player.pcaTime;\r\n                makechunk();\r\n            }\r\n\r\n            player.chunkAutobuyerTimeLeft--;\r\n            getElement(\"untilpca\").textContent =\r\n                format(player.chunkAutobuyerTimeLeft / 10) +\r\n                \" left until next autobuy\";\r\n        }\r\n    }\r\n}\r\n\r\nfunction agaTestConst(): void {\r\n    if (getUpgradeTimesBought(\"unlockaga\").eq(Decimal.dOne)) {\r\n        getElement(\"agashow\").style.display = \"block\";\r\n        getElement(\"divunlockaga\").style.display = \"none\";\r\n        getElement(\"divunlockagabutton\").style.display = \"none\";\r\n\r\n        if (player.agaToggle === true) {\r\n            if (player.groupAutobuyerTimeLeft === 0) {\r\n                player.groupAutobuyerTimeLeft = player.agaTime;\r\n                makegroup();\r\n            }\r\n\r\n            player.groupAutobuyerTimeLeft--;\r\n            getElement(\"untilaga\").textContent =\r\n                format(player.groupAutobuyerTimeLeft / 10) +\r\n                \" left until next autobuy\";\r\n        }\r\n    }\r\n}\r\n\r\nfunction baTestConst(): void {\r\n    if (getUpgradeTimesBought(\"bangautobuyerunlock\").eq(Decimal.dOne)) {\r\n        getElement(\"bashow\").style.display = \"block\";\r\n        getElement(\"divbau\").style.display = \"none\";\r\n        getElement(\"divbauextra\").style.display = \"none\";\r\n        getElement(\"baunlockbutton\").style.display = \"none\";\r\n\r\n        if (player.bangAutobuyerToggle === true) {\r\n            if (player.bangAutobuyerTimeLeft === 0) {\r\n                player.bangAutobuyerTimeLeft = player.bangAutobuyerTime;\r\n                bang();\r\n            }\r\n\r\n            player.bangAutobuyerTimeLeft--;\r\n            getElement(\"untilba\").textContent =\r\n                format(player.bangAutobuyerTimeLeft) +\r\n                \" left until next autobuy\";\r\n        }\r\n    }\r\n}\r\n\r\nfunction maTestConst(): void {\r\n    if (getUpgradeTimesBought(\"mergeautobuyerunlock\").eq(Decimal.dOne)) {\r\n        getElement(\"mashow\").style.display = \"block\";\r\n        getElement(\"divmau\").style.display = \"none\";\r\n        getElement(\"divmauextra\").style.display = \"none\";\r\n        getElement(\"maunlockbutton\").style.display = \"none\";\r\n\r\n        if (player.mergeAutobuyerToggle === true) {\r\n            if (player.mergeAutobuyerTimeLeft === 0) {\r\n                player.mergeAutobuyerTimeLeft = player.mergeAutobuyerTime;\r\n                merge();\r\n            }\r\n\r\n            player.mergeAutobuyerTimeLeft--;\r\n            getElement(\"untilma\").textContent =\r\n                format(player.mergeAutobuyerTimeLeft) +\r\n                \" left until next autobuy\";\r\n        }\r\n    }\r\n}\r\n\r\nfunction instantAutobuyers() {\r\n    //TODO: make this function not look like absolute garbage\r\n    if (getUpgradeTimesBought(\"GnBBAunlock\").eq(Decimal.dOne)) {\r\n        if (player.instantAutobuyers.genAutobuyerToggle) {\r\n            buyUpgrade(\"gen\");\r\n        }\r\n        if (player.instantAutobuyers.bbAutobuyerToggle) {\r\n            buyUpgrade(\"biggerbatches\");\r\n        }\r\n        getElement(\"divGnBBA\").style.display = \"none\";\r\n        getElement(\"divGnBBAhide\").style.display = \"block\";\r\n    }\r\n    if (getUpgradeTimesBought(\"GBUAunlock\").eq(Decimal.dOne)) {\r\n        if (player.instantAutobuyers.genBoostTimeAutobuyerToggle) {\r\n            buyUpgrade(\"genboostuptime\");\r\n        }\r\n        if (player.instantAutobuyers.genBoostMultAutobuyerToggle) {\r\n            buyUpgrade(\"genboostupmult\");\r\n        }\r\n        getElement(\"divGBUA\").style.display = \"none\";\r\n        getElement(\"divGBUAhide\").style.display = \"block\";\r\n    }\r\n    if (getUpgradeTimesBought(\"MBUAunlock\").eq(Decimal.dOne)) {\r\n        if (player.instantAutobuyers.manBoost1perClickAutobuyerToggle) {\r\n            buyUpgrade(\"mbup\");\r\n        }\r\n        if (player.instantAutobuyers.manBoost1xperClickAutobuyerToggle) {\r\n            buyUpgrade(\"mbmult\");\r\n        }\r\n        getElement(\"divMBUA\").style.display = \"none\";\r\n        getElement(\"divMBUAhide\").style.display = \"block\";\r\n    }\r\n    if (getUpgradeTimesBought(\"NPAunlock\").eq(Decimal.dOne)) {\r\n        if (player.instantAutobuyers.nuclearParticlesAutobuyerToggle) {\r\n            buyUpgrade(\"nuclearbuy\");\r\n        }\r\n        if (player.instantAutobuyers.nuclearAlphaParticlesAutobuyerToggle) {\r\n            buyUpgrade(\"nuclearalphabuy\");\r\n        }\r\n        getElement(\"divNPA\").style.display = \"none\";\r\n        getElement(\"divNPAhide\").style.display = \"block\";\r\n    }\r\n    if (getUpgradeTimesBought(\"AAccAunlock\").eq(Decimal.dOne)) {\r\n        if (player.instantAutobuyers.AlphaAccAutobuyerToggle) {\r\n            buyUpgrade(\"alphaacc\");\r\n        }\r\n        getElement(\"divAAccA\").style.display = \"none\";\r\n        getElement(\"divAAccAhide\").style.display = \"block\";\r\n    }\r\n    if (getUpgradeTimesBought(\"SAunlock\").eq(Decimal.dOne)) {\r\n        if (player.instantAutobuyers.SpeedAutobuyerToggle) {\r\n            buyUpgrade(\"speed\");\r\n        }\r\n        getElement(\"divSA\").style.display = \"none\";\r\n        getElement(\"divSAhide\").style.display = \"block\";\r\n    }\r\n}\r\n\r\nfunction savinginloop(): void {\r\n    playerSettings.autoSaveDelay--;\r\n\r\n    if (playerSettings.autoSaveDelay === 0) {\r\n        playerSettings.autoSaveDelay = playerSettings.autoSaveSet;\r\n        save();\r\n    }\r\n}\r\n\r\n//game loop\r\nsetInterval(() => {\r\n    passiveUnlockDisplay();\r\n    pcaTestConst();\r\n    agaTestConst();\r\n    baTestConst();\r\n    maTestConst();\r\n    fgbTestConst();\r\n    instantAutobuyers();\r\n    getElement(\"stat\").textContent = JSON.stringify(player)\r\n        .replace(/\",\"/g, '\",\\n\"')\r\n        .replace(/},\"/g, '\",\\n\"');\r\n    savinginloop();\r\n}, 100);\r\n\r\nfunction saveReplace(_key: string, value: unknown): unknown {\r\n    if (value instanceof Decimal) return \"D#\" + value.toString();\r\n    return value;\r\n}\r\n\r\nfunction saveSettings(): void {\r\n    const settingfile = JSON.stringify(playerSettings);\r\n    localStorage.setItem(location.pathname + \"settings\", settingfile);\r\n}\r\n\r\nwindow.saveSettings = saveSettings;\r\n\r\nfunction save(): string {\r\n    const savefile = btoa(JSON.stringify(player, saveReplace));\r\n    localStorage.setItem(location.pathname, savefile);\r\n    saveSettings();\r\n    return savefile;\r\n}\r\n\r\nwindow.save = save;\r\n\r\nwindow.reset = function (): void {\r\n    saveSettings();\r\n    localStorage.removeItem(location.pathname);\r\n\r\n    //make backup save\r\n    const savefile = JSON.stringify(player, saveReplace);\r\n    localStorage.setItem(location.pathname + \"backupsave\", savefile);\r\n    location.reload();\r\n};\r\n"],"names":["_classCallCheck","instance","Constructor","_defineProperties","target","props","i","descriptor","_createClass","protoProps","staticProps","LRUCache","maxSize","key","node","value","ListNode","last","MAX_SIGNIFICANT_DIGITS","EXP_LIMIT","LAYER_DOWN","FIRST_NEG_LAYER","NUMBER_EXP_MAX","NUMBER_EXP_MIN","MAX_ES_IN_A_ROW","DEFAULT_FROM_STRING_CACHE_SIZE","powerOf10","powersOf10","indexOf0InPowersOf10","power","critical_headers","critical_tetr_values","critical_slog_values","D","Decimal","fromValue_noAlloc","FC","sign","layer","mag","fromComponents","FC_NN","fromComponents_noNormalize","decimalPlaces","places","len","numDigits","rounded","f_maglog10","n","f_gamma","scal1","l","n2","np","OMEGA","f_lambertw","z","tol","w","wn","d_lambertw","ew","wewz","fromNumber","fromDecimal","fromString","exp","man","residue","absmag","signmag","normalize","mantissa","exponent","originalValue","cached","fromStringCache","pentationparts","_base","_height","heightparts","payload","result","tetrationparts","_base2","_height2","_heightparts","_payload","_result","powparts","_base3","_exponent","_result2","base","height","ptparts","_payload2","_result3","_payload3","_result4","parts","ecount","numberAttempt","_numberAttempt","newparts","layerstring","chrcode","_result5","decimal","a","b","layera","layerb","magdiff","_magdiff","_mantissa","_magdiff2","_mantissa2","newmag","_newmag","_isFinite2","isFinite","min","max","tolerance","magA","magB","t","lm","adj","l2","lt","this_num","negln","oldheight","fracheight","old_payload","next_payload","tetrate_critical","_i","times","fulltimes","fraction","layerloss","iterations","step_size","has_changed_directions_once","previously_rose","new_decimal","currently_rose","copy","slog_critical","diff","layeradd","_layeradd","slogthis","slogdest","lnx","ascensions","other","fromValue","_isNaN","isNaN","_x","_isFinite","_x2","_other","resourcesAvailable","priceStart","priceRatio","currentOwned","numItems","priceAdd","cost","currentRpS","deltaRpS","maxLayers","randomsign","randomexp","randommag","actualStart","b2","critical_section","grid","lower","upper","basefrac","frac","trunc","x","length","digitsCount","formatDecimal","d","ePlaces","format","formatBig","formatBigSpecific","assertElementType","element","type","getElement","id","operatorMap","isOperator","onDecimal","is","lookup","fn","start","terms","first","rest","splitArgs","token","operand","args","left","method","arr","head","onBought","isUpgradeName","getUpgradeTimesBought","onBoughtInc","player","playerSettings","updateGame","loadSettings","settings","decodedSettings","deepMerge","saveRevive","_key","source","data","newSource","load","save","backup","isAutobuyerName","UpgradeNames","getUpgradeCost","upgradeName","setUpgradeCost","newCost","music","musicState","startMusic","currencyName","UpdateCostDisplay","elementID","variable","currency","precision","upgrades","upgradeAmount","scaleGen","scaleMultiplier","scaleSpeed","GBTExtra","GBMExtra","NBExtra","MachineExtra","scaleBangSpeed","PCAExtra","NABExtra","GBDExtra","scaleBA","BAExtra","BSExtra","scaleReactorUpMult","scaleReactorUpTime","scaleOmegaAlphaWeak","scaleOmegaAlpha","AGAExtra","MAExtra","OBExtra","multiplier","nuclearParticles","nuclearAlphaParticles","buyUpgrade","upgrade","oldCost","achievementContainer","createAchievementHTML","newDiv","features","goal","nextFeatureHandler","feature","featureCurrency","nextGoal","percentage","divEntireBody","whatTheme","tabOpenFactory","tabOpenAlpha","tabOpenBeta","tabOpenGamma","tabOpenDelta","tabOpenOmega","tabOpenOmegaOmega","tabOpenReactor","tabOpenStats","tabOpenAchievements","tabOpenDev","devToggle","autosaveElement","divTogglePcaElement","untilPcaElement","divToggleAgaElement","untilAgaElement","delayArray","themes","themeExec","theme","textColor","bgColor","buttonColor","borderColor","gradientColor","buttonGradientOverride","themeName","disableGradient","className","className2","className3","saveSettings","prePUD","passiveUnlockDisplay","devToolsVisibilityUpdate","autoSaveSet","delay","pcaTestSingle","agaTestSingle","baTestSingle","maTestSingle","fgbTestSingle","instantAutobuyerState","autobuyerVar","autobuyerDiv","amountUpdate","autobuyerName","loadMisc","makeElementMap","names","tabElements","tabOmegaElements","hideElements","elements","name","tab","savefile","machineProd","clickerParticleMult","reactor","NAPfactor","BPfactor","MBfactor","GBfactor","totalBoostFromNP","totalBoostFromNAP","totalMBBoost","reactorHandler","NAPtoggle","BPtoggle","MBtoggle","GBtoggle","gain","makechunk","bang","makegroup","merge","fuelType","alphaFromReturn","returnParticleHandler","fgbTestConst","boostsacmult","alphaGain","betaGain","abgbBoost","bpGain","percentBoostDisplay","clickerParticleGain","freeNuclearParticles","freeNuclearAlphaParticles","pcaTestConst","agaTestConst","baTestConst","maTestConst","instantAutobuyers","savinginloop","saveReplace","settingfile"],"mappings":"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","x_google_ignoreList":[0]}